!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	simulation/solvers/solve.h	/^	Mat A; \/\/\/< Petsc Mat holding the LHS entries.$/;"	m	struct:Solver_Storage_Implicit
A	testing/support/simulation/solvers/test_support_solve.h	/^	Mat A; \/\/\/< Left-hand  side matrix for the generalized eigenvalue problem.$/;"	m	struct:Gen_Eig_Data
ACCEPTABLE_DISCOUNT	testing/integration/test_integration_convergence_support.cpp	49;"	d	file:
ADAPT_0	simulation/solvers/adaptation/definitions_adaptation.h	27;"	d
ADAPT_0_FOR_H	testing/integration/test_integration.cpp	54;"	d	file:
ADAPT_GEOM	simulation/solvers/adaptation/definitions_adaptation.h	47;"	d
ADAPT_H	simulation/solvers/adaptation/definitions_adaptation.h	29;"	d
ADAPT_HP	simulation/solvers/adaptation/definitions_adaptation.h	30;"	d
ADAPT_HP_CC	simulation/solvers/adaptation/definitions_adaptation.h	39;"	d
ADAPT_HP_CR	simulation/solvers/adaptation/definitions_adaptation.h	40;"	d
ADAPT_HP_RC	simulation/solvers/adaptation/definitions_adaptation.h	41;"	d
ADAPT_HP_RR	simulation/solvers/adaptation/definitions_adaptation.h	42;"	d
ADAPT_H_COARSE	simulation/solvers/adaptation/definitions_adaptation.h	37;"	d
ADAPT_H_CREATE	simulation/solvers/adaptation/definitions_adaptation.h	44;"	d
ADAPT_H_DESTROY	simulation/solvers/adaptation/definitions_adaptation.h	45;"	d
ADAPT_H_REFINE	simulation/solvers/adaptation/definitions_adaptation.h	36;"	d
ADAPT_NONE	simulation/solvers/adaptation/definitions_adaptation.h	23;"	d
ADAPT_P	simulation/solvers/adaptation/definitions_adaptation.h	28;"	d
ADAPT_P_COARSE	simulation/solvers/adaptation/definitions_adaptation.h	35;"	d
ADAPT_P_REFINE	simulation/solvers/adaptation/definitions_adaptation.h	34;"	d
ADAPT_S_H_COARSE	simulation/solvers/adaptation/definitions_adaptation.h	54;"	d
ADAPT_S_H_REFINE	simulation/solvers/adaptation/definitions_adaptation.h	53;"	d
ADAPT_S_P_COARSE	simulation/solvers/adaptation/definitions_adaptation.h	52;"	d
ADAPT_S_P_REFINE	simulation/solvers/adaptation/definitions_adaptation.h	51;"	d
ADAPT_S_XYZ_VE	simulation/solvers/adaptation/definitions_adaptation.h	56;"	d
ADD_ONE_BASED_INDEXING	definitions/definitions_mkl.h	35;"	d
ADVECTION_TYPE_CONST	simulation/test_case/solution/definitions_solution.h	23;"	d
ADVECTION_TYPE_VORTEX	simulation/test_case/solution/definitions_solution.h	24;"	d
ALWAYS_SET_INITIAL	simulation/solvers/solve.cpp	64;"	d	file:
ANN_Info	testing/unit/test_unit_approximate_nearest_neighbor.cpp	/^struct ANN_Info {$/;"	s	file:
Adaptation_Data	simulation/solvers/adaptation/adaptation.h	/^struct Adaptation_Data {$/;"	s
Adaptation_Element	simulation/solvers/adaptation/element_adaptation.h	/^struct Adaptation_Element {$/;"	s
Adaptive_Solver_Face	simulation/solvers/adaptation/face_solver_adaptive.h	/^struct Adaptive_Solver_Face {$/;"	s
Adaptive_Solver_Volume	simulation/solvers/adaptation/volume_solver_adaptive.h	/^struct Adaptive_Solver_Volume {$/;"	s
B	testing/support/simulation/solvers/test_support_solve.h	/^	Mat B; \/\/\/< Right-hand side matrix for the generalized eigenvalue problem.$/;"	m	struct:Gen_Eig_Data
BASE_SEED	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	49;"	d	file:
BASIS_BEZIER	definitions/definitions_bases.h	25;"	d
BASIS_LAGRANGE	definitions/definitions_bases.h	24;"	d
BASIS_ORTHO	definitions/definitions_bases.h	23;"	d
BC_BACKPRESSURE	simulation/test_case/boundary/definitions_bc.h	61;"	d
BC_CURVED_START	simulation/test_case/boundary/definitions_bc.h	34;"	d
BC_DIRICHLET	simulation/test_case/boundary/definitions_bc.h	53;"	d
BC_DIRICHLET_ALT1	simulation/test_case/boundary/definitions_bc.h	54;"	d
BC_Data	simulation/test_case/boundary/boundary_euler_T.cpp	/^struct BC_Data {$/;"	s	file:
BC_Data	simulation/test_case/boundary/def_templates_boundary.h	132;"	d
BC_Data	simulation/test_case/boundary/def_templates_boundary.h	65;"	d
BC_Data	simulation/test_case/boundary/undef_templates_boundary.h	66;"	d
BC_INFLOW	simulation/test_case/boundary/definitions_bc.h	39;"	d
BC_INFLOW_ALT1	simulation/test_case/boundary/definitions_bc.h	40;"	d
BC_INFLOW_ALT2	simulation/test_case/boundary/definitions_bc.h	41;"	d
BC_INVALID	simulation/test_case/boundary/definitions_bc.h	31;"	d
BC_NEUMANN	simulation/test_case/boundary/definitions_bc.h	55;"	d
BC_NEUMANN_ALT1	simulation/test_case/boundary/definitions_bc.h	56;"	d
BC_NOSLIP_ADIABATIC	simulation/test_case/boundary/definitions_bc.h	67;"	d
BC_NOSLIP_ALL_ROTATING	simulation/test_case/boundary/definitions_bc.h	69;"	d
BC_NOSLIP_DIABATIC	simulation/test_case/boundary/definitions_bc.h	68;"	d
BC_OUTFLOW	simulation/test_case/boundary/definitions_bc.h	42;"	d
BC_OUTFLOW_ALT1	simulation/test_case/boundary/definitions_bc.h	43;"	d
BC_OUTFLOW_ALT2	simulation/test_case/boundary/definitions_bc.h	44;"	d
BC_RIEMANN	simulation/test_case/boundary/definitions_bc.h	59;"	d
BC_SLIPWALL	simulation/test_case/boundary/definitions_bc.h	60;"	d
BC_STEP_SC	simulation/test_case/boundary/definitions_bc.h	33;"	d
BC_SUPERSONIC_IN	simulation/test_case/boundary/definitions_bc.h	63;"	d
BC_SUPERSONIC_OUT	simulation/test_case/boundary/definitions_bc.h	64;"	d
BC_TEST_S_DO_NOTHING	simulation/solvers/opg/definitions_opg.h	23;"	d
BC_TEST_S_NEEDED	simulation/solvers/opg/volume_solver_opg.h	23;"	d
BC_TEST_S_NOT_NEEDED	simulation/solvers/opg/volume_solver_opg.h	24;"	d
BC_TEST_S_SPEC_CONST	simulation/solvers/opg/definitions_opg.h	24;"	d
BC_TOTAL_TP	simulation/test_case/boundary/definitions_bc.h	62;"	d
BC_UPWIND	simulation/test_case/boundary/definitions_bc.h	45;"	d
BC_UPWIND_ALT1	simulation/test_case/boundary/definitions_bc.h	46;"	d
BC_UPWIND_ALT2	simulation/test_case/boundary/definitions_bc.h	47;"	d
BC_UPWIND_ALT3	simulation/test_case/boundary/definitions_bc.h	48;"	d
BC_UPWIND_ALT4	simulation/test_case/boundary/definitions_bc.h	49;"	d
BC_UPWIND_ALT5	simulation/test_case/boundary/definitions_bc.h	50;"	d
BOUNDARY_PERTURB_TYPE_NONE	simulation/test_case/solution/definitions_solution.h	28;"	d
BOUNDARY_PERTURB_TYPE_TRIG_X	simulation/test_case/solution/definitions_solution.h	29;"	d
BYTE_ADD	macros.h	58;"	d
BYTE_DIFF	macros.h	55;"	d
Basis_Data_PYR_Bezier	testing/unit/test_unit_bases.cpp	/^struct Basis_Data_PYR_Bezier {$/;"	s	file:
Basis_Data_PYR_Ortho	testing/unit/test_unit_bases.cpp	/^struct Basis_Data_PYR_Ortho {$/;"	s	file:
Basis_Data_SI_Bezier	testing/unit/test_unit_bases.cpp	/^struct Basis_Data_SI_Bezier {$/;"	s	file:
Basis_Data_SI_Ortho	testing/unit/test_unit_bases.cpp	/^struct Basis_Data_SI_Ortho {$/;"	s	file:
Basis_Data_TP_Bezier	testing/unit/test_unit_bases.cpp	/^struct Basis_Data_TP_Bezier {$/;"	s	file:
Basis_Data_TP_Ortho	testing/unit/test_unit_bases.cpp	/^struct Basis_Data_TP_Ortho {$/;"	s	file:
Blended_Parametric_Data_T	simulation/geometry/def_templates_geometry_blended.h	23;"	d
Blended_Parametric_Data_T	simulation/geometry/def_templates_geometry_blended.h	46;"	d
Blended_Parametric_Data_T	simulation/geometry/geometry_blended_T.h	/^struct Blended_Parametric_Data_T {$/;"	s
Blended_Parametric_Data_T	simulation/geometry/undef_templates_geometry_blended.h	20;"	d
Boundary_Comp_Elem_Data_T	simulation/geometry/def_templates_geometry_blended.h	22;"	d
Boundary_Comp_Elem_Data_T	simulation/geometry/def_templates_geometry_blended.h	45;"	d
Boundary_Comp_Elem_Data_T	simulation/geometry/geometry_blended_T.h	/^struct Boundary_Comp_Elem_Data_T {$/;"	s
Boundary_Comp_Elem_Data_T	simulation/geometry/undef_templates_geometry_blended.h	19;"	d
Boundary_Face	simulation/mesh/mesh_connectivity.cpp	/^struct Boundary_Face {$/;"	s	file:
Boundary_Face_Info	simulation/mesh/mesh_connectivity.cpp	/^struct Boundary_Face_Info {$/;"	s	file:
Boundary_Value_Input_T	simulation/test_case/boundary/boundary_T.h	/^struct Boundary_Value_Input_T {$/;"	s
Boundary_Value_Input_T	simulation/test_case/boundary/def_templates_boundary.h	23;"	d
Boundary_Value_Input_T	simulation/test_case/boundary/def_templates_boundary.h	90;"	d
Boundary_Value_Input_T	simulation/test_case/boundary/undef_templates_boundary.h	21;"	d
Boundary_Value_T	simulation/test_case/boundary/boundary_T.h	/^struct Boundary_Value_T {$/;"	s
Boundary_Value_T	simulation/test_case/boundary/def_templates_boundary.h	24;"	d
Boundary_Value_T	simulation/test_case/boundary/def_templates_boundary.h	91;"	d
Boundary_Value_T	simulation/test_case/boundary/undef_templates_boundary.h	22;"	d
C1_SUTHERLAND	simulation/test_case/solution/navier_stokes/solution_navier_stokes.h	31;"	d
C2_SUTHERLAND	simulation/test_case/solution/navier_stokes/solution_navier_stokes.h	32;"	d
CBCM	definitions/definitions_mkl.h	26;"	d
CBNT	definitions/definitions_mkl.h	31;"	d
CBRM	definitions/definitions_mkl.h	25;"	d
CBT	definitions/definitions_mkl.h	30;"	d
CHECK_LIN	testing/integration/definitions_test_integration.h	27;"	d
CHECK_LIN_ALL	testing/integration/definitions_test_integration.h	25;"	d
CHECK_LIN_FACE	testing/integration/definitions_test_integration.h	24;"	d
CHECK_LIN_VOLUME	testing/integration/definitions_test_integration.h	23;"	d
CHECK_PARTIALLY_CONVERGED	testing/integration/test_integration_conservation.cpp	43;"	d	file:
CMP_TOL	containers/multiarray.cpp	/^double CMP_TOL = 0.0; \/\/\/< Comparison tolerance used for \\ref cmp_Vector_tol_T.$/;"	v
CONSERVATION_LAGRANGE_MULT	simulation/solvers/dpg/definitions_dpg.h	34;"	d
CONSERVATION_NOT_ENFORCED	simulation/solvers/dpg/definitions_dpg.h	33;"	d
CONV_STUDY_RESTART	testing/integration/test_integration_convergence_support.h	24;"	d
CONV_STUDY_SOLVE	testing/integration/test_integration_convergence_support.h	23;"	d
CONV_STUDY_SOLVE_NO_CHECK	testing/integration/test_integration_convergence_support.h	26;"	d
CORRECT_NON_CONFORMING_GEOMETRY	simulation/solvers/adaptation/adaptation.cpp	60;"	d	file:
COUNT_OF	macros.h	51;"	d
CUB_C_COL	element/definitions_nodes.h	55;"	d
CUB_C_DIV2	element/definitions_nodes.h	54;"	d
CUB_C_STD	element/definitions_nodes.h	53;"	d
CX_STEP	definitions/definitions_tol.h	25;"	d
Complex	templates/def_templates_type_d.h	24;"	d
Complex	templates/def_templates_type_dc.h	24;"	d
Conn_info	simulation/mesh/mesh_connectivity.h	/^struct Conn_info {$/;"	s
Conv_Order_Data	testing/integration/test_integration_convergence_support.cpp	/^struct Conv_Order_Data {$/;"	s	file:
DG_Solver_Element	simulation/solvers/dg/element_solver_dg.h	/^struct DG_Solver_Element {$/;"	s
DG_Solver_Face_T	simulation/solvers/dg/def_templates_face_solver_dg.h	23;"	d
DG_Solver_Face_T	simulation/solvers/dg/def_templates_face_solver_dg.h	35;"	d
DG_Solver_Face_T	simulation/solvers/dg/face_solver_dg_T.h	/^struct DG_Solver_Face_T {$/;"	s
DG_Solver_Face_T	simulation/solvers/dg/undef_templates_face_solver_dg.h	23;"	d
DG_Solver_Volume_T	simulation/solvers/dg/def_templates_volume_solver_dg.h	23;"	d
DG_Solver_Volume_T	simulation/solvers/dg/def_templates_volume_solver_dg.h	39;"	d
DG_Solver_Volume_T	simulation/solvers/dg/undef_templates_volume_solver_dg.h	21;"	d
DG_Solver_Volume_T	simulation/solvers/dg/volume_solver_dg_T.h	/^struct DG_Solver_Volume_T {$/;"	s
DIABATIC_FLUX_CONSTANT	simulation/test_case/boundary/definitions_bc.h	77;"	d
DIABATIC_FLUX_CONSTANT_ZERO	simulation/test_case/boundary/definitions_bc.h	76;"	d
DISPLAY_CONV	testing/integration/test_integration_convergence_support.cpp	51;"	d	file:
DISPLAY_GEOM	testing/integration/test_integration_convergence_support.cpp	56;"	d	file:
DOM_BLENDED	simulation/mesh/definitions_mesh.h	26;"	d
DOM_PARAMETRIC	simulation/mesh/definitions_mesh.h	28;"	d
DOM_STRAIGHT	simulation/mesh/definitions_mesh.h	23;"	d
DPG_Solver_Element	simulation/solvers/dpg/element_solver_dpg.h	/^struct DPG_Solver_Element {$/;"	s
DPG_Solver_Face_T	simulation/solvers/dpg/def_templates_face_solver_dpg.h	23;"	d
DPG_Solver_Face_T	simulation/solvers/dpg/def_templates_face_solver_dpg.h	34;"	d
DPG_Solver_Face_T	simulation/solvers/dpg/face_solver_dpg_T.h	/^struct DPG_Solver_Face_T {$/;"	s
DPG_Solver_Face_T	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	21;"	d
DPG_Solver_Volume_T	simulation/solvers/dpg/def_templates_volume_solver_dpg.h	23;"	d
DPG_Solver_Volume_T	simulation/solvers/dpg/def_templates_volume_solver_dpg.h	39;"	d
DPG_Solver_Volume_T	simulation/solvers/dpg/undef_templates_volume_solver_dpg.h	21;"	d
DPG_Solver_Volume_T	simulation/solvers/dpg/volume_solver_dpg_T.h	/^struct DPG_Solver_Volume_T {$/;"	s
DPG__Intrusive_h__INCLUDED	intrusive/intrusive.h	17;"	d
DPG__Simulation_h__INCLUDED	simulation/simulation.h	17;"	d
DPG__adaptation_h__INCLUDED	simulation/solvers/adaptation/adaptation.h	17;"	d
DPG__approximate_nearest_neighbor_h__INCLUDED	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	17;"	d
DPG__bases_h__INCLUDED	element/bases.h	17;"	d
DPG__boundary_advection_h__INCLUDED	simulation/test_case/boundary/boundary_advection.h	17;"	d
DPG__boundary_diffusion_h__INCLUDED	simulation/test_case/boundary/boundary_diffusion.h	17;"	d
DPG__boundary_euler_h__INCLUDED	simulation/test_case/boundary/boundary_euler.h	17;"	d
DPG__boundary_h__INCLUDED	simulation/test_case/boundary/boundary.h	17;"	d
DPG__boundary_navier_stokes_h__INCLUDED	simulation/test_case/boundary/boundary_navier_stokes.h	17;"	d
DPG__computational_elements_h__INCLUDED	simulation/computational_elements/computational_elements.h	17;"	d
DPG__compute_all_rlhs_dpg_h__INCLUDED	simulation/solvers/dpg/compute_all_rlhs_dpg.h	17;"	d
DPG__compute_error_advection_h__INCLUDED	simulation/test_case/compute_error/compute_error_advection.h	17;"	d
DPG__compute_error_burgers_inviscid_h__INCLUDED	simulation/test_case/compute_error/compute_error_burgers_inviscid.h	17;"	d
DPG__compute_error_diffusion_h__INCLUDED	simulation/test_case/compute_error/compute_error_diffusion.h	17;"	d
DPG__compute_error_euler_h__INCLUDED	simulation/test_case/compute_error/compute_error_euler.h	17;"	d
DPG__compute_error_h__INCLUDED	simulation/test_case/compute_error/compute_error.h	17;"	d
DPG__compute_error_navier_stokes_h__INCLUDED	simulation/test_case/compute_error/compute_error_navier_stokes.h	17;"	d
DPG__compute_face_rlhs_dg_h__INCLUDED	simulation/solvers/dg/compute_face_rlhs_dg.h	17;"	d
DPG__compute_face_rlhs_h__INCLUDED	simulation/solvers/compute_face_rlhs.h	17;"	d
DPG__compute_face_rlhs_opg_h__INCLUDED	simulation/solvers/opg/compute_face_rlhs_opg.h	17;"	d
DPG__compute_grad_coef_dg_h__INCLUDED	simulation/solvers/dg/compute_grad_coef_dg.h	17;"	d
DPG__compute_rlhs_h__INCLUDED	simulation/solvers/compute_rlhs.h	17;"	d
DPG__compute_source_rlhs_dg_h__INCLUDED	simulation/solvers/dg/compute_source_rlhs_dg.h	17;"	d
DPG__compute_volume_rlhs_dg_h__INCLUDED	simulation/solvers/dg/compute_volume_rlhs_dg.h	17;"	d
DPG__compute_volume_rlhs_h__INCLUDED	simulation/solvers/compute_volume_rlhs.h	17;"	d
DPG__compute_volume_rlhs_opg_h__INCLUDED	simulation/solvers/opg/compute_volume_rlhs_opg.h	17;"	d
DPG__const_cast_h__INCLUDED	general/const_cast.h	17;"	d
DPG__core_h__INCLUDED	core.h	17;"	d
DPG__definitions_adaptation_h__INCLUDED	simulation/solvers/adaptation/definitions_adaptation.h	17;"	d
DPG__definitions_alloc_h__INCLUDED	definitions/definitions_alloc.h	17;"	d
DPG__definitions_bases_h__INCLUDED	definitions/definitions_bases.h	17;"	d
DPG__definitions_bc_h__INCLUDED	simulation/test_case/boundary/definitions_bc.h	17;"	d
DPG__definitions_dpg_h__INCLUDED	simulation/solvers/dpg/definitions_dpg.h	17;"	d
DPG__definitions_element_operators_h__INCLUDED	element/definitions_element_operators.h	17;"	d
DPG__definitions_elements_h__INCLUDED	element/definitions_elements.h	17;"	d
DPG__definitions_error_h__INCLUDED	simulation/test_case/compute_error/definitions_error.h	17;"	d
DPG__definitions_geometry_h__INCLUDED	simulation/geometry/definitions_geometry.h	17;"	d
DPG__definitions_h_ref_h__INCLUDED	definitions/definitions_h_ref.h	17;"	d
DPG__definitions_intrusive_h__INCLUDED	definitions/definitions_intrusive.h	17;"	d
DPG__definitions_math_h__INCLUDED	general/definitions_math.h	17;"	d
DPG__definitions_mesh_h__INCLUDED	simulation/mesh/definitions_mesh.h	17;"	d
DPG__definitions_mkl_h__INCLUDED	definitions/definitions_mkl.h	17;"	d
DPG__definitions_nodes_h__INCLUDED	element/definitions_nodes.h	17;"	d
DPG__definitions_numerical_flux_h__INCLUDED	simulation/solvers/numerical_flux/definitions_numerical_flux.h	17;"	d
DPG__definitions_opg_h__INCLUDED	simulation/solvers/opg/definitions_opg.h	17;"	d
DPG__definitions_physics_h__INCLUDED	simulation/test_case/definitions_physics.h	17;"	d
DPG__definitions_simulation_h__INCLUDED	simulation/definitions_simulation.h	17;"	d
DPG__definitions_slepc_h__INCLUDED	definitions/definitions_slepc.h	17;"	d
DPG__definitions_solution_h__INCLUDED	simulation/test_case/solution/definitions_solution.h	17;"	d
DPG__definitions_test_case_h__INCLUDED	simulation/test_case/definitions_test_case.h	17;"	d
DPG__definitions_test_integration_h__INCLUDED	testing/integration/definitions_test_integration.h	17;"	d
DPG__definitions_tol_h__INCLUDED	definitions/definitions_tol.h	17;"	d
DPG__definitions_types_h__INCLUDED	templates/definitions_templates_type.h	17;"	d
DPG__definitions_visualization_h__INCLUDED	simulation/visualization/definitions_visualization.h	17;"	d
DPG__element_adaptation_h__INCLUDED	simulation/solvers/adaptation/element_adaptation.h	17;"	d
DPG__element_geometry_h__INCLUDED	simulation/geometry/element_geometry.h	17;"	d
DPG__element_h__INCLUDED	element/element.h	17;"	d
DPG__element_operators_h__INCLUDED	element/element_operators.h	17;"	d
DPG__element_operators_tp_h__INCLUDED	element/element_operators_tp.h	17;"	d
DPG__element_plotting_h__INCLUDED	simulation/visualization/element_plotting.h	17;"	d
DPG__element_solution_h__INCLUDED	simulation/test_case/solution/element_solution.h	17;"	d
DPG__element_solver_dg_h__INCLUDED	simulation/solvers/dg/element_solver_dg.h	17;"	d
DPG__element_solver_dpg_h__INCLUDED	simulation/solvers/dpg/element_solver_dpg.h	17;"	d
DPG__element_solver_h__INCLUDED	simulation/solvers/element_solver.h	17;"	d
DPG__element_solver_opg_h__INCLUDED	simulation/solvers/opg/element_solver_opg.h	17;"	d
DPG__face_h__INCLUDED	simulation/computational_elements/face.h	17;"	d
DPG__face_solver_adaptive_h__INCLUDED	simulation/solvers/adaptation/face_solver_adaptive.h	17;"	d
DPG__face_solver_dg_h__INCLUDED	simulation/solvers/dg/face_solver_dg.h	17;"	d
DPG__face_solver_dpg_h__INCLUDED	simulation/solvers/dpg/face_solver_dpg.h	17;"	d
DPG__face_solver_h__INCLUDED	simulation/solvers/face_solver.h	17;"	d
DPG__face_solver_opg_h__INCLUDED	simulation/solvers/opg/face_solver_opg.h	17;"	d
DPG__file_processing_conversions_h__INCLUDED	general/file_processing_conversions.h	17;"	d
DPG__file_processing_h__INCLUDED	general/file_processing.h	17;"	d
DPG__flux_advection_h__INCLUDED	simulation/test_case/flux/flux_advection.h	17;"	d
DPG__flux_burgers_inviscid_h__INCLUDED	simulation/test_case/flux/flux_burgers_inviscid.h	17;"	d
DPG__flux_diffusion_h__INCLUDED	simulation/test_case/flux/flux_diffusion.h	17;"	d
DPG__flux_euler_h__INCLUDED	simulation/test_case/flux/flux_euler.h	17;"	d
DPG__flux_h__INCLUDED	simulation/test_case/flux/flux.h	17;"	d
DPG__flux_navier_stokes_h__INCLUDED	simulation/test_case/flux/flux_navier_stokes.h	17;"	d
DPG__geometry_blended_h__INCLUDED	simulation/geometry/geometry_blended.h	17;"	d
DPG__geometry_h__INCLUDED	simulation/geometry/geometry.h	17;"	d
DPG__geometry_normals_h__INCLUDED	simulation/geometry/geometry_normals.h	17;"	d
DPG__geometry_parametric_h__INCLUDED	simulation/geometry/geometry_parametric.h	17;"	d
DPG__geometry_surface_h__INCLUDED	simulation/geometry/geometry_surface.h	17;"	d
DPG__inverse_mapping_h__INCLUDED	simulation/test_case/solution/restart/inverse_mapping.h	17;"	d
DPG__macros_h__INCLUDED	macros.h	17;"	d
DPG__math_functions_h__INCLUDED	general/math_functions.h	17;"	d
DPG__matrix_constructors_h__INCLUDED	containers/matrix_constructors.h	17;"	d
DPG__matrix_h__INCLUDED	containers/matrix.h	17;"	d
DPG__matrix_math_h__INCLUDED	containers/matrix_math.h	17;"	d
DPG__matrix_print_h__INCLUDED	containers/matrix_print.h	17;"	d
DPG__mesh_connectivity_h__INCLUDED	simulation/mesh/mesh_connectivity.h	17;"	d
DPG__mesh_geometry_cylinder_hollow_section_h__INCLUDED	simulation/mesh/mesh_geometry_cylinder_hollow_section.h	17;"	d
DPG__mesh_h__INCLUDED	simulation/mesh/mesh.h	17;"	d
DPG__mesh_periodic_h__INCLUDED	simulation/mesh/mesh_periodic.h	17;"	d
DPG__mesh_readers_h__INCLUDED	simulation/mesh/mesh_readers.h	17;"	d
DPG__mesh_vertices_h__INCLUDED	simulation/mesh/mesh_vertices.h	17;"	d
DPG__multiarray_constructors_h__INCLUDED	containers/multiarray_constructors.h	17;"	d
DPG__multiarray_h__INCLUDED	containers/multiarray.h	17;"	d
DPG__multiarray_math_h__INCLUDED	containers/multiarray_math.h	17;"	d
DPG__multiarray_operator_h__INCLUDED	simulation/operators/multiarray_operator.h	17;"	d
DPG__multiarray_print_h__INCLUDED	containers/multiarray_print.h	17;"	d
DPG__nodes_correspondence_h__INCLUDED	element/nodes_correspondence.h	17;"	d
DPG__nodes_h__INCLUDED	element/nodes.h	17;"	d
DPG__nodes_operators_h__INCLUDED	element/nodes_operators.h	17;"	d
DPG__nodes_plotting_h__INCLUDED	element/nodes_plotting.h	17;"	d
DPG__numerical_flux_advection_h__INCLUDED	simulation/solvers/numerical_flux/numerical_flux_advection.h	17;"	d
DPG__numerical_flux_burgers_inviscid_h__INCLUDED	simulation/solvers/numerical_flux/numerical_flux_burgers_inviscid.h	17;"	d
DPG__numerical_flux_diffusion_h__INCLUDED	simulation/solvers/numerical_flux/numerical_flux_diffusion.h	17;"	d
DPG__numerical_flux_euler_h__INCLUDED	simulation/solvers/numerical_flux/numerical_flux_euler.h	17;"	d
DPG__numerical_flux_h__INCLUDED	simulation/solvers/numerical_flux/numerical_flux.h	17;"	d
DPG__numerical_flux_navier_stokes_h__INCLUDED	simulation/solvers/numerical_flux/numerical_flux_navier_stokes.h	17;"	d
DPG__operator_h__INCLUDED	simulation/operators/operator.h	17;"	d
DPG__penalty_opg_advection_h__INCLUDED	simulation/solvers/opg/penalty_opg_advection.h	17;"	d
DPG__penalty_opg_h__INCLUDED	simulation/solvers/opg/penalty_opg.h	17;"	d
DPG__restart_h__INCLUDED	simulation/test_case/solution/restart/restart.h	17;"	d
DPG__restart_writers_h__INCLUDED	simulation/test_case/solution/restart/restart_writers.h	17;"	d
DPG__solution_advection_default_h__INCLUDED	simulation/test_case/solution/advection/solution_advection_default.h	17;"	d
DPG__solution_advection_h__INCLUDED	simulation/test_case/solution/advection/solution_advection.h	17;"	d
DPG__solution_burgers_inviscid_h__INCLUDED	simulation/test_case/solution/burgers_inviscid/solution_burgers_inviscid.h	17;"	d
DPG__solution_diffusion_default_steady_h__INCLUDED	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady.h	17;"	d
DPG__solution_diffusion_h__INCLUDED	simulation/test_case/solution/diffusion/solution_diffusion.h	17;"	d
DPG__solution_euler_h__INCLUDED	simulation/test_case/solution/euler/solution_euler.h	17;"	d
DPG__solution_free_stream_advection_h__INCLUDED	simulation/test_case/solution/advection/free_stream_advection/solution_free_stream_advection.h	17;"	d
DPG__solution_free_stream_h__INCLUDED	simulation/test_case/solution/euler/free_stream/solution_free_stream.h	17;"	d
DPG__solution_h__INCLUDED	simulation/test_case/solution/solution.h	17;"	d
DPG__solution_hyperbolic_tan_h__INCLUDED	simulation/test_case/solution/advection/hyperbolic_tan/solution_hyperbolic_tan.h	17;"	d
DPG__solution_navier_stokes_h__INCLUDED	simulation/test_case/solution/navier_stokes/solution_navier_stokes.h	17;"	d
DPG__solution_periodic_vortex_h__INCLUDED	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex.h	17;"	d
DPG__solution_peterson_h__INCLUDED	simulation/test_case/solution/advection/peterson/solution_peterson.h	17;"	d
DPG__solution_supersonic_vortex_h__INCLUDED	simulation/test_case/solution/euler/supersonic_vortex/solution_supersonic_vortex.h	17;"	d
DPG__solution_taylor_couette_h__INCLUDED	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette.h	17;"	d
DPG__solution_trigonometric_h__INCLUDED	simulation/test_case/solution/burgers_inviscid/trigonometric/solution_trigonometric.h	17;"	d
DPG__solution_vortex_advection_h__INCLUDED	simulation/test_case/solution/advection/vortex_advection/solution_vortex_advection.h	17;"	d
DPG__solve_dg_h__INCLUDED	simulation/solvers/dg/solve_dg.h	17;"	d
DPG__solve_dpg_h__INCLUDED	simulation/solvers/dpg/solve_dpg.h	17;"	d
DPG__solve_explicit_h__INCLUDED	simulation/solvers/solve_explicit.h	17;"	d
DPG__solve_h__INCLUDED	simulation/solvers/solve.h	17;"	d
DPG__solve_implicit_h__INCLUDED	simulation/solvers/solve_implicit.h	17;"	d
DPG__solve_opg_h__INCLUDED	simulation/solvers/opg/solve_opg.h	17;"	d
DPG__template_h__INCLUDED	template.h	17;"	d
DPG__test_base_h__INCLUDED	testing/test_base.h	17;"	d
DPG__test_case_c_h__INCLUDED	simulation/test_case/test_case_c.h	17;"	d
DPG__test_case_h__INCLUDED	simulation/test_case/test_case.h	17;"	d
DPG__test_integration_convergence_support_h__INCLUDED	testing/integration/test_integration_convergence_support.h	17;"	d
DPG__test_integration_h__INCLUDED	testing/integration/test_integration.h	17;"	d
DPG__test_integration_support_face_h__INCLUDED	testing/integration/test_integration_support_face.h	17;"	d
DPG__test_support_bases_h__INCLUDED	testing/support/element/test_support_bases.h	17;"	d
DPG__test_support_computational_elements_h__INCLUDED	testing/support/simulation/computational_elements/test_support_computational_elements.h	17;"	d
DPG__test_support_face_h__INCLUDED	testing/support/simulation/computational_elements/test_support_face.h	17;"	d
DPG__test_support_fe_init_h__INCLUDED	testing/support/test_support_fe_init.h	17;"	d
DPG__test_support_h__INCLUDED	testing/support/test_support.h	17;"	d
DPG__test_support_intrusive_h__INCLUDED	testing/support/intrusive/test_support_intrusive.h	17;"	d
DPG__test_support_math_functions_h__INCLUDED	testing/support/general/test_support_math_functions.h	17;"	d
DPG__test_support_matrix_h__INCLUDED	testing/support/containers/test_support_matrix.h	17;"	d
DPG__test_support_multiarray_h__INCLUDED	testing/support/containers/test_support_multiarray.h	17;"	d
DPG__test_support_nodes_h__INCLUDED	testing/support/element/test_support_nodes.h	17;"	d
DPG__test_support_solve_dg_h__INCLUDED	testing/support/simulation/solvers/dg/test_support_solve_dg.h	17;"	d
DPG__test_support_solve_dpg_h__INCLUDED	testing/support/simulation/solvers/dpg/test_support_solve_dpg.h	17;"	d
DPG__test_support_solve_h__INCLUDED	testing/support/simulation/solvers/test_support_solve.h	17;"	d
DPG__test_support_solve_opg_h__INCLUDED	testing/support/simulation/solvers/opg/test_support_solve_opg.h	17;"	d
DPG__test_support_vector_h__INCLUDED	testing/support/containers/test_support_vector.h	17;"	d
DPG__test_support_volume_h__INCLUDED	testing/support/simulation/computational_elements/test_support_volume.h	17;"	d
DPG__vector_constructors_h__INCLUDED	containers/vector_constructors.h	17;"	d
DPG__vector_h__INCLUDED	containers/vector.h	17;"	d
DPG__vector_math_h__INCLUDED	containers/vector_math.h	17;"	d
DPG__vector_print_h__INCLUDED	containers/vector_print.h	17;"	d
DPG__visualization_h__INCLUDED	simulation/visualization/visualization.h	17;"	d
DPG__volume_h__INCLUDED	simulation/computational_elements/volume.h	17;"	d
DPG__volume_solver_adaptive_h__INCLUDED	simulation/solvers/adaptation/volume_solver_adaptive.h	17;"	d
DPG__volume_solver_dg_h__INCLUDED	simulation/solvers/dg/volume_solver_dg.h	17;"	d
DPG__volume_solver_dpg_h__INCLUDED	simulation/solvers/dpg/volume_solver_dpg.h	17;"	d
DPG__volume_solver_h__INCLUDED	simulation/solvers/volume_solver.h	17;"	d
DPG__volume_solver_opg_h__INCLUDED	simulation/solvers/opg/volume_solver_opg.h	17;"	d
Derived_Comp_Elements_Info	simulation/computational_elements/computational_elements_T.cpp	/^struct Derived_Comp_Elements_Info {$/;"	s	file:
Derived_Comp_Elements_Info	simulation/computational_elements/def_templates_computational_elements.h	27;"	d
Derived_Comp_Elements_Info	simulation/computational_elements/def_templates_computational_elements.h	47;"	d
Derived_Comp_Elements_Info	simulation/computational_elements/undef_templates_computational_elements.h	19;"	d
Derived_Comp_Elements_Info	simulation/computational_elements/undef_templates_computational_elements.h	24;"	d
Derived_Elements_Info	simulation/computational_elements/computational_elements.cpp	/^struct Derived_Elements_Info {$/;"	s	file:
E	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^	     E,     \/\/\/< Exact boundary total 'e'nergy.$/;"	m	struct:Exact_Boundary_Data	file:
E	simulation/test_case/flux/flux_euler_T.cpp	/^	           E,       \/\/\/< Total energy.$/;"	m	struct:Flux_Data_Euler	file:
EPS	definitions/definitions_tol.h	23;"	d
EPS_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	57;"	d
EPS_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	65;"	d
EPS_PHYS	simulation/test_case/definitions_physics.h	30;"	d
ERROR_FUNCTIONAL	simulation/test_case/compute_error/definitions_error.h	24;"	d
ERROR_STANDARD	simulation/test_case/compute_error/definitions_error.h	23;"	d
EXIT	macros.h	37;"	d
EXIT_ADD_SUPPORT	macros.h	38;"	d
EXIT_DEPRECATED	macros.h	40;"	d
EXIT_ERROR	macros.h	42;"	d
EXIT_MSG	macros.h	36;"	d
EXIT_ON_OUTPUT	simulation/solvers/solve_implicit.cpp	65;"	d	file:
EXIT_UNSUPPORTED	macros.h	39;"	d
EXTENTS_MAX	testing/support/containers/test_support_multiarray.cpp	42;"	d	file:
Elem_info	element/element.cpp	/^struct Elem_info {$/;"	s	file:
Element	element/element.h	/^struct Element {$/;"	s
Element_Data	simulation/mesh/mesh_readers.cpp	/^struct Element_Data {$/;"	s	file:
Elementary_Entity	simulation/mesh/mesh_readers.cpp	/^struct Elementary_Entity {$/;"	s	file:
Elements_Info	simulation/test_case/solution/restart/restart_writers.cpp	/^struct Elements_Info {$/;"	s	file:
Error_CE	simulation/test_case/compute_error/compute_error.h	/^struct Error_CE {$/;"	s
Error_CE_Data	simulation/test_case/compute_error/compute_error.h	/^struct Error_CE_Data {$/;"	s
Error_CE_Helper	simulation/test_case/compute_error/compute_error.h	/^struct Error_CE_Helper {$/;"	s
Exact_Boundary_Data	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^struct Exact_Boundary_Data {$/;"	s	file:
Exact_Boundary_Data	simulation/test_case/boundary/def_templates_boundary.h	143;"	d
Exact_Boundary_Data	simulation/test_case/boundary/def_templates_boundary.h	76;"	d
Exact_Boundary_Data	simulation/test_case/boundary/undef_templates_boundary.h	77;"	d
FE_Test_Data	testing/support/test_support_fe_init.cpp	/^struct FE_Test_Data {$/;"	s	file:
F_Ptrs_and_Data	testing/integration/test_integration_linearization.cpp	/^struct F_Ptrs_and_Data {$/;"	s	file:
Face	simulation/computational_elements/face.h	/^struct Face {$/;"	s
Face_mesh_info	simulation/computational_elements/face.cpp	/^struct Face_mesh_info {$/;"	s	file:
Flux_Data_Advection	simulation/test_case/flux/def_templates_flux.h	158;"	d
Flux_Data_Advection	simulation/test_case/flux/def_templates_flux.h	56;"	d
Flux_Data_Advection	simulation/test_case/flux/flux_advection_T.cpp	/^struct Flux_Data_Advection {$/;"	s	file:
Flux_Data_Advection	simulation/test_case/flux/undef_templates_flux.h	54;"	d
Flux_Data_Burgers_Inviscid	simulation/test_case/flux/def_templates_flux.h	162;"	d
Flux_Data_Burgers_Inviscid	simulation/test_case/flux/def_templates_flux.h	60;"	d
Flux_Data_Burgers_Inviscid	simulation/test_case/flux/flux_burgers_inviscid_T.cpp	/^struct Flux_Data_Burgers_Inviscid {$/;"	s	file:
Flux_Data_Burgers_Inviscid	simulation/test_case/flux/undef_templates_flux.h	58;"	d
Flux_Data_Diffusion	simulation/test_case/flux/def_templates_flux.h	159;"	d
Flux_Data_Diffusion	simulation/test_case/flux/def_templates_flux.h	57;"	d
Flux_Data_Diffusion	simulation/test_case/flux/flux_diffusion_T.cpp	/^struct Flux_Data_Diffusion {$/;"	s	file:
Flux_Data_Diffusion	simulation/test_case/flux/undef_templates_flux.h	55;"	d
Flux_Data_Euler	simulation/test_case/flux/def_templates_flux.h	160;"	d
Flux_Data_Euler	simulation/test_case/flux/def_templates_flux.h	58;"	d
Flux_Data_Euler	simulation/test_case/flux/flux_euler_T.cpp	/^struct Flux_Data_Euler {$/;"	s	file:
Flux_Data_Euler	simulation/test_case/flux/undef_templates_flux.h	56;"	d
Flux_Data_Navier_Stokes	simulation/test_case/flux/def_templates_flux.h	161;"	d
Flux_Data_Navier_Stokes	simulation/test_case/flux/def_templates_flux.h	59;"	d
Flux_Data_Navier_Stokes	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^struct Flux_Data_Navier_Stokes {$/;"	s	file:
Flux_Data_Navier_Stokes	simulation/test_case/flux/undef_templates_flux.h	57;"	d
Flux_Input_T	simulation/test_case/flux/def_templates_flux.h	124;"	d
Flux_Input_T	simulation/test_case/flux/def_templates_flux.h	22;"	d
Flux_Input_T	simulation/test_case/flux/flux_T.h	/^struct Flux_Input_T {$/;"	s
Flux_Input_T	simulation/test_case/flux/undef_templates_flux.h	21;"	d
Flux_Ref_T	simulation/solvers/compute_rlhs_T.h	/^struct Flux_Ref_T {$/;"	s
Flux_Ref_T	simulation/solvers/def_templates_compute_rlhs.h	22;"	d
Flux_Ref_T	simulation/solvers/def_templates_compute_rlhs.h	37;"	d
Flux_Ref_T	simulation/solvers/def_templates_compute_volume_rlhs.h	23;"	d
Flux_Ref_T	simulation/solvers/def_templates_compute_volume_rlhs.h	59;"	d
Flux_Ref_T	simulation/solvers/undef_templates_compute_rlhs.h	20;"	d
Flux_Ref_T	simulation/solvers/undef_templates_compute_volume_rlhs.h	22;"	d
Flux_T	simulation/test_case/flux/def_templates_flux.h	125;"	d
Flux_T	simulation/test_case/flux/def_templates_flux.h	23;"	d
Flux_T	simulation/test_case/flux/flux_T.h	/^struct Flux_T {$/;"	s
Flux_T	simulation/test_case/flux/undef_templates_flux.h	22;"	d
Fluxes_LR	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	135;"	d
Fluxes_LR	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	71;"	d
Fluxes_LR	simulation/solvers/numerical_flux/numerical_flux_central_T.cpp	/^struct Fluxes_LR {$/;"	s	file:
Fluxes_LR	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	68;"	d
Function_Data_GP	simulation/geometry/geometry_parametric.h	/^struct Function_Data_GP {$/;"	s
GAMMA	simulation/test_case/definitions_physics.h	23;"	d
GEOM_PRM_ARC_LENGTH	simulation/geometry/definitions_geometry.h	24;"	d
GEOM_PRM_NORMAL_PROJ	simulation/geometry/definitions_geometry.h	25;"	d
GEOM_PRM_RADIAL_PROJ	simulation/geometry/definitions_geometry.h	23;"	d
GM1	simulation/test_case/definitions_physics.h	24;"	d
GM3	simulation/test_case/definitions_physics.h	25;"	d
GMSH_N_TAGS	simulation/mesh/mesh_readers.h	26;"	d
GMSH_N_TAGS_MAX	simulation/mesh/mesh_readers.h	28;"	d
GMSH_N_TAGS_PAR	simulation/mesh/mesh_readers.h	27;"	d
Gen_Eig_Data	testing/support/simulation/solvers/test_support_solve.h	/^struct Gen_Eig_Data {$/;"	s
Geo_Data	simulation/geometry/def_templates_geometry_parametric.h	32;"	d
Geo_Data	simulation/geometry/def_templates_geometry_parametric.h	54;"	d
Geo_Data	simulation/geometry/geometry_parametric_T.cpp	/^struct Geo_Data {$/;"	s	file:
Geo_Data	simulation/geometry/undef_templates_geometry_parametric.h	27;"	d
Geom_Data__chs	simulation/mesh/mesh_geometry_cylinder_hollow_section.cpp	/^struct Geom_Data__chs {$/;"	s	file:
Geom_Test_Data	testing/integration/test_integration_geometry.cpp	/^struct Geom_Test_Data {$/;"	s	file:
Geometry_Element	simulation/geometry/element_geometry.h	/^struct Geometry_Element {$/;"	s
H	simulation/test_case/flux/flux_euler_T.cpp	/^		     H,       \/\/\/< Enthalpy.$/;"	m	struct:Flux_Data_Euler	file:
HEX	element/definitions_elements.h	37;"	d
H_HEX1_F0	definitions/definitions_h_ref.h	131;"	d
H_HEX1_F1	definitions/definitions_h_ref.h	132;"	d
H_HEX1_F2	definitions/definitions_h_ref.h	133;"	d
H_HEX1_F3	definitions/definitions_h_ref.h	134;"	d
H_HEX1_F4	definitions/definitions_h_ref.h	135;"	d
H_HEX1_F5	definitions/definitions_h_ref.h	136;"	d
H_HEX1_V0	definitions/definitions_h_ref.h	118;"	d
H_HEX8_F00	definitions/definitions_h_ref.h	138;"	d
H_HEX8_F01	definitions/definitions_h_ref.h	139;"	d
H_HEX8_F02	definitions/definitions_h_ref.h	140;"	d
H_HEX8_F03	definitions/definitions_h_ref.h	141;"	d
H_HEX8_F10	definitions/definitions_h_ref.h	142;"	d
H_HEX8_F11	definitions/definitions_h_ref.h	143;"	d
H_HEX8_F12	definitions/definitions_h_ref.h	144;"	d
H_HEX8_F13	definitions/definitions_h_ref.h	145;"	d
H_HEX8_F20	definitions/definitions_h_ref.h	146;"	d
H_HEX8_F21	definitions/definitions_h_ref.h	147;"	d
H_HEX8_F22	definitions/definitions_h_ref.h	148;"	d
H_HEX8_F23	definitions/definitions_h_ref.h	149;"	d
H_HEX8_F30	definitions/definitions_h_ref.h	150;"	d
H_HEX8_F31	definitions/definitions_h_ref.h	151;"	d
H_HEX8_F32	definitions/definitions_h_ref.h	152;"	d
H_HEX8_F33	definitions/definitions_h_ref.h	153;"	d
H_HEX8_F40	definitions/definitions_h_ref.h	154;"	d
H_HEX8_F41	definitions/definitions_h_ref.h	155;"	d
H_HEX8_F42	definitions/definitions_h_ref.h	156;"	d
H_HEX8_F43	definitions/definitions_h_ref.h	157;"	d
H_HEX8_F50	definitions/definitions_h_ref.h	158;"	d
H_HEX8_F51	definitions/definitions_h_ref.h	159;"	d
H_HEX8_F52	definitions/definitions_h_ref.h	160;"	d
H_HEX8_F53	definitions/definitions_h_ref.h	161;"	d
H_HEX8_V0	definitions/definitions_h_ref.h	120;"	d
H_HEX8_V1	definitions/definitions_h_ref.h	121;"	d
H_HEX8_V2	definitions/definitions_h_ref.h	122;"	d
H_HEX8_V3	definitions/definitions_h_ref.h	123;"	d
H_HEX8_V4	definitions/definitions_h_ref.h	124;"	d
H_HEX8_V5	definitions/definitions_h_ref.h	125;"	d
H_HEX8_V6	definitions/definitions_h_ref.h	126;"	d
H_HEX8_V7	definitions/definitions_h_ref.h	127;"	d
H_LINE1_F0	definitions/definitions_h_ref.h	57;"	d
H_LINE1_F1	definitions/definitions_h_ref.h	58;"	d
H_LINE1_V0	definitions/definitions_h_ref.h	50;"	d
H_LINE2_V0	definitions/definitions_h_ref.h	52;"	d
H_LINE2_V1	definitions/definitions_h_ref.h	53;"	d
H_POINT1_V0	definitions/definitions_h_ref.h	43;"	d
H_PYR10_F00	definitions/definitions_h_ref.h	233;"	d
H_PYR10_F01	definitions/definitions_h_ref.h	234;"	d
H_PYR10_F02	definitions/definitions_h_ref.h	235;"	d
H_PYR10_F03	definitions/definitions_h_ref.h	236;"	d
H_PYR10_F10	definitions/definitions_h_ref.h	237;"	d
H_PYR10_F11	definitions/definitions_h_ref.h	238;"	d
H_PYR10_F12	definitions/definitions_h_ref.h	239;"	d
H_PYR10_F13	definitions/definitions_h_ref.h	240;"	d
H_PYR10_F20	definitions/definitions_h_ref.h	241;"	d
H_PYR10_F21	definitions/definitions_h_ref.h	242;"	d
H_PYR10_F22	definitions/definitions_h_ref.h	243;"	d
H_PYR10_F23	definitions/definitions_h_ref.h	244;"	d
H_PYR10_F30	definitions/definitions_h_ref.h	245;"	d
H_PYR10_F31	definitions/definitions_h_ref.h	246;"	d
H_PYR10_F32	definitions/definitions_h_ref.h	247;"	d
H_PYR10_F33	definitions/definitions_h_ref.h	248;"	d
H_PYR10_F40	definitions/definitions_h_ref.h	249;"	d
H_PYR10_F41	definitions/definitions_h_ref.h	250;"	d
H_PYR10_F42	definitions/definitions_h_ref.h	251;"	d
H_PYR10_F43	definitions/definitions_h_ref.h	252;"	d
H_PYR10_V0	definitions/definitions_h_ref.h	214;"	d
H_PYR10_V1	definitions/definitions_h_ref.h	215;"	d
H_PYR10_V2	definitions/definitions_h_ref.h	216;"	d
H_PYR10_V3	definitions/definitions_h_ref.h	217;"	d
H_PYR10_V4	definitions/definitions_h_ref.h	218;"	d
H_PYR10_V5	definitions/definitions_h_ref.h	219;"	d
H_PYR10_V6	definitions/definitions_h_ref.h	220;"	d
H_PYR10_V7	definitions/definitions_h_ref.h	221;"	d
H_PYR10_V8	definitions/definitions_h_ref.h	222;"	d
H_PYR10_V9	definitions/definitions_h_ref.h	223;"	d
H_PYR1_F0	definitions/definitions_h_ref.h	227;"	d
H_PYR1_F1	definitions/definitions_h_ref.h	228;"	d
H_PYR1_F2	definitions/definitions_h_ref.h	229;"	d
H_PYR1_F3	definitions/definitions_h_ref.h	230;"	d
H_PYR1_F4	definitions/definitions_h_ref.h	231;"	d
H_PYR1_V0	definitions/definitions_h_ref.h	212;"	d
H_QUAD1_F0	definitions/definitions_h_ref.h	99;"	d
H_QUAD1_F1	definitions/definitions_h_ref.h	100;"	d
H_QUAD1_F2	definitions/definitions_h_ref.h	101;"	d
H_QUAD1_F3	definitions/definitions_h_ref.h	102;"	d
H_QUAD1_V0	definitions/definitions_h_ref.h	90;"	d
H_QUAD4_F00	definitions/definitions_h_ref.h	104;"	d
H_QUAD4_F01	definitions/definitions_h_ref.h	105;"	d
H_QUAD4_F10	definitions/definitions_h_ref.h	106;"	d
H_QUAD4_F11	definitions/definitions_h_ref.h	107;"	d
H_QUAD4_F20	definitions/definitions_h_ref.h	108;"	d
H_QUAD4_F21	definitions/definitions_h_ref.h	109;"	d
H_QUAD4_F30	definitions/definitions_h_ref.h	110;"	d
H_QUAD4_F31	definitions/definitions_h_ref.h	111;"	d
H_QUAD4_V0	definitions/definitions_h_ref.h	92;"	d
H_QUAD4_V1	definitions/definitions_h_ref.h	93;"	d
H_QUAD4_V2	definitions/definitions_h_ref.h	94;"	d
H_QUAD4_V3	definitions/definitions_h_ref.h	95;"	d
H_TRI1_F0	definitions/definitions_h_ref.h	74;"	d
H_TRI1_F1	definitions/definitions_h_ref.h	75;"	d
H_TRI1_F2	definitions/definitions_h_ref.h	76;"	d
H_TRI1_V0	definitions/definitions_h_ref.h	65;"	d
H_TRI4_F00	definitions/definitions_h_ref.h	78;"	d
H_TRI4_F01	definitions/definitions_h_ref.h	79;"	d
H_TRI4_F10	definitions/definitions_h_ref.h	80;"	d
H_TRI4_F11	definitions/definitions_h_ref.h	81;"	d
H_TRI4_F20	definitions/definitions_h_ref.h	82;"	d
H_TRI4_F21	definitions/definitions_h_ref.h	83;"	d
H_TRI4_V0	definitions/definitions_h_ref.h	67;"	d
H_TRI4_V1	definitions/definitions_h_ref.h	68;"	d
H_TRI4_V2	definitions/definitions_h_ref.h	69;"	d
H_TRI4_V3	definitions/definitions_h_ref.h	70;"	d
H_WEDGE1_F0	definitions/definitions_h_ref.h	181;"	d
H_WEDGE1_F1	definitions/definitions_h_ref.h	182;"	d
H_WEDGE1_F2	definitions/definitions_h_ref.h	183;"	d
H_WEDGE1_F3	definitions/definitions_h_ref.h	184;"	d
H_WEDGE1_F4	definitions/definitions_h_ref.h	185;"	d
H_WEDGE1_V0	definitions/definitions_h_ref.h	168;"	d
H_WEDGE8_F00	definitions/definitions_h_ref.h	187;"	d
H_WEDGE8_F01	definitions/definitions_h_ref.h	188;"	d
H_WEDGE8_F02	definitions/definitions_h_ref.h	189;"	d
H_WEDGE8_F03	definitions/definitions_h_ref.h	190;"	d
H_WEDGE8_F10	definitions/definitions_h_ref.h	191;"	d
H_WEDGE8_F11	definitions/definitions_h_ref.h	192;"	d
H_WEDGE8_F12	definitions/definitions_h_ref.h	193;"	d
H_WEDGE8_F13	definitions/definitions_h_ref.h	194;"	d
H_WEDGE8_F20	definitions/definitions_h_ref.h	195;"	d
H_WEDGE8_F21	definitions/definitions_h_ref.h	196;"	d
H_WEDGE8_F22	definitions/definitions_h_ref.h	197;"	d
H_WEDGE8_F23	definitions/definitions_h_ref.h	198;"	d
H_WEDGE8_F30	definitions/definitions_h_ref.h	199;"	d
H_WEDGE8_F31	definitions/definitions_h_ref.h	200;"	d
H_WEDGE8_F32	definitions/definitions_h_ref.h	201;"	d
H_WEDGE8_F33	definitions/definitions_h_ref.h	202;"	d
H_WEDGE8_F40	definitions/definitions_h_ref.h	203;"	d
H_WEDGE8_F41	definitions/definitions_h_ref.h	204;"	d
H_WEDGE8_F42	definitions/definitions_h_ref.h	205;"	d
H_WEDGE8_F43	definitions/definitions_h_ref.h	206;"	d
H_WEDGE8_V0	definitions/definitions_h_ref.h	170;"	d
H_WEDGE8_V1	definitions/definitions_h_ref.h	171;"	d
H_WEDGE8_V2	definitions/definitions_h_ref.h	172;"	d
H_WEDGE8_V3	definitions/definitions_h_ref.h	173;"	d
H_WEDGE8_V4	definitions/definitions_h_ref.h	174;"	d
H_WEDGE8_V5	definitions/definitions_h_ref.h	175;"	d
H_WEDGE8_V6	definitions/definitions_h_ref.h	176;"	d
H_WEDGE8_V7	definitions/definitions_h_ref.h	177;"	d
IL_BASE	definitions/definitions_intrusive.h	27;"	d
IL_ELEMENT	definitions/definitions_intrusive.h	37;"	d
IL_ELEMENT_ADAPTATION	definitions/definitions_intrusive.h	41;"	d
IL_ELEMENT_GEOMETRY	definitions/definitions_intrusive.h	38;"	d
IL_ELEMENT_PLOTTING	definitions/definitions_intrusive.h	39;"	d
IL_ELEMENT_SOLUTION	definitions/definitions_intrusive.h	40;"	d
IL_ELEMENT_SOLVER	definitions/definitions_intrusive.h	43;"	d
IL_ELEMENT_SOLVER_DG	definitions/definitions_intrusive.h	44;"	d
IL_ELEMENT_SOLVER_DPG	definitions/definitions_intrusive.h	45;"	d
IL_ELEMENT_SOLVER_OPG	definitions/definitions_intrusive.h	46;"	d
IL_FACE	definitions/definitions_intrusive.h	59;"	d
IL_FACE_SOLVER	definitions/definitions_intrusive.h	60;"	d
IL_FACE_SOLVER_ADAPTIVE	definitions/definitions_intrusive.h	64;"	d
IL_FACE_SOLVER_DG	definitions/definitions_intrusive.h	61;"	d
IL_FACE_SOLVER_DPG	definitions/definitions_intrusive.h	62;"	d
IL_FACE_SOLVER_OPG	definitions/definitions_intrusive.h	63;"	d
IL_INVALID	definitions/definitions_intrusive.h	23;"	d
IL_Info	testing/support/intrusive/test_support_intrusive.cpp	/^struct IL_Info {$/;"	s	file:
IL_SOLVER	definitions/definitions_intrusive.h	28;"	d
IL_SOLVER_ADAPTIVE	definitions/definitions_intrusive.h	33;"	d
IL_SOLVER_DG	definitions/definitions_intrusive.h	29;"	d
IL_SOLVER_DPG	definitions/definitions_intrusive.h	30;"	d
IL_SOLVER_OPG	definitions/definitions_intrusive.h	31;"	d
IL_SOLVER_OPGC0	definitions/definitions_intrusive.h	32;"	d
IL_VOLUME	definitions/definitions_intrusive.h	50;"	d
IL_VOLUME_SOLVER	definitions/definitions_intrusive.h	51;"	d
IL_VOLUME_SOLVER_ADAPTIVE	definitions/definitions_intrusive.h	55;"	d
IL_VOLUME_SOLVER_DG	definitions/definitions_intrusive.h	52;"	d
IL_VOLUME_SOLVER_DPG	definitions/definitions_intrusive.h	53;"	d
IL_VOLUME_SOLVER_OPG	definitions/definitions_intrusive.h	54;"	d
INDEX_MAX	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	51;"	d
INDEX_MAX	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	61;"	d
INDEX_MIN	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	50;"	d
INDEX_MIN	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	60;"	d
Index	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	49;"	d
Index	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	59;"	d
Info_I	simulation/solvers/adaptation/adaptation.cpp	/^struct Info_I {$/;"	s	file:
Input_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^struct Input_ANN {$/;"	s
Input_Data	processing/post/convert_data.py	/^class Input_Data:$/;"	c
Input_Info	processing/post/convert_data.py	/^class Input_Info:$/;"	c
Integration_Test_Info	testing/integration/test_integration.h	/^struct Integration_Test_Info {$/;"	s
Intrusive_Link	intrusive/intrusive.h	/^struct Intrusive_Link {$/;"	s
Intrusive_List	intrusive/intrusive.h	/^struct Intrusive_List {$/;"	s
Inv_Map	simulation/test_case/solution/restart/inverse_mapping.cpp	/^struct Inv_Map {$/;"	s	file:
Inv_Map_Data	testing/unit/test_unit_inverse_mapping.cpp	/^struct Inv_Map_Data {$/;"	s	file:
LAPACKE_Tsgesv	containers/def_templates_matrix_math.h	27;"	d
LAPACKE_Tsgesv	containers/def_templates_matrix_math.h	60;"	d
LAPACKE_Tsgesv	containers/undef_templates_matrix_math.h	24;"	d
LAPACKE_Tsysv	containers/def_templates_matrix_math.h	26;"	d
LAPACKE_Tsysv	containers/def_templates_matrix_math.h	59;"	d
LAPACKE_Tsysv	containers/undef_templates_matrix_math.h	23;"	d
LHS_CFL_RAMPING	simulation/test_case/definitions_test_case.h	62;"	d
LHS_FULL_NEWTON	simulation/test_case/definitions_test_case.h	58;"	d
LINE	element/definitions_elements.h	33;"	d
LINELEN_MAX	simulation/test_case/solution/restart/restart_T.cpp	387;"	d	file:
LINE_N_PERM	element/nodes_correspondence.h	27;"	d
Lhs_Operators_OPG_T	simulation/solvers/opg/compute_face_rlhs_opg_T.h	/^struct Lhs_Operators_OPG_T {$/;"	s
Lhs_Operators_OPG_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	23;"	d
Lhs_Operators_OPG_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	52;"	d
Lhs_Operators_OPG_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	19;"	d
MAX_BV_OUT	simulation/test_case/boundary/boundary.h	23;"	d
MAX_FLUX_OUT	simulation/test_case/flux/flux.h	23;"	d
MAX_N_UNKNOWNS	simulation/test_case/definitions_test_case.h	40;"	d
MAX_PERTURB	testing/integration/definitions_test_integration.h	31;"	d
MAX_PHYS_ID	simulation/mesh/mesh_readers.cpp	42;"	d	file:
MAYBE_UNUSED	macros.h	47;"	d
METHOD_DG	simulation/test_case/definitions_test_case.h	31;"	d
METHOD_DPG	simulation/test_case/definitions_test_case.h	34;"	d
METHOD_HDG	simulation/test_case/definitions_test_case.h	32;"	d
METHOD_HDPG	simulation/test_case/definitions_test_case.h	33;"	d
METHOD_L2_PROJ	simulation/test_case/definitions_test_case.h	37;"	d
METHOD_OPG	simulation/test_case/definitions_test_case.h	35;"	d
METHOD_OPGC0	simulation/test_case/definitions_test_case.h	36;"	d
MKL_Complex16	definitions/definitions_mkl.h	42;"	d
ML_MAX	simulation/definitions_simulation.h	26;"	d
ML_MAX	testing/integration/test_integration_convergence_support.cpp	60;"	d	file:
ML_MIN	simulation/definitions_simulation.h	25;"	d
Matrix_C	containers/def_templates_matrix.h	112;"	d
Matrix_C	containers/undef_templates_matrix.h	59;"	d
Matrix_CSR_T	containers/def_templates_matrix.h	139;"	d
Matrix_CSR_T	containers/def_templates_matrix.h	30;"	d
Matrix_CSR_T	containers/def_templates_matrix.h	71;"	d
Matrix_CSR_T	containers/matrix_T.h	/^struct Matrix_CSR_T {$/;"	s
Matrix_CSR_T	containers/undef_templates_matrix.h	26;"	d
Matrix_R	containers/def_templates_matrix.h	110;"	d
Matrix_R	containers/def_templates_matrix.h	135;"	d
Matrix_R	containers/undef_templates_matrix.h	57;"	d
Matrix_T	containers/def_templates_matrix.h	134;"	d
Matrix_T	containers/def_templates_matrix.h	27;"	d
Matrix_T	containers/def_templates_matrix.h	68;"	d
Matrix_T	containers/matrix_T.h	/^struct Matrix_T {$/;"	s
Matrix_T	containers/undef_templates_matrix.h	23;"	d
Mesh	simulation/mesh/mesh.h	/^struct Mesh {$/;"	s
Mesh_Connectivity	simulation/mesh/mesh_connectivity.h	/^struct Mesh_Connectivity {$/;"	s
Mesh_Connectivity_l	simulation/mesh/mesh_connectivity.cpp	/^struct Mesh_Connectivity_l {$/;"	s	file:
Mesh_Ctrl_Data	simulation/simulation.cpp	/^struct Mesh_Ctrl_Data {$/;"	s	file:
Mesh_Data	simulation/mesh/mesh_readers.h	/^struct Mesh_Data {$/;"	s
Mesh_Data_l	simulation/mesh/mesh_readers.cpp	/^struct Mesh_Data_l {$/;"	s	file:
Mesh_Input	simulation/mesh/mesh.h	/^struct Mesh_Input {$/;"	s
Mesh_Read_Data	testing/integration/test_integration_mesh.cpp	/^struct Mesh_Read_Data {$/;"	s	file:
Mesh_Test_Data	testing/integration/test_integration_mesh.cpp	/^struct Mesh_Test_Data {$/;"	s	file:
Mesh_Vertices	simulation/mesh/mesh_vertices.h	/^struct Mesh_Vertices {$/;"	s
Mesh_Vertices_l	simulation/mesh/mesh_vertices.cpp	/^struct Mesh_Vertices_l {$/;"	s	file:
Multiarray_Matrix_T	containers/def_templates_multiarray.h	159;"	d
Multiarray_Matrix_T	containers/def_templates_multiarray.h	32;"	d
Multiarray_Matrix_T	containers/def_templates_multiarray.h	83;"	d
Multiarray_Matrix_T	containers/multiarray_T.h	/^struct Multiarray_Matrix_T {$/;"	s
Multiarray_Matrix_T	containers/undef_templates_multiarray.h	29;"	d
Multiarray_Operator	simulation/operators/multiarray_operator.h	/^struct Multiarray_Operator {$/;"	s
Multiarray_Partial	testing/support/containers/test_support_multiarray.cpp	/^struct Multiarray_Partial {$/;"	s	file:
Multiarray_R	containers/def_templates_multiarray.h	129;"	d
Multiarray_R	containers/def_templates_multiarray.h	153;"	d
Multiarray_R	containers/undef_templates_multiarray.h	71;"	d
Multiarray_T	containers/def_templates_multiarray.h	152;"	d
Multiarray_T	containers/def_templates_multiarray.h	27;"	d
Multiarray_T	containers/def_templates_multiarray.h	78;"	d
Multiarray_T	containers/multiarray_T.h	/^struct Multiarray_T {$/;"	s
Multiarray_T	containers/undef_templates_multiarray.h	24;"	d
Multiarray_Vector_T	containers/def_templates_multiarray.h	157;"	d
Multiarray_Vector_T	containers/def_templates_multiarray.h	30;"	d
Multiarray_Vector_T	containers/def_templates_multiarray.h	81;"	d
Multiarray_Vector_T	containers/multiarray_T.h	/^struct Multiarray_Vector_T {$/;"	s
Multiarray_Vector_T	containers/undef_templates_multiarray.h	27;"	d
N	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^	const struct const_Matrix_T* N;     \/\/\/< The DPG norm operator.$/;"	m	struct:Norm_DPG	typeref:struct:Norm_DPG::const_Matrix_T	file:
NEMAX	element/definitions_elements.h	59;"	d
NEMAX	element/definitions_elements.h	67;"	d
NEMAX	element/definitions_elements.h	75;"	d
NEQ	simulation/solvers/numerical_flux/numerical_flux_burgers_inviscid_T.cpp	37;"	d	file:
NEQ	simulation/solvers/numerical_flux/numerical_flux_diffusion_T.cpp	30;"	d	file:
NEQ	simulation/solvers/numerical_flux/numerical_flux_euler_T.cpp	43;"	d	file:
NEQ	simulation/solvers/numerical_flux/numerical_flux_navier_stokes_T.cpp	30;"	d	file:
NEQ	simulation/test_case/boundary/boundary_euler_T.cpp	40;"	d	file:
NEQ	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	42;"	d	file:
NEQ	simulation/test_case/flux/flux_advection_T.cpp	32;"	d	file:
NEQ	simulation/test_case/flux/flux_burgers_inviscid_T.cpp	31;"	d	file:
NEQ	simulation/test_case/flux/flux_diffusion_T.cpp	31;"	d	file:
NEQ	simulation/test_case/flux/flux_euler_T.cpp	32;"	d	file:
NEQ	simulation/test_case/flux/flux_navier_stokes_T.cpp	35;"	d	file:
NEQ	simulation/test_case/solution/euler/solution_euler_T.cpp	44;"	d	file:
NEQ	simulation/test_case/solution/navier_stokes/solution_navier_stokes_T.cpp	47;"	d	file:
NFMAX	element/definitions_elements.h	60;"	d
NFMAX	element/definitions_elements.h	68;"	d
NFMAX	element/definitions_elements.h	76;"	d
NFREFMAX	element/definitions_elements.h	62;"	d
NFREFMAX	element/definitions_elements.h	70;"	d
NFREFMAX	element/definitions_elements.h	78;"	d
NFVEMAX	element/definitions_elements.h	61;"	d
NFVEMAX	element/definitions_elements.h	69;"	d
NFVEMAX	element/definitions_elements.h	77;"	d
NODES_AO	element/definitions_nodes.h	40;"	d
NODES_EQ	element/definitions_nodes.h	30;"	d
NODES_GJW	element/definitions_nodes.h	47;"	d
NODES_GL	element/definitions_nodes.h	35;"	d
NODES_GLL	element/definitions_nodes.h	36;"	d
NODES_GLLW	element/definitions_nodes.h	46;"	d
NODES_GLW	element/definitions_nodes.h	45;"	d
NODES_PLOT	element/definitions_nodes.h	28;"	d
NODES_VERTEX	element/definitions_nodes.h	27;"	d
NODES_WSH	element/definitions_nodes.h	41;"	d
NODES_WV	element/definitions_nodes.h	31;"	d
NODES_WVHToP	element/definitions_nodes.h	48;"	d
NODETOL_MESH	simulation/mesh/definitions_mesh.h	32;"	d
NO_SLIP_ALL_ROTATING_RHO_E	simulation/test_case/boundary/definitions_bc.h	84;"	d
NO_SLIP_ALL__RHO_E	simulation/test_case/boundary/definitions_bc.h	82;"	d
NO_SLIP_ROTATING	simulation/test_case/boundary/definitions_bc.h	79;"	d
NREFMAXHEX	element/definitions_elements.h	89;"	d
NREFMAXLINE	element/definitions_elements.h	85;"	d
NREFMAXPOINT	element/definitions_elements.h	84;"	d
NREFMAXPYR	element/definitions_elements.h	91;"	d
NREFMAXQUAD	element/definitions_elements.h	87;"	d
NREFMAXTET	element/definitions_elements.h	88;"	d
NREFMAXTRI	element/definitions_elements.h	86;"	d
NREFMAXWEDGE	element/definitions_elements.h	90;"	d
NSUBFMAX	element/definitions_elements.h	63;"	d
NSUBFMAX	element/definitions_elements.h	71;"	d
NSUBFMAX	element/definitions_elements.h	79;"	d
NUM_FLUX_BR2_STABLE	simulation/solvers/numerical_flux/definitions_numerical_flux.h	27;"	d
NUM_FLUX_CDG2	simulation/solvers/numerical_flux/definitions_numerical_flux.h	28;"	d
NUM_FLUX_INVALID	simulation/solvers/numerical_flux/definitions_numerical_flux.h	23;"	d
NUM_FLUX_LAX_FRIEDRICHS	simulation/solvers/numerical_flux/definitions_numerical_flux.h	31;"	d
NUM_FLUX_ROE_PIKE	simulation/solvers/numerical_flux/definitions_numerical_flux.h	30;"	d
NUM_FLUX_UPWIND	simulation/solvers/numerical_flux/definitions_numerical_flux.h	25;"	d
NVAR	simulation/solvers/numerical_flux/numerical_flux_burgers_inviscid_T.cpp	38;"	d	file:
NVAR	simulation/solvers/numerical_flux/numerical_flux_euler_T.cpp	44;"	d	file:
NVAR	simulation/test_case/boundary/boundary_euler_T.cpp	41;"	d	file:
NVAR	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	43;"	d	file:
NVAR	simulation/test_case/flux/flux_advection_T.cpp	33;"	d	file:
NVAR	simulation/test_case/flux/flux_burgers_inviscid_T.cpp	32;"	d	file:
NVAR	simulation/test_case/flux/flux_diffusion_T.cpp	32;"	d	file:
NVAR	simulation/test_case/flux/flux_euler_T.cpp	33;"	d	file:
NVAR	simulation/test_case/flux/flux_navier_stokes_T.cpp	36;"	d	file:
NVAR	simulation/test_case/solution/euler/solution_euler_T.cpp	45;"	d	file:
NVAR	simulation/test_case/solution/navier_stokes/solution_navier_stokes_T.cpp	48;"	d	file:
NVEMAX	element/definitions_elements.h	57;"	d
NVEMAX	element/definitions_elements.h	65;"	d
NVEMAX	element/definitions_elements.h	73;"	d
NVR	simulation/solvers/numerical_flux/numerical_flux_diffusion_T.cpp	31;"	d	file:
NVR	simulation/solvers/numerical_flux/numerical_flux_euler_T.cpp	45;"	d	file:
NVR	simulation/solvers/numerical_flux/numerical_flux_navier_stokes_T.cpp	31;"	d	file:
N_DEC	containers/matrix_print_T.cpp	29;"	d	file:
N_MS	simulation/mesh/mesh_connectivity.h	28;"	d
N_SCHUR	simulation/solvers/solve_implicit.cpp	285;"	d	file:
N_ST_STD	element/definitions_elements.h	44;"	d
Needed_Members	simulation/solvers/dg/def_templates_volume_solver_dg.h	32;"	d
Needed_Members	simulation/solvers/dg/def_templates_volume_solver_dg.h	48;"	d
Needed_Members	simulation/solvers/dg/undef_templates_volume_solver_dg.h	29;"	d
Needed_Members	simulation/solvers/dg/volume_solver_dg_T.cpp	/^struct Needed_Members {$/;"	s	file:
Neigh_Info	simulation/computational_elements/face.h	/^	struct Neigh_Info {$/;"	s	struct:Face
Neigh_Info_DG	simulation/solvers/dg/def_templates_face_solver_dg.h	24;"	d
Neigh_Info_DG	simulation/solvers/dg/def_templates_face_solver_dg.h	36;"	d
Neigh_Info_DG	simulation/solvers/dg/face_solver_dg_T.h	/^	struct Neigh_Info_DG {$/;"	s	struct:DG_Solver_Face_T
Neigh_Info_DG	simulation/solvers/dg/undef_templates_face_solver_dg.h	24;"	d
Neigh_Info_NF_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	26;"	d
Neigh_Info_NF_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	90;"	d
Neigh_Info_NF_T	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	struct Neigh_Info_NF_T {$/;"	s	struct:Numerical_Flux_T
Neigh_Info_NF_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	24;"	d
Neigh_info_mi	simulation/computational_elements/face.cpp	/^	struct Neigh_info_mi {$/;"	s	struct:Face_mesh_info	file:
Newton	simulation/test_case/solution/restart/inverse_mapping.cpp	/^struct Newton {$/;"	s	file:
Node	containers/matrix.cpp	/^struct Node {$/;"	s	file:
Node_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^struct Node_ANN {$/;"	s
Nodes	element/nodes.h	/^struct Nodes {$/;"	s
Nodes_Data_PYR	testing/unit/test_unit_nodes.cpp	/^struct Nodes_Data_PYR {$/;"	s	file:
Nodes_Data_SI	testing/unit/test_unit_nodes.cpp	/^struct Nodes_Data_SI {$/;"	s	file:
Nodes_Data_TP	testing/unit/test_unit_nodes.cpp	/^struct Nodes_Data_TP {$/;"	s	file:
Nodes_FC_Data	testing/unit/test_unit_nodes.cpp	/^struct Nodes_FC_Data {$/;"	s	file:
Nodes_Info	simulation/test_case/solution/restart/restart_writers.cpp	/^struct Nodes_Info {$/;"	s	file:
Nodes_Sorted_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^struct Nodes_Sorted_ANN {$/;"	s
Norm_DPG	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^struct Norm_DPG {$/;"	s	file:
Norm_DPG	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	35;"	d
Norm_DPG	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	77;"	d
Norm_DPG	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	30;"	d
Norm_DPG	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	32;"	d
Num_Flux_T	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^struct Num_Flux_T {$/;"	s	file:
Num_Flux_T	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	32;"	d
Num_Flux_T	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	51;"	d
Num_Flux_T	simulation/solvers/dg/undef_templates_compute_face_rlhs_dg.h	26;"	d
Num_Flux_T	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^struct Num_Flux_T {$/;"	s	file:
Num_Flux_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	40;"	d
Num_Flux_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	69;"	d
Num_Flux_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	31;"	d
Numerical_Flux_Input_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	22;"	d
Numerical_Flux_Input_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	86;"	d
Numerical_Flux_Input_T	simulation/solvers/numerical_flux/numerical_flux_T.h	/^struct Numerical_Flux_Input_T {$/;"	s
Numerical_Flux_Input_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	20;"	d
Numerical_Flux_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	24;"	d
Numerical_Flux_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	88;"	d
Numerical_Flux_T	simulation/solvers/numerical_flux/numerical_flux_T.h	/^struct Numerical_Flux_T {$/;"	s
Numerical_Flux_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	22;"	d
OPG_Solver_Element	simulation/solvers/opg/element_solver_opg.h	/^struct OPG_Solver_Element {$/;"	s
OPG_Solver_Face_T	simulation/solvers/opg/def_templates_face_solver_opg.h	25;"	d
OPG_Solver_Face_T	simulation/solvers/opg/def_templates_face_solver_opg.h	49;"	d
OPG_Solver_Face_T	simulation/solvers/opg/face_solver_opg_T.h	/^struct OPG_Solver_Face_T {$/;"	s
OPG_Solver_Face_T	simulation/solvers/opg/undef_templates_face_solver_opg.h	23;"	d
OPG_Solver_Volume_T	simulation/solvers/opg/def_templates_volume_solver_opg.h	25;"	d
OPG_Solver_Volume_T	simulation/solvers/opg/def_templates_volume_solver_opg.h	39;"	d
OPG_Solver_Volume_T	simulation/solvers/opg/undef_templates_volume_solver_opg.h	23;"	d
OPG_Solver_Volume_T	simulation/solvers/opg/volume_solver_opg_T.h	/^struct OPG_Solver_Volume_T {$/;"	s
OP_IND_CE	element/definitions_element_operators.h	33;"	d
OP_IND_D	element/definitions_element_operators.h	32;"	d
OP_IND_H	element/definitions_element_operators.h	34;"	d
OP_IND_I	element/definitions_element_operators.h	29;"	d
OP_IND_O	element/definitions_element_operators.h	30;"	d
OP_IND_P	element/definitions_element_operators.h	35;"	d
OP_INVALID_IND	element/definitions_element_operators.h	58;"	d
OP_ORDER_MAX	element/definitions_element_operators.h	27;"	d
OP_R_CE_EE	element/definitions_element_operators.h	75;"	d
OP_R_CE_EF	element/definitions_element_operators.h	74;"	d
OP_R_CE_EV	element/definitions_element_operators.h	73;"	d
OP_R_CE_FE	element/definitions_element_operators.h	72;"	d
OP_R_CE_FF	element/definitions_element_operators.h	71;"	d
OP_R_CE_FV	element/definitions_element_operators.h	70;"	d
OP_R_CE_VE	element/definitions_element_operators.h	69;"	d
OP_R_CE_VF	element/definitions_element_operators.h	68;"	d
OP_R_CE_VV	element/definitions_element_operators.h	67;"	d
OP_R_D_0	element/definitions_element_operators.h	62;"	d
OP_R_D_ALL	element/definitions_element_operators.h	63;"	d
OP_R_H_1	element/definitions_element_operators.h	79;"	d
OP_R_H_ALL	element/definitions_element_operators.h	82;"	d
OP_R_H_CF	element/definitions_element_operators.h	80;"	d
OP_R_H_FC	element/definitions_element_operators.h	81;"	d
OP_R_P_1	element/definitions_element_operators.h	86;"	d
OP_R_P_12	element/definitions_element_operators.h	87;"	d
OP_R_P_1P	element/definitions_element_operators.h	88;"	d
OP_R_P_1PPM1	element/definitions_element_operators.h	89;"	d
OP_R_P_ALL	element/definitions_element_operators.h	93;"	d
OP_R_P_P1	element/definitions_element_operators.h	90;"	d
OP_R_P_PM0	element/definitions_element_operators.h	91;"	d
OP_R_P_PM1	element/definitions_element_operators.h	92;"	d
OP_T_CC	element/definitions_element_operators.h	43;"	d
OP_T_CV	element/definitions_element_operators.h	42;"	d
OP_T_TW	element/definitions_element_operators.h	47;"	d
OP_T_UNUSED	element/definitions_element_operators.h	52;"	d
OP_T_VC	element/definitions_element_operators.h	45;"	d
OP_T_VV	element/definitions_element_operators.h	44;"	d
ORDER_VIS_CONV_ML_MAX	testing/integration/test_integration_convergence_support.cpp	55;"	d	file:
ORDER_VIS_CONV_P	testing/integration/test_integration_convergence_support.cpp	54;"	d	file:
OUTPUT_GEOMETRY	simulation/geometry/geometry_T.cpp	44;"	d	file:
OUTPUT_MESH_DATA	simulation/mesh/mesh_readers.cpp	40;"	d	file:
OUTPUT_PETSC_AB	simulation/solvers/solve_implicit.cpp	63;"	d	file:
OUTPUT_PETSC_MATRICES	testing/integration/test_integration_linearization.cpp	61;"	d	file:
OUTPUT_PETSC_MATRICES_IS	testing/integration/test_integration_inf_sup.cpp	66;"	d	file:
OUTPUT_SOLUTION	simulation/solvers/solve_implicit.cpp	64;"	d	file:
OUTPUT_STEP	simulation/solvers/solve_implicit.cpp	66;"	d	file:
OUTPUT_SUCCESS	macros.h	61;"	d
Op_IO	element/element_operators.h	/^struct Op_IO {$/;"	s
Operator	simulation/operators/operator.h	/^struct Operator {$/;"	s
Operator_Info	element/element_operators.h	/^struct Operator_Info {$/;"	s
Operators_TP	element/element_operators_tp.h	/^struct Operators_TP {$/;"	s
Output_Info	processing/post/convert_data.py	/^class Output_Info:$/;"	c
PARTITION_OWN	simulation/mesh/mesh_readers.cpp	41;"	d	file:
PDE_ADVECTION	simulation/test_case/definitions_test_case.h	23;"	d
PDE_BURGERS_INVISCID	simulation/test_case/definitions_test_case.h	27;"	d
PDE_DIFFUSION	simulation/test_case/definitions_test_case.h	24;"	d
PDE_EULER	simulation/test_case/definitions_test_case.h	25;"	d
PDE_NAVIER_STOKES	simulation/test_case/definitions_test_case.h	26;"	d
PENALTY_SCALING	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	275;"	d	file:
PENALTY_SCALING_OPG	simulation/solvers/opg/penalty_opg.h	32;"	d
PERIODIC_XL	simulation/mesh/definitions_mesh.h	37;"	d
PERIODIC_XL_REFLECTED_Y	simulation/mesh/definitions_mesh.h	44;"	d
PERIODIC_XR	simulation/mesh/definitions_mesh.h	38;"	d
PERIODIC_XR_REFLECTED_Y	simulation/mesh/definitions_mesh.h	45;"	d
PERIODIC_YL	simulation/mesh/definitions_mesh.h	39;"	d
PERIODIC_YR	simulation/mesh/definitions_mesh.h	40;"	d
PERIODIC_ZL	simulation/mesh/definitions_mesh.h	41;"	d
PERIODIC_ZR	simulation/mesh/definitions_mesh.h	42;"	d
PI	general/definitions_math.h	23;"	d
PI_OVER_4	general/definitions_math.h	24;"	d
POINT	element/definitions_elements.h	32;"	d
POINT_N_PERM	element/nodes_correspondence.h	26;"	d
POW2	general/math_functions_T.h	25;"	d
POW2_R	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	51;"	d	file:
PRINT_EIG_VALS_ERRORS	testing/integration/test_integration_inf_sup.cpp	67;"	d	file:
PRINT_FILELINE	macros.h	32;"	d
PRINT_NORM_INF_AB	simulation/solvers/solve_implicit.cpp	62;"	d	file:
PRINT_NORM_INF_X	simulation/solvers/solve_implicit.cpp	61;"	d	file:
PRINT_OPERATORS	simulation/solvers/compute_face_rlhs_T.cpp	40;"	d	file:
PRINT_OPERATORS	simulation/solvers/compute_volume_rlhs_T.cpp	43;"	d	file:
PYR	element/definitions_elements.h	39;"	d
P_INVALID	simulation/simulation.cpp	50;"	d	file:
P_MAX	simulation/definitions_simulation.h	24;"	d
P_MAX	testing/integration/test_integration_convergence_support.cpp	61;"	d	file:
P_MIN	simulation/definitions_simulation.h	23;"	d
Partials_Scalar	simulation/test_case/flux/def_templates_flux.h	163;"	d
Partials_Scalar	simulation/test_case/flux/def_templates_flux.h	61;"	d
Partials_Scalar	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^struct Partials_Scalar {$/;"	s	file:
Partials_Scalar	simulation/test_case/flux/undef_templates_flux.h	59;"	d
Partials_Tensor	simulation/test_case/flux/def_templates_flux.h	165;"	d
Partials_Tensor	simulation/test_case/flux/def_templates_flux.h	63;"	d
Partials_Tensor	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^struct Partials_Tensor {$/;"	s	file:
Partials_Tensor	simulation/test_case/flux/undef_templates_flux.h	61;"	d
Partials_Vector	simulation/test_case/flux/def_templates_flux.h	164;"	d
Partials_Vector	simulation/test_case/flux/def_templates_flux.h	62;"	d
Partials_Vector	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^struct Partials_Vector {$/;"	s	file:
Partials_Vector	simulation/test_case/flux/undef_templates_flux.h	60;"	d
Periodic_Face	simulation/mesh/mesh_periodic.cpp	/^struct Periodic_Face {$/;"	s	file:
Periodic_Face_Info	simulation/mesh/mesh_periodic.cpp	/^struct Periodic_Face_Info {$/;"	s	file:
Plotting_Element	simulation/visualization/element_plotting.h	/^struct Plotting_Element {$/;"	s
Plotting_Nodes	element/nodes_plotting.h	/^struct Plotting_Nodes {$/;"	s
Plotting_Nodes_Data	testing/unit/test_unit_nodes.cpp	/^struct Plotting_Nodes_Data {$/;"	s	file:
Pr	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	Type Pr; \/\/\/< The Prandtl Number.$/;"	m	struct:Flux_Data_Navier_Stokes	file:
Pr	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^	     Pr,     \/\/\/< The Prandtl number.$/;"	m	struct:Sol_Data__tc	file:
QUAD	element/definitions_elements.h	35;"	d
QUAD_N_PERM	element/nodes_correspondence.h	29;"	d
RAND_SEED	testing/support/containers/test_support_multiarray.cpp	456;"	d	file:
REAL_MAX	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	46;"	d
REMOVE_CD_CL__D	simulation/test_case/compute_error/compute_error_euler.h	27;"	d
REMOVE_CD_CL__NONE	simulation/test_case/compute_error/compute_error_euler.h	26;"	d
RESTART_GMSH	simulation/test_case/solution/restart/restart_writers.cpp	47;"	d	file:
R_INDEX_MAX	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	53;"	d
R_INDEX_MAX	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	63;"	d
R_INDEX_MIN	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	52;"	d
R_INDEX_MIN	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	62;"	d
Real	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	45;"	d
Real	templates/def_templates_type_d.h	23;"	d
Real	templates/def_templates_type_dc.h	23;"	d
Real	templates/def_templates_type_i.h	22;"	d
Real	templates/undef_templates_type.h	21;"	d
Restart_Info	simulation/test_case/solution/restart/def_templates_restart.h	32;"	d
Restart_Info	simulation/test_case/solution/restart/def_templates_restart.h	59;"	d
Restart_Info	simulation/test_case/solution/restart/restart_T.cpp	/^struct Restart_Info {$/;"	s	file:
Restart_Info	simulation/test_case/solution/restart/undef_templates_restart.h	29;"	d
Rg	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^	       Rg;    \/\/\/< The gas constant.$/;"	m	struct:Sol_Data__pv	file:
SOLVER_E	simulation/test_case/definitions_test_case.h	43;"	d
SOLVER_EI	simulation/test_case/definitions_test_case.h	45;"	d
SOLVER_E_EULER	simulation/test_case/definitions_test_case.h	49;"	d
SOLVER_E_LS_RK_54	simulation/test_case/definitions_test_case.h	51;"	d
SOLVER_E_SSP_RK_33	simulation/test_case/definitions_test_case.h	50;"	d
SOLVER_I	simulation/test_case/definitions_test_case.h	44;"	d
SOLVER_I_DIRECT	simulation/test_case/definitions_test_case.h	53;"	d
SOLVER_I_ITERATIVE	simulation/test_case/definitions_test_case.h	54;"	d
SOURCE_A	simulation/test_case/solution/advection/solution_advection_default_T.cpp	43;"	d	file:
SOURCE_M	simulation/test_case/solution/advection/solution_advection_default_T.cpp	42;"	d	file:
SQRT2	general/definitions_math.h	26;"	d
SQRT3	general/definitions_math.h	27;"	d
SQRT6	general/definitions_math.h	28;"	d
SQRT_EPS	definitions/definitions_tol.h	24;"	d
SQRT_GAMMA	simulation/test_case/definitions_physics.h	26;"	d
SSS_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^struct SSS_ANN {$/;"	s
SSS_c	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^struct SSS_c {$/;"	s	file:
SSS_query	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^static void SSS_query (struct SSS_c*const sss)$/;"	f	file:
STRLEN_MAX	definitions/definitions_alloc.h	23;"	d
STRLEN_MIN	definitions/definitions_alloc.h	24;"	d
ST_PYR	element/definitions_elements.h	50;"	d
ST_SI	element/definitions_elements.h	49;"	d
ST_TP	element/definitions_elements.h	48;"	d
ST_WEDGE	element/definitions_elements.h	51;"	d
SUMMATION_L2_VOL	simulation/test_case/compute_error/compute_error.cpp	370;"	d	file:
SUMMATION_STANDARD	simulation/test_case/compute_error/compute_error.cpp	371;"	d	file:
S_Params_DPG	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^struct S_Params_DPG {$/;"	s	file:
S_Params_DPG	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	34;"	d
S_Params_DPG	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	76;"	d
S_Params_DPG	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	29;"	d
S_Params_DPG	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	31;"	d
S_Params_T	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^struct S_Params_T {$/;"	s	file:
S_Params_T	simulation/solvers/dg/compute_volume_rlhs_dg_T.cpp	/^struct S_Params_T {$/;"	s	file:
S_Params_T	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	31;"	d
S_Params_T	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	50;"	d
S_Params_T	simulation/solvers/dg/def_templates_compute_volume_rlhs_dg.h	27;"	d
S_Params_T	simulation/solvers/dg/def_templates_compute_volume_rlhs_dg.h	38;"	d
S_Params_T	simulation/solvers/dg/undef_templates_compute_face_rlhs_dg.h	25;"	d
S_Params_T	simulation/solvers/dg/undef_templates_compute_volume_rlhs_dg.h	23;"	d
S_Params_T	simulation/solvers/opg/compute_volume_rlhs_opg_T.cpp	/^struct S_Params_T {$/;"	s	file:
S_Params_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	30;"	d
S_Params_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	49;"	d
S_Params_T	simulation/solvers/opg/undef_templates_compute_volume_rlhs_opg.h	26;"	d
S_Params_Volume_Structor_T	simulation/solvers/compute_volume_rlhs_T.h	/^struct S_Params_Volume_Structor_T {$/;"	s
S_Params_Volume_Structor_T	simulation/solvers/def_templates_compute_volume_rlhs.h	22;"	d
S_Params_Volume_Structor_T	simulation/solvers/def_templates_compute_volume_rlhs.h	58;"	d
S_Params_Volume_Structor_T	simulation/solvers/undef_templates_compute_volume_rlhs.h	21;"	d
S_Params_f_T	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^struct S_Params_f_T {$/;"	s	file:
S_Params_f_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	39;"	d
S_Params_f_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	68;"	d
S_Params_f_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	30;"	d
Schur_Data	simulation/solvers/solve_implicit.cpp	/^struct Schur_Data {$/;"	s	file:
Semi_Norm_DPG	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^struct Semi_Norm_DPG {$/;"	s	file:
Semi_Norm_DPG	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	36;"	d
Semi_Norm_DPG	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	78;"	d
Semi_Norm_DPG	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	31;"	d
Simulation	simulation/simulation.h	/^struct Simulation {$/;"	s
SlepcEPS	definitions/definitions_slepc.h	/^typedef struct _p_EPS* SlepcEPS; \/\/\/< Typedef to avoid conflict with \\ref EPS.$/;"	t	typeref:struct:_p_EPS
Sol_Data__Advection_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	30;"	d
Sol_Data__Advection_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	47;"	d
Sol_Data__Advection_T	simulation/test_case/solution/advection/solution_advection_T.h	/^struct Sol_Data__Advection_T {$/;"	s
Sol_Data__Advection_T	simulation/test_case/solution/advection/undef_templates_solution_advection.h	28;"	d
Sol_Data__c_dl	simulation/test_case/solution/euler/solution_euler.cpp	/^struct Sol_Data__c_dl {$/;"	s	file:
Sol_Data__dd	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	41;"	d
Sol_Data__dd	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	67;"	d
Sol_Data__dd	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^struct Sol_Data__dd {$/;"	s	file:
Sol_Data__dd	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	36;"	d
Sol_Data__fs	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	30;"	d
Sol_Data__fs	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	47;"	d
Sol_Data__fs	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^struct Sol_Data__fs {$/;"	s	file:
Sol_Data__fs	simulation/test_case/solution/euler/free_stream/undef_templates_solution_free_stream.h	25;"	d
Sol_Data__pv	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	29;"	d
Sol_Data__pv	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	45;"	d
Sol_Data__pv	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^struct Sol_Data__pv {$/;"	s	file:
Sol_Data__pv	simulation/test_case/solution/euler/periodic_vortex/undef_templates_solution_periodic_vortex.h	25;"	d
Sol_Data__sv	simulation/test_case/solution/euler/supersonic_vortex/def_templates_solution_supersonic_vortex.h	29;"	d
Sol_Data__sv	simulation/test_case/solution/euler/supersonic_vortex/def_templates_solution_supersonic_vortex.h	43;"	d
Sol_Data__sv	simulation/test_case/solution/euler/supersonic_vortex/solution_supersonic_vortex_T.cpp	/^struct Sol_Data__sv {$/;"	s	file:
Sol_Data__sv	simulation/test_case/solution/euler/supersonic_vortex/undef_templates_solution_supersonic_vortex.h	24;"	d
Sol_Data__tc	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	32;"	d
Sol_Data__tc	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	50;"	d
Sol_Data__tc	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^struct Sol_Data__tc {$/;"	s	file:
Sol_Data__tc	simulation/test_case/solution/navier_stokes/taylor_couette/undef_templates_solution_taylor_couette.h	27;"	d
Solution_Container_T	simulation/test_case/solution/def_templates_solution.h	22;"	d
Solution_Container_T	simulation/test_case/solution/def_templates_solution.h	77;"	d
Solution_Container_T	simulation/test_case/solution/solution_T.h	/^struct Solution_Container_T {$/;"	s
Solution_Container_T	simulation/test_case/solution/undef_templates_solution.h	21;"	d
Solution_Element	simulation/test_case/solution/element_solution.h	/^struct Solution_Element {$/;"	s
Solver_Element	simulation/solvers/element_solver.h	/^struct Solver_Element {$/;"	s
Solver_Face_T	simulation/solvers/def_templates_face_solver.h	23;"	d
Solver_Face_T	simulation/solvers/def_templates_face_solver.h	46;"	d
Solver_Face_T	simulation/solvers/face_solver_T.h	/^struct Solver_Face_T {$/;"	s
Solver_Face_T	simulation/solvers/undef_templates_face_solver.h	20;"	d
Solver_Storage_Implicit	simulation/solvers/solve.h	/^struct Solver_Storage_Implicit {$/;"	s
Solver_Volume_T	simulation/solvers/def_templates_volume_solver.h	23;"	d
Solver_Volume_T	simulation/solvers/def_templates_volume_solver.h	50;"	d
Solver_Volume_T	simulation/solvers/undef_templates_solver.h	21;"	d
Solver_Volume_T	simulation/solvers/undef_templates_volume_solver.h	21;"	d
Solver_Volume_T	simulation/solvers/volume_solver_T.h	/^struct Solver_Volume_T {$/;"	s
Sub_Operator_Info	element/element_operators_tp.cpp	/^struct Sub_Operator_Info {$/;"	s	file:
TEST_NORM_ADJOINT	simulation/solvers/dpg/definitions_dpg.h	29;"	d
TEST_NORM_H0	simulation/solvers/dpg/definitions_dpg.h	26;"	d
TEST_NORM_H1	simulation/solvers/dpg/definitions_dpg.h	27;"	d
TEST_NORM_H1_UPWIND	simulation/solvers/dpg/definitions_dpg.h	28;"	d
TEST_NORM_INVALID	simulation/solvers/dpg/definitions_dpg.h	23;"	d
TET	element/definitions_elements.h	36;"	d
TET12	simulation/solvers/adaptation/definitions_adaptation.h	61;"	d
TET6	simulation/solvers/adaptation/definitions_adaptation.h	62;"	d
TET8	simulation/solvers/adaptation/definitions_adaptation.h	60;"	d
THETA_E_PYR	element/element.cpp	705;"	d	file:
THETA_E_TET	element/element.cpp	704;"	d	file:
TOL_CMP_DIM_D	containers/matrix.cpp	/^double TOL_CMP_DIM_D = 0.0; \/\/\/< Tolerance used in \\ref cmp_DIM_d.$/;"	v
TOL_XYZ	definitions/definitions_tol.h	26;"	d
TRI	element/definitions_elements.h	34;"	d
TRI_N_PERM	element/nodes_correspondence.h	28;"	d
TYPE_COMPLEX	templates/definitions_templates_type.h	23;"	d
TYPE_I	templates/def_templates_type_i.h	23;"	d
TYPE_I	templates/undef_templates_type.h	23;"	d
TYPE_II	templates/definitions_templates_type.h	25;"	d
TYPE_RC	templates/def_templates_type_d.h	25;"	d
TYPE_RC	templates/def_templates_type_dc.h	25;"	d
TYPE_RC	templates/undef_templates_type.h	22;"	d
TYPE_REAL	templates/definitions_templates_type.h	22;"	d
Test_Case_T	simulation/test_case/def_templates_test_case.h	22;"	d
Test_Case_T	simulation/test_case/def_templates_test_case.h	46;"	d
Test_Case_T	simulation/test_case/test_case_T.h	/^struct Test_Case_T {$/;"	s
Test_Case_T	simulation/test_case/undef_templates_test_case.h	21;"	d
Test_Case_rc	simulation/test_case/test_case.h	/^struct Test_Case_rc {$/;"	s
Test_Info	testing/test_base.h	/^struct Test_Info {$/;"	s
Type	templates/def_templates_type_b.h	22;"	d
Type	templates/def_templates_type_c.h	21;"	d
Type	templates/def_templates_type_d.h	22;"	d
Type	templates/def_templates_type_dc.h	22;"	d
Type	templates/def_templates_type_i.h	21;"	d
Type	templates/def_templates_type_p.h	22;"	d
Type	templates/undef_templates_type.h	20;"	d
UNUSED	macros.h	46;"	d
UPDATE_NF_BOUNDARY	simulation/solvers/opg/compute_face_rlhs_opg.cpp	52;"	d	file:
USE_CONSTANT_2D	simulation/test_case/solution/advection/solution_advection_default_T.cpp	231;"	d	file:
USE_EXACT_NORMAL_FLUX	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	51;"	d	file:
USE_L2_PROJECTION	simulation/test_case/solution/restart/restart_T.cpp	51;"	d	file:
USE_SINGLE	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	43;"	d
V2	simulation/test_case/flux/flux_euler_T.cpp	/^	           V2,      \/\/\/< Square of the velocity magnitude.$/;"	m	struct:Flux_Data_Euler	file:
VEC_FACTOR	containers/vector_T.h	27;"	d
VISCOSITY_CONSTANT	simulation/test_case/definitions_physics.h	35;"	d
VISCOSITY_INVALID	simulation/test_case/definitions_physics.h	34;"	d
VISCOSITY_SUTHERLAND	simulation/test_case/definitions_physics.h	36;"	d
VISCOUS_BC_INVALID	simulation/test_case/boundary/definitions_bc.h	74;"	d
VIS_GEOM_EDGES	simulation/visualization/definitions_visualization.h	24;"	d
VIS_GEOM_VOLUMES	simulation/visualization/definitions_visualization.h	23;"	d
VIS_NORMALS	simulation/visualization/definitions_visualization.h	25;"	d
VIS_SOFTWARE_PARAVIEW	simulation/visualization/visualization.cpp	58;"	d	file:
VIS_SOLUTION	simulation/visualization/definitions_visualization.h	26;"	d
VTK_HEXAHEDRON	element/nodes_plotting.cpp	40;"	d	file:
VTK_LINE	element/nodes_plotting.cpp	36;"	d	file:
VTK_POLY_LINE	element/nodes_plotting.cpp	44;"	d	file:
VTK_PYR	element/nodes_plotting.cpp	42;"	d	file:
VTK_QUAD	element/nodes_plotting.cpp	38;"	d	file:
VTK_TETRA	element/nodes_plotting.cpp	39;"	d	file:
VTK_TRIANGLE	element/nodes_plotting.cpp	37;"	d	file:
VTK_WEDGE	element/nodes_plotting.cpp	41;"	d	file:
V_inf	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^	       V_inf, \/\/\/< The reference speed of the vortex in the theta-direction.$/;"	m	struct:Sol_Data__pv	file:
Vector_R	containers/def_templates_vector.h	101;"	d
Vector_R	containers/def_templates_vector.h	89;"	d
Vector_R	containers/undef_templates_vector.h	49;"	d
Vector_T	containers/def_templates_vector.h	27;"	d
Vector_T	containers/def_templates_vector.h	58;"	d
Vector_T	containers/def_templates_vector.h	99;"	d
Vector_T	containers/undef_templates_vector.h	23;"	d
Vector_T	containers/vector_T.h	/^struct Vector_T {$/;"	s
Vector_T_indexed	containers/def_templates_multiarray.h	164;"	d
Vector_T_indexed	containers/def_templates_multiarray.h	37;"	d
Vector_T_indexed	containers/def_templates_multiarray.h	88;"	d
Vector_T_indexed	containers/multiarray_T.cpp	/^struct Vector_T_indexed {$/;"	s	file:
Vector_T_indexed	containers/undef_templates_multiarray.h	33;"	d
Vertex_Correspondence	simulation/computational_elements/face.cpp	/^struct Vertex_Correspondence {$/;"	s	file:
Volume	simulation/computational_elements/volume.h	/^struct Volume {$/;"	s
Volume_Data_Vis	simulation/visualization/visualization.cpp	/^struct Volume_Data_Vis {$/;"	s	file:
Volume_mesh_info	simulation/computational_elements/volume.cpp	/^struct Volume_mesh_info {$/;"	s	file:
WEDGE	element/definitions_elements.h	38;"	d
__init__	processing/post/convert_data.py	/^	def __init__ (self,input_path):$/;"	m	class:Input_Data
__init__	processing/post/convert_data.py	/^	def __init__ (self,input_path,input_type):$/;"	m	class:Input_Info
__init__	processing/post/convert_data.py	/^	def __init__ (self,input_path,input_type,dim):$/;"	m	class:Output_Info
a	simulation/geometry/geometry_parametric_T.cpp	/^	Real a,     \/\/\/< Geometry parameter.$/;"	m	struct:Geo_Data	file:
a_e	simulation/solvers/element_solver.h	/^	const struct Adaptation_Element a_e; \/\/\/< \\ref Adaptation_Element.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Adaptation_Element
abs_R	general/def_templates_math_functions.h	87;"	d
abs_R	general/undef_templates_math_functions.h	45;"	d
abs_T	general/def_templates_math_functions.h	105;"	d
abs_T	general/def_templates_math_functions.h	23;"	d
abs_T	general/def_templates_math_functions.h	55;"	d
abs_T	general/undef_templates_math_functions.h	19;"	d
adapt_h	simulation/solvers/adaptation/adaptation.h	/^	int adapt_h[2]; \/\/\/< Number of uniform refinement [0] and coarsening [1] adaptations to perform.$/;"	m	struct:Adaptation_Data
adapt_hp	simulation/solvers/adaptation/adaptation.cpp	/^void adapt_hp (struct Simulation* sim, const int adapt_strategy, const struct Adaptation_Data*const adapt_data)$/;"	f
adapt_hp_faces	simulation/solvers/adaptation/adaptation.cpp	/^static void adapt_hp_faces (struct Simulation* sim)$/;"	f	file:
adapt_hp_volumes	simulation/solvers/adaptation/adaptation.cpp	/^static void adapt_hp_volumes (struct Simulation* sim)$/;"	f	file:
adapt_initial_mesh_if_required	testing/integration/test_integration.cpp	/^void adapt_initial_mesh_if_required (struct Simulation*const sim)$/;"	f
adapt_to_maximum_refinement	testing/integration/test_integration.cpp	/^void adapt_to_maximum_refinement (struct Simulation*const sim, const struct Integration_Test_Info*const int_test_info)$/;"	f
adapt_type	simulation/simulation.h	/^	const int adapt_type; \/\/\/< The type of adaptation to be used. Set based on the ctrl file paramters.$/;"	m	struct:Simulation
adapt_type	simulation/solvers/adaptation/face_solver_adaptive.h	/^	int adapt_type; \/\/\/< The type of adaptation to use. Options: see \\ref definitions_adaptation.h.$/;"	m	struct:Adaptive_Solver_Face
adapt_type	simulation/solvers/adaptation/volume_solver_adaptive.h	/^	int adapt_type; \/\/\/< The type of adaptation to use. Options: see \\ref definitions_adaptation.h.$/;"	m	struct:Adaptive_Solver_Volume
adapt_type	testing/integration/test_integration.h	/^	const int adapt_type; \/\/\/< Analogue of \\ref Simulation::adapt_type.$/;"	m	struct:Integration_Test_Info
add_bc_info	simulation/mesh/mesh_connectivity.cpp	/^static void add_bc_info$/;"	f	file:
add_euler_variable_Error_CE_Data	simulation/test_case/compute_error/compute_error_euler.cpp	/^void add_euler_variable_Error_CE_Data$/;"	f
add_face_grad_coef_f_to_volumes	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static void add_face_grad_coef_f_to_volumes (const struct DG_Solver_Face_T*const dg_s_face)$/;"	f	file:
add_face_grad_coef_f_to_volumes	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	39;"	d
add_face_grad_coef_f_to_volumes	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	64;"	d
add_face_grad_coef_f_to_volumes	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	36;"	d
add_in_place_Matrix_R	containers/def_templates_matrix_math.h	90;"	d
add_in_place_Matrix_R	containers/undef_templates_matrix_math.h	48;"	d
add_in_place_Matrix_T	containers/def_templates_matrix_math.h	35;"	d
add_in_place_Matrix_T	containers/def_templates_matrix_math.h	68;"	d
add_in_place_Matrix_T	containers/matrix_math_T.cpp	/^void add_in_place_Matrix_T (const Real alpha, struct Matrix_T*const a, const struct const_Matrix_T* b)$/;"	f
add_in_place_Matrix_T	containers/undef_templates_matrix_math.h	30;"	d
add_in_place_Multiarray_T	containers/def_templates_multiarray_math.h	33;"	d
add_in_place_Multiarray_T	containers/def_templates_multiarray_math.h	60;"	d
add_in_place_Multiarray_T	containers/multiarray_math_T.cpp	/^void add_in_place_Multiarray_T (const Real alpha, struct Multiarray_T*const a, const struct const_Multiarray_T* b)$/;"	f
add_in_place_Multiarray_T	containers/undef_templates_multiarray_math.h	29;"	d
add_nonlinear_l_mult_contribution	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static void add_nonlinear_l_mult_contribution$/;"	f	file:
add_rhs_Error_CE_Data	simulation/test_case/compute_error/compute_error.cpp	/^void add_rhs_Error_CE_Data (struct Error_CE_Data*const e_ce_d, const struct Simulation*const sim)$/;"	f
add_to_T	general/def_templates_math_functions.h	45;"	d
add_to_T	general/def_templates_math_functions.h	77;"	d
add_to_T	general/math_functions_T.cpp	/^void add_to_T (Type*const data, const Type c_add, const ptrdiff_t n_entries)$/;"	f
add_to_T	general/undef_templates_math_functions.h	39;"	d
add_to_Vector_T	containers/def_templates_vector_math.h	26;"	d
add_to_Vector_T	containers/def_templates_vector_math.h	40;"	d
add_to_Vector_T	containers/undef_templates_vector_math.h	22;"	d
add_to_Vector_T	containers/vector_math_T.cpp	/^void add_to_Vector_T (struct Vector_T* a, const struct const_Vector_T* b)$/;"	f
add_to_Vector_T_T	containers/def_templates_vector_math.h	25;"	d
add_to_Vector_T_T	containers/def_templates_vector_math.h	39;"	d
add_to_Vector_T_T	containers/undef_templates_vector_math.h	21;"	d
add_to_Vector_T_T	containers/vector_math_T.cpp	/^void add_to_Vector_T_T (struct Vector_T* a, const Type* b)$/;"	f
add_to_dlhs_ds__face_boundary	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static void add_to_dlhs_ds__face_boundary$/;"	f	file:
add_to_dlhs_ds__face_boundary_cmplx_step	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static void add_to_dlhs_ds__face_boundary_cmplx_step$/;"	f	file:
add_to_dlhs_ds__norm	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static void add_to_dlhs_ds__norm$/;"	f	file:
add_to_flux_imbalance	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^static void add_to_flux_imbalance$/;"	f	file:
add_to_flux_imbalance	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	34;"	d
add_to_flux_imbalance	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	53;"	d
add_to_flux_imbalance	simulation/solvers/dg/undef_templates_compute_face_rlhs_dg.h	28;"	d
add_to_flux_imbalance	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static void add_to_flux_imbalance (const struct Solver_Face_T*const s_face, const struct Simulation*const sim)$/;"	f	file:
add_to_flux_imbalance	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	40;"	d
add_to_flux_imbalance	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	82;"	d
add_to_flux_imbalance	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	35;"	d
add_to_flux_imbalance	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	36;"	d
add_to_flux_imbalance_face_nf_w_T	simulation/solvers/compute_face_rlhs_T.cpp	/^void add_to_flux_imbalance_face_nf_w_T$/;"	f
add_to_flux_imbalance_face_nf_w_T	simulation/solvers/def_templates_compute_face_rlhs.h	38;"	d
add_to_flux_imbalance_face_nf_w_T	simulation/solvers/def_templates_compute_face_rlhs.h	69;"	d
add_to_flux_imbalance_face_nf_w_T	simulation/solvers/undef_templates_compute_face_rlhs.h	35;"	d
add_to_flux_imbalance_source	simulation/test_case/test_case_T.h	/^	compute_source_rhs_fptr_T add_to_flux_imbalance_source;$/;"	m	struct:Test_Case_T
add_to_flux_imbalance_source_T	simulation/solvers/def_templates_solve.h	24;"	d
add_to_flux_imbalance_source_T	simulation/solvers/def_templates_solve.h	45;"	d
add_to_flux_imbalance_source_T	simulation/solvers/solve_T.cpp	/^void add_to_flux_imbalance_source_T$/;"	f
add_to_flux_imbalance_source_T	simulation/solvers/undef_templates_solve.h	21;"	d
add_to_flux_imbalance_source_advection_default_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	26;"	d
add_to_flux_imbalance_source_advection_default_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	44;"	d
add_to_flux_imbalance_source_advection_default_T	simulation/test_case/solution/advection/solution_advection_default_T.cpp	/^void add_to_flux_imbalance_source_advection_default_T$/;"	f
add_to_flux_imbalance_source_advection_default_T	simulation/test_case/solution/advection/undef_templates_solution_advection_default.h	24;"	d
add_to_flux_imbalance_source_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	28;"	d
add_to_flux_imbalance_source_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	54;"	d
add_to_flux_imbalance_source_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^void add_to_flux_imbalance_source_diffusion_default_steady_T$/;"	f
add_to_flux_imbalance_source_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	25;"	d
add_to_flux_imbalance_source_do_nothing_T	simulation/test_case/solution/def_templates_solution.h	41;"	d
add_to_flux_imbalance_source_do_nothing_T	simulation/test_case/solution/def_templates_solution.h	96;"	d
add_to_flux_imbalance_source_do_nothing_T	simulation/test_case/solution/solution_T.cpp	/^void add_to_flux_imbalance_source_do_nothing_T$/;"	f
add_to_flux_imbalance_source_do_nothing_T	simulation/test_case/solution/undef_templates_solution.h	40;"	d
add_to_lhs_opt__d_opt_t_ds	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static void add_to_lhs_opt__d_opt_t_ds$/;"	f	file:
add_to_lhs_opt__l_mult	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static void add_to_lhs_opt__l_mult$/;"	f	file:
add_to_lhs_p_r	simulation/solvers/compute_rlhs.cpp	/^void add_to_lhs_p_r$/;"	f
add_to_petsc_Mat	simulation/solvers/solve.cpp	/^void add_to_petsc_Mat (const struct Solver_Storage_Implicit*const ssi, const struct const_Matrix_d*const lhs)$/;"	f
add_to_petsc_Mat_Vec_dpg	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static void add_to_petsc_Mat_Vec_dpg$/;"	f	file:
add_to_petsc_Mat_dpg_c	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static void add_to_petsc_Mat_dpg_c$/;"	f	file:
add_to_petsc_Mat_dpg_c	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static void add_to_petsc_Mat_dpg_c$/;"	f	file:
add_to_petsc_Mat_offdiagonal_volume_2	simulation/solvers/dg/compute_volume_rlhs_dg.cpp	/^static void add_to_petsc_Mat_offdiagonal_volume_2$/;"	f	file:
add_to_rlhs__face_T	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^void add_to_rlhs__face_T$/;"	f
add_to_rlhs__face_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	26;"	d
add_to_rlhs__face_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	68;"	d
add_to_rlhs__face_T	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	23;"	d
add_to_rlhs__face_boundary_T	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^void add_to_rlhs__face_boundary_T$/;"	f
add_to_rlhs__face_boundary_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	28;"	d
add_to_rlhs__face_boundary_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	70;"	d
add_to_rlhs__face_boundary_T	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	25;"	d
add_to_rlhs__face_internal	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static void add_to_rlhs__face_internal$/;"	f	file:
add_to_rlhs__face_internal	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	39;"	d
add_to_rlhs__face_internal	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	81;"	d
add_to_rlhs__face_internal	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	34;"	d
add_to_rlhs__face_internal	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	35;"	d
add_val_to_Vector_T	containers/def_templates_vector_math.h	24;"	d
add_val_to_Vector_T	containers/def_templates_vector_math.h	38;"	d
add_val_to_Vector_T	containers/undef_templates_vector_math.h	20;"	d
add_val_to_Vector_T	containers/vector_math_T.cpp	/^void add_val_to_Vector_T (struct Vector_T*const a, const Type val)$/;"	f
additional_values_are_zero	testing/support/general/test_support_math_functions.cpp	/^static bool additional_values_are_zero$/;"	f	file:
advance_Link	intrusive/intrusive.cpp	/^struct Intrusive_Link* advance_Link (const int n_adv, struct Intrusive_Link* first)$/;"	f
advance_link	intrusive/intrusive.cpp	/^static struct Intrusive_Link* advance_link (struct Intrusive_Link* curr, const int n)$/;"	f	file:
advance_to_end_of_parent_face	simulation/solvers/adaptation/adaptation.cpp	/^static void advance_to_end_of_parent_face (struct Intrusive_Link** curr)$/;"	f	file:
advance_to_end_of_parent_volume	simulation/solvers/adaptation/adaptation.cpp	/^static void advance_to_end_of_parent_volume (struct Intrusive_Link** curr)$/;"	f	file:
alloc_MO_from_MO	simulation/operators/multiarray_operator.cpp	/^const struct Multiarray_Operator* alloc_MO_from_MO$/;"	f
alloc_mutable_MO_from_MO	simulation/operators/multiarray_operator.cpp	/^static struct mutable_Multiarray_Operator* alloc_mutable_MO_from_MO$/;"	f	file:
allocate_and_set_extents	containers/multiarray_constructors.cpp	/^ptrdiff_t* allocate_and_set_extents (const int order, const ptrdiff_t*const extents_i)$/;"	f
alpha	simulation/test_case/flux/flux_euler_T.cpp	/^		     alpha,   \/\/\/< dp_drho.$/;"	m	struct:Flux_Data_Euler	file:
ann	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^	struct Node_ANN* ann; \/\/\/< The pointer to approximate nearest neighbor node.$/;"	m	struct:SSS_c	typeref:struct:SSS_c::Node_ANN	file:
area_ref	simulation/test_case/solution/euler/solution_euler.cpp	/^	       area_ref; \/\/\/< The reference area used to scale the coefficients.$/;"	m	struct:Sol_Data__c_dl	file:
assert_condition	testing/test_base.cpp	/^void assert_condition (const bool cond)$/;"	f
assert_condition_message	testing/test_base.cpp	/^void assert_condition_message (const bool cond, const char* cond_str)$/;"	f
assert_numerical_solution_is_central	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static void assert_numerical_solution_is_central (const int ind_num_flux_2nd)$/;"	f	file:
assert_numerical_solution_is_central	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	31;"	d
assert_numerical_solution_is_central	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	56;"	d
assert_numerical_solution_is_central	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	28;"	d
assign_block	processing/post/convert_data.py	/^def assign_block(A,cases_run,f):$/;"	f
attained_expected_conv_orders	testing/integration/test_integration_convergence_support.cpp	/^static bool attained_expected_conv_orders$/;"	f	file:
average_T	general/def_templates_math_functions.h	41;"	d
average_T	general/def_templates_math_functions.h	73;"	d
average_T	general/math_functions_T.cpp	/^Type average_T (const Type*const data, const ptrdiff_t n_entries)$/;"	f
average_T	general/undef_templates_math_functions.h	35;"	d
b	simulation/geometry/geometry_parametric_T.cpp	/^	     b,     \/\/\/< Geometry parameter.$/;"	m	struct:Geo_Data	file:
b	simulation/solvers/solve.h	/^	Vec b; \/\/\/< Petsc Vec holding the negative of the RHS entries.$/;"	m	struct:Solver_Storage_Implicit
b	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^	struct Node_ANN* b; \/\/\/< The background nodes.$/;"	m	struct:SSS_c	typeref:struct:SSS_c::Node_ANN	file:
b	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^	const struct Node_ANN* b; \/\/\/< The background nodes.$/;"	m	struct:SSS_ANN	typeref:struct:SSS_ANN::Node_ANN
b_adv	simulation/test_case/flux/flux_advection_T.cpp	/^	const Real* b_adv; \/\/\/< Advection velocity vector.$/;"	m	struct:Flux_Data_Advection	file:
b_faces	simulation/mesh/mesh_connectivity.cpp	/^	struct Boundary_Face** b_faces; \/\/\/< The list of \\ref Boundary_Face entities.$/;"	m	struct:Boundary_Face_Info	typeref:struct:Boundary_Face_Info::Boundary_Face	file:
b_ve	simulation/geometry/geometry_blended_T.h	/^	const struct const_Multiarray_Vector_i* b_ve; \/\/\/< \\ref Element::e_ve or \\ref Element::f_ve.$/;"	m	struct:Boundary_Comp_Elem_Data_T	typeref:struct:Boundary_Comp_Elem_Data_T::const_Multiarray_Vector_i
base	intrusive/intrusive.h	/^	const struct const_Intrusive_List*const base;  \/\/\/< Defined in \\ref Intrusive_List.$/;"	m	struct:const_Intrusive_List
base	intrusive/intrusive.h	/^	struct Intrusive_List* base;  \/\/\/< Pointer to the base \\ref Intrusive_List\\* if applicable.$/;"	m	struct:Intrusive_List	typeref:struct:Intrusive_List::Intrusive_List
basis_geom	simulation/simulation.h	/^	const char basis_geom[STRLEN_MIN];$/;"	m	struct:Simulation
basis_sol	simulation/simulation.h	/^	const char basis_sol[STRLEN_MIN];$/;"	m	struct:Simulation
bc	simulation/computational_elements/face.h	/^	const int bc; \/\/\/< The boundary condition associated with the face (if relevant).$/;"	m	struct:Face
bc	simulation/mesh/mesh_connectivity.cpp	/^	int bc;                     \/\/\/< The value of the boundary condition.$/;"	m	struct:Boundary_Face	file:
bc	simulation/test_case/boundary/boundary_T.h	/^	int bc;   \/\/\/< \\ref Face::bc.$/;"	m	struct:Boundary_Value_Input_T
bc_boundaries	simulation/geometry/geometry_blended_T.h	/^	const struct const_Vector_i* bc_boundaries;   \/\/\/< \\ref Volume::bc_edges or \\ref Volume::bc_faces.$/;"	m	struct:Boundary_Comp_Elem_Data_T	typeref:struct:Boundary_Comp_Elem_Data_T::const_Vector_i
bc_edges	simulation/computational_elements/volume.h	/^	const struct const_Vector_i* bc_edges;$/;"	m	struct:Volume	typeref:struct:Volume::const_Vector_i
bc_faces	simulation/computational_elements/volume.h	/^	const struct const_Vector_i* bc_faces;$/;"	m	struct:Volume	typeref:struct:Volume::const_Vector_i
bc_test_s	simulation/solvers/opg/face_solver_opg_T.h	/^	int bc_test_s;$/;"	m	struct:OPG_Solver_Face_T
bc_test_s	simulation/solvers/opg/volume_solver_opg_T.h	/^	int bc_test_s;$/;"	m	struct:OPG_Solver_Volume_T
bernstein_std	element/bases.cpp	/^static double bernstein_std (const int p, const int i, const double r)$/;"	f	file:
beta	simulation/test_case/flux/flux_euler_T.cpp	/^		     beta;    \/\/\/< alpha-H.$/;"	m	struct:Flux_Data_Euler	file:
binomial_coef	general/math_functions.cpp	/^double binomial_coef (const int num, const int den)$/;"	f
boundary	simulation/computational_elements/face.h	/^	const bool boundary; \/\/\/< Flag for whether the face is on a domain boundary.$/;"	m	struct:Face
boundary	simulation/computational_elements/volume.h	/^	const bool boundary, \/\/\/< Flag for whether the volume is on a domain boundary.$/;"	m	struct:Volume
boundary_value_comp_mem_e	simulation/test_case/test_case_T.h	/^	           boundary_value_comp_mem_e[MAX_BV_OUT], \/\/\/< \\ref Boundary_Value_Input_T::compute_member (explicit).$/;"	m	struct:Test_Case_T
boundary_value_comp_mem_i	simulation/test_case/test_case_T.h	/^	           boundary_value_comp_mem_i[MAX_BV_OUT]; \/\/\/< \\ref Boundary_Value_Input_T::compute_member (implicit).$/;"	m	struct:Test_Case_T
bv_l	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	struct Boundary_Value_Input_T bv_l; \/\/\/< \\ref Boundary_Value_Input_T container.$/;"	m	struct:Numerical_Flux_Input_T	typeref:struct:Numerical_Flux_Input_T::Boundary_Value_Input_T
bv_r	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	struct Boundary_Value_T       bv_r; \/\/\/< \\ref Boundary_Value_T container.$/;"	m	struct:Numerical_Flux_Input_T	typeref:struct:Numerical_Flux_Input_T::Boundary_Value_T
c	simulation/geometry/geometry_parametric_T.cpp	/^	     c,     \/\/\/< Geometry parameter.$/;"	m	struct:Geo_Data	file:
capacity	containers/vector_T.h	/^	const ptrdiff_t capacity;$/;"	m	struct:const_Vector_T
capacity	containers/vector_T.h	/^	ptrdiff_t capacity; \/\/\/< Storage available. May be larger than ext_0$/;"	m	struct:Vector_T
cases_run	testing/integration/test_integration_convergence_support.cpp	/^	const struct const_Multiarray_i* cases_run,   \/\/\/< The multiarray of flags indicating which cases were run.$/;"	m	struct:Conv_Order_Data	typeref:struct:Conv_Order_Data::const_Multiarray_i	file:
cc0_ff_ff	simulation/solvers/adaptation/element_adaptation.h	/^	const struct Multiarray_Operator* cc0_ff_ff; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Adaptation_Element	typeref:struct:Adaptation_Element::Multiarray_Operator
cc0_vgc_fgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cc0_vgc_fgc;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cc0_vgc_vgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cc0_vgc_vgc; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cc0_vr_vr	simulation/solvers/adaptation/element_adaptation.h	/^	const struct Multiarray_Operator* cc0_vr_vr; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Adaptation_Element	typeref:struct:Adaptation_Element::Multiarray_Operator
cc0_vs_vs	simulation/solvers/adaptation/element_adaptation.h	/^	const struct Multiarray_Operator* cc0_vs_vs; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Adaptation_Element	typeref:struct:Adaptation_Element::Multiarray_Operator
ccBS0_vs_vs	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* ccBS0_vs_vs; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
ccSB0_vs_vs	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* ccSB0_vs_vs; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
ce	element/element_operators.h	/^	const char ce,   \/\/\/< The computational element.$/;"	m	struct:Op_IO
ce_op	element/element_operators.h	/^	const int ce_op, \/\/\/< The computational element index of the operator.$/;"	m	struct:Op_IO
ce_type	simulation/test_case/solution/solution_T.h	/^	char ce_type,   \/\/\/< The type of computational element associated with the solution data being set.$/;"	m	struct:Solution_Container_T
centr	simulation/mesh/mesh_periodic.cpp	/^	double centr[DMAX-1];       \/\/\/< The centroid coordinates in directions other than the periodic one.$/;"	m	struct:Periodic_Face	file:
centr_scaling	simulation/mesh/mesh_periodic.cpp	/^	double centr_scaling[DIM];  \/\/\/< Possible scaling for reflected periodic face centroid coordinates.$/;"	m	struct:Periodic_Face	file:
cfl_initial	simulation/test_case/test_case_T.h	/^	const double cfl_initial; \/\/\/< Initial CFL number in case \\ref LHS_CFL_RAMPING is selected.$/;"	m	struct:Test_Case_T
check_Matrix_extents_zero_T	containers/def_templates_matrix_print.h	23;"	d
check_Matrix_extents_zero_T	containers/def_templates_matrix_print.h	36;"	d
check_Matrix_extents_zero_T	containers/def_templates_matrix_print.h	58;"	d
check_Matrix_extents_zero_T	containers/matrix_print_T.cpp	/^static bool check_Matrix_extents_zero_T (const ptrdiff_t ext_0, const ptrdiff_t ext_1)$/;"	f	file:
check_Matrix_extents_zero_T	containers/undef_templates_matrix_print.h	19;"	d
check_container_type	containers/multiarray.cpp	/^void check_container_type (FILE* data_file, const char*const container_type)$/;"	f
check_convergence_orders	testing/integration/test_integration_convergence_support.cpp	/^static void check_convergence_orders$/;"	f	file:
check_diff	testing/support/test_support.cpp	/^bool check_diff (const int n_entries, const bool*const differences, bool* pass)$/;"	f
check_equal_Vector_T	containers/def_templates_vector.h	118;"	d
check_equal_Vector_T	containers/def_templates_vector.h	45;"	d
check_equal_Vector_T	containers/def_templates_vector.h	76;"	d
check_equal_Vector_T	containers/undef_templates_vector.h	39;"	d
check_equal_Vector_T	containers/vector_T.cpp	/^bool check_equal_Vector_T (const struct Vector_T*const a, const struct Vector_T*const b)$/;"	f
check_equal_Vector_T_T	containers/def_templates_vector.h	119;"	d
check_equal_Vector_T_T	containers/def_templates_vector.h	46;"	d
check_equal_Vector_T_T	containers/def_templates_vector.h	77;"	d
check_equal_Vector_T_T	containers/undef_templates_vector.h	40;"	d
check_equal_Vector_T_T	containers/vector_T.cpp	/^bool check_equal_Vector_T_T (const struct Vector_T*const a, const Type* data_b)$/;"	f
check_equal_order_extents	containers/multiarray.cpp	/^bool check_equal_order_extents$/;"	f
check_exit	simulation/solvers/solve_explicit.cpp	/^static bool check_exit (const struct Test_Case* test_case, const double max_rhs, const double max_rhs0)$/;"	f	file:
check_exit	simulation/solvers/solve_implicit.cpp	/^static bool check_exit (const struct Test_Case* test_case, const double max_rhs)$/;"	f	file:
check_face_geometry	testing/integration/test_integration_non_conforming.cpp	/^static void check_face_geometry (const struct Simulation*const sim)$/;"	f	file:
check_flux_imbalance	testing/integration/test_integration_conservation.cpp	/^static void check_flux_imbalance (struct Test_Info*const test_info, const struct Simulation*const sim)$/;"	f	file:
check_for_curved_neigh	simulation/computational_elements/face.cpp	/^bool check_for_curved_neigh (struct Face* face)$/;"	f
check_for_transpose	element/element_operators.cpp	/^int check_for_transpose (const char* name_type, const int op_type)$/;"	f
check_free_stream	testing/integration/test_integration_free_stream.cpp	/^static void check_free_stream (struct Test_Info*const test_info, const struct Simulation*const sim)$/;"	f	file:
check_if_boundary_v	simulation/computational_elements/volume.cpp	/^static bool check_if_boundary_v$/;"	f	file:
check_if_curved_f	simulation/computational_elements/face.cpp	/^static bool check_if_curved_f$/;"	f	file:
check_if_curved_v	simulation/computational_elements/volume.cpp	/^static bool check_if_curved_v$/;"	f	file:
check_if_mu_is_const	simulation/test_case/flux/def_templates_flux.h	195;"	d
check_if_mu_is_const	simulation/test_case/flux/def_templates_flux.h	93;"	d
check_if_mu_is_const	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static bool check_if_mu_is_const ( )$/;"	f	file:
check_if_mu_is_const	simulation/test_case/flux/undef_templates_flux.h	91;"	d
check_inf_sup	testing/integration/test_integration_inf_sup.cpp	/^static void check_inf_sup$/;"	f	file:
check_linearizations	testing/integration/test_integration_linearization.cpp	/^static void check_linearizations$/;"	f	file:
check_necessary_simulation_parameters	simulation/simulation.cpp	/^static void check_necessary_simulation_parameters (struct Simulation*const sim)$/;"	f	file:
check_pde_linear	simulation/solvers/solve_implicit.cpp	/^static bool check_pde_linear (const int pde_index)$/;"	f	file:
check_pfe_boundary	simulation/mesh/mesh_connectivity.cpp	/^bool check_pfe_boundary (const int bc, const bool include_periodic)$/;"	f
check_pfe_periodic	simulation/mesh/mesh_periodic.cpp	/^static bool check_pfe_periodic (const char sm, const int bc)$/;"	f	file:
check_symmetric	simulation/solvers/solve_implicit.cpp	/^bool check_symmetric (const struct Simulation* sim)$/;"	f
check_ve_condition	simulation/computational_elements/volume.cpp	/^bool check_ve_condition$/;"	f
child_0	simulation/solvers/adaptation/face_solver_adaptive.h	/^	struct Intrusive_Link* child_0; \/\/\/< Pointer to the first child (if applicable).$/;"	m	struct:Adaptive_Solver_Face	typeref:struct:Adaptive_Solver_Face::Intrusive_Link
child_0	simulation/solvers/adaptation/volume_solver_adaptive.h	/^	struct Intrusive_Link* child_0; \/\/\/< Pointer to the first child (if applicable).$/;"	m	struct:Adaptive_Solver_Volume	typeref:struct:Adaptive_Solver_Volume::Intrusive_Link
clear_IL	intrusive/intrusive.cpp	/^void clear_IL (struct Intrusive_List* lst)$/;"	f
cmp_Boundary_Face	simulation/mesh/mesh_connectivity.cpp	/^static int cmp_Boundary_Face (const void *a, const void *b)$/;"	f	file:
cmp_DIM_d	containers/matrix.cpp	/^static int cmp_DIM_d (const double*const a, const double*const b)$/;"	f	file:
cmp_Periodic_Face	simulation/mesh/mesh_periodic.cpp	/^static int cmp_Periodic_Face (const void *a, const void *b)$/;"	f	file:
cmp_T	containers/def_templates_vector.h	106;"	d
cmp_T	containers/def_templates_vector.h	32;"	d
cmp_T	containers/def_templates_vector.h	63;"	d
cmp_T	containers/undef_templates_vector.h	26;"	d
cmp_T	containers/vector_T.cpp	/^static int cmp_T (const void* a, const void* b)$/;"	f	file:
cmp_Vector_T	containers/def_templates_vector.h	120;"	d
cmp_Vector_T	containers/def_templates_vector.h	47;"	d
cmp_Vector_T	containers/def_templates_vector.h	78;"	d
cmp_Vector_T	containers/undef_templates_vector.h	41;"	d
cmp_Vector_T	containers/vector_T.cpp	/^int cmp_Vector_T (const void *a, const void *b)$/;"	f
cmp_Vector_T_indexed	containers/def_templates_multiarray.h	168;"	d
cmp_Vector_T_indexed	containers/def_templates_multiarray.h	41;"	d
cmp_Vector_T_indexed	containers/def_templates_multiarray.h	92;"	d
cmp_Vector_T_indexed	containers/multiarray_T.cpp	/^static int cmp_Vector_T_indexed (const void *a, const void *b)$/;"	f	file:
cmp_Vector_T_indexed	containers/undef_templates_multiarray.h	37;"	d
cmp_Vector_tol_T	containers/def_templates_multiarray.h	169;"	d
cmp_Vector_tol_T	containers/def_templates_multiarray.h	42;"	d
cmp_Vector_tol_T	containers/def_templates_multiarray.h	93;"	d
cmp_Vector_tol_T	containers/multiarray_T.cpp	/^static int cmp_Vector_tol_T (const void* a, const void* b)$/;"	f	file:
cmp_Vector_tol_T	containers/undef_templates_multiarray.h	38;"	d
cmp_shuffle	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^static int cmp_shuffle (Index* p, Index* q)$/;"	f	file:
col	simulation/solvers/solve.h	/^	    col; \/\/\/< Index of the first col in which data is to be added.$/;"	m	struct:Solver_Storage_Implicit
collapse_Multiarray_Vector_T	containers/def_templates_multiarray.h	109;"	d
collapse_Multiarray_Vector_T	containers/def_templates_multiarray.h	184;"	d
collapse_Multiarray_Vector_T	containers/def_templates_multiarray.h	58;"	d
collapse_Multiarray_Vector_T	containers/multiarray_T.cpp	/^struct Vector_T* collapse_Multiarray_Vector_T (const struct Multiarray_Vector_T*const src)$/;"	f
collapse_Multiarray_Vector_T	containers/undef_templates_multiarray.h	54;"	d
collocated	simulation/simulation.h	/^	const bool collocated; \/**< Whether a collocated interpolation and integration node set is being used.$/;"	m	struct:Simulation
columns	containers/matrix_T.h	/^	const ptrdiff_t*const columns;$/;"	m	struct:const_Matrix_CSR_T
columns	containers/matrix_T.h	/^	ptrdiff_t* columns;   \/\/\/< Indices of the column corresponding to each entry in the matrix.$/;"	m	struct:Matrix_CSR_T
combine_num_flux_boundary_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	130;"	d
combine_num_flux_boundary_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	134;"	d
combine_num_flux_boundary_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	66;"	d
combine_num_flux_boundary_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	70;"	d
combine_num_flux_boundary_T	simulation/solvers/numerical_flux/numerical_flux_T.cpp	/^static void combine_num_flux_boundary_T$/;"	f	file:
combine_num_flux_boundary_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	63;"	d
combine_num_flux_boundary_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	67;"	d
combine_num_flux_boundary_dnnf_dg_g_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	132;"	d
combine_num_flux_boundary_dnnf_dg_g_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	68;"	d
combine_num_flux_boundary_dnnf_dg_g_T	simulation/solvers/numerical_flux/numerical_flux_T.cpp	/^static void combine_num_flux_boundary_dnnf_dg_g_T$/;"	f	file:
combine_num_flux_boundary_dnnf_dg_g_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	65;"	d
combine_num_flux_boundary_dnnf_dg_s_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	133;"	d
combine_num_flux_boundary_dnnf_dg_s_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	69;"	d
combine_num_flux_boundary_dnnf_dg_s_T	simulation/solvers/numerical_flux/numerical_flux_T.cpp	/^static void combine_num_flux_boundary_dnnf_dg_s_T$/;"	f	file:
combine_num_flux_boundary_dnnf_dg_s_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	66;"	d
combine_num_flux_boundary_dnnf_ds_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	131;"	d
combine_num_flux_boundary_dnnf_ds_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	67;"	d
combine_num_flux_boundary_dnnf_ds_T	simulation/solvers/numerical_flux/numerical_flux_T.cpp	/^static void combine_num_flux_boundary_dnnf_ds_T$/;"	f	file:
combine_num_flux_boundary_dnnf_ds_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	64;"	d
compare_b	testing/support/test_support.cpp	/^bool compare_b (const bool a, const bool b, const bool print_enabled, const char*const var_name)$/;"	f
compare_i	testing/support/test_support.cpp	/^bool compare_i (const int a, const int b, const bool print_enabled, const char*const var_name)$/;"	f
compare_members_Face	testing/support/test_support_fe_init.cpp	/^static bool compare_members_Face$/;"	f	file:
compare_members_Face_Neigh_Info	testing/support/test_support_fe_init.cpp	/^static bool compare_members_Face_Neigh_Info$/;"	f	file:
compare_members_Mesh	testing/integration/test_integration_mesh.cpp	/^static bool compare_members_Mesh$/;"	f	file:
compare_members_fe	testing/support/test_support_fe_init.cpp	/^bool compare_members_fe (struct Test_Info*const test_info, const struct Simulation*const sim)$/;"	f
compare_members_geom	testing/integration/test_integration_geometry.cpp	/^static bool compare_members_geom (struct Test_Info*const test_info, const struct Simulation*const sim)$/;"	f	file:
compute_CFL_ramping	simulation/solvers/dg/solve_dg.cpp	/^static void compute_CFL_ramping (struct Solver_Storage_Implicit*const ssi, const struct Simulation*const sim)$/;"	f	file:
compute_Flux	simulation/test_case/flux/flux_T.h	/^	compute_Flux_fptr_T compute_Flux;     \/\/\/< \\ref compute_Flux_fptr_T calling appropriate 1st\/2nd order functions.$/;"	m	struct:Flux_Input_T
compute_Flux	simulation/test_case/test_case_T.h	/^	compute_Flux_fptr_T compute_Flux;$/;"	m	struct:Test_Case_T
compute_Flux_12_T	simulation/test_case/flux/def_templates_flux.h	142;"	d
compute_Flux_12_T	simulation/test_case/flux/def_templates_flux.h	40;"	d
compute_Flux_12_T	simulation/test_case/flux/flux_T.cpp	/^void compute_Flux_12_T (const struct Flux_Input_T* flux_i, struct mutable_Flux_T* flux)$/;"	f
compute_Flux_12_T	simulation/test_case/flux/undef_templates_flux.h	39;"	d
compute_Flux_1_T	simulation/test_case/flux/def_templates_flux.h	140;"	d
compute_Flux_1_T	simulation/test_case/flux/def_templates_flux.h	38;"	d
compute_Flux_1_T	simulation/test_case/flux/flux_T.cpp	/^void compute_Flux_1_T (const struct Flux_Input_T* flux_i, struct mutable_Flux_T* flux)$/;"	f
compute_Flux_1_T	simulation/test_case/flux/undef_templates_flux.h	37;"	d
compute_Flux_1st	simulation/test_case/flux/flux_T.h	/^	compute_Flux_fptr_T compute_Flux_1st; \/\/\/< \\ref compute_Flux_fptr_T for the 1st order fluxes.$/;"	m	struct:Flux_Input_T
compute_Flux_2_T	simulation/test_case/flux/def_templates_flux.h	141;"	d
compute_Flux_2_T	simulation/test_case/flux/def_templates_flux.h	39;"	d
compute_Flux_2_T	simulation/test_case/flux/flux_T.cpp	/^void compute_Flux_2_T (const struct Flux_Input_T* flux_i, struct mutable_Flux_T* flux)$/;"	f
compute_Flux_2_T	simulation/test_case/flux/undef_templates_flux.h	38;"	d
compute_Flux_2nd	simulation/test_case/flux/flux_T.h	/^	compute_Flux_fptr_T compute_Flux_2nd; \/\/\/< \\ref compute_Flux_fptr_T for the 2nd order fluxes.$/;"	m	struct:Flux_Input_T
compute_Flux_Advection_100	simulation/test_case/flux/def_templates_flux.h	173;"	d
compute_Flux_Advection_100	simulation/test_case/flux/def_templates_flux.h	71;"	d
compute_Flux_Advection_100	simulation/test_case/flux/flux_advection_T.cpp	/^static void compute_Flux_Advection_100$/;"	f	file:
compute_Flux_Advection_100	simulation/test_case/flux/undef_templates_flux.h	69;"	d
compute_Flux_Advection_110	simulation/test_case/flux/def_templates_flux.h	174;"	d
compute_Flux_Advection_110	simulation/test_case/flux/def_templates_flux.h	72;"	d
compute_Flux_Advection_110	simulation/test_case/flux/flux_advection_T.cpp	/^static void compute_Flux_Advection_110$/;"	f	file:
compute_Flux_Advection_110	simulation/test_case/flux/undef_templates_flux.h	70;"	d
compute_Flux_Advection_fptr	simulation/test_case/flux/def_templates_flux.h	166;"	d
compute_Flux_Advection_fptr	simulation/test_case/flux/def_templates_flux.h	64;"	d
compute_Flux_Advection_fptr	simulation/test_case/flux/flux_advection_T.cpp	/^typedef void (*compute_Flux_Advection_fptr)$/;"	t	file:
compute_Flux_Advection_fptr	simulation/test_case/flux/undef_templates_flux.h	62;"	d
compute_Flux_Burgers_Inviscid_100	simulation/test_case/flux/def_templates_flux.h	178;"	d
compute_Flux_Burgers_Inviscid_100	simulation/test_case/flux/def_templates_flux.h	76;"	d
compute_Flux_Burgers_Inviscid_100	simulation/test_case/flux/flux_burgers_inviscid_T.cpp	/^static void compute_Flux_Burgers_Inviscid_100$/;"	f	file:
compute_Flux_Burgers_Inviscid_100	simulation/test_case/flux/undef_templates_flux.h	74;"	d
compute_Flux_Burgers_Inviscid_110	simulation/test_case/flux/def_templates_flux.h	179;"	d
compute_Flux_Burgers_Inviscid_110	simulation/test_case/flux/def_templates_flux.h	77;"	d
compute_Flux_Burgers_Inviscid_110	simulation/test_case/flux/flux_burgers_inviscid_T.cpp	/^static void compute_Flux_Burgers_Inviscid_110$/;"	f	file:
compute_Flux_Burgers_Inviscid_110	simulation/test_case/flux/undef_templates_flux.h	75;"	d
compute_Flux_Burgers_Inviscid_fptr	simulation/test_case/flux/def_templates_flux.h	170;"	d
compute_Flux_Burgers_Inviscid_fptr	simulation/test_case/flux/def_templates_flux.h	68;"	d
compute_Flux_Burgers_Inviscid_fptr	simulation/test_case/flux/flux_burgers_inviscid_T.cpp	/^typedef void (*compute_Flux_Burgers_Inviscid_fptr)$/;"	t	file:
compute_Flux_Burgers_Inviscid_fptr	simulation/test_case/flux/undef_templates_flux.h	66;"	d
compute_Flux_Euler_100	simulation/test_case/flux/def_templates_flux.h	188;"	d
compute_Flux_Euler_100	simulation/test_case/flux/def_templates_flux.h	86;"	d
compute_Flux_Euler_100	simulation/test_case/flux/flux_euler_T.cpp	/^static void compute_Flux_Euler_100$/;"	f	file:
compute_Flux_Euler_100	simulation/test_case/flux/undef_templates_flux.h	84;"	d
compute_Flux_Euler_110	simulation/test_case/flux/def_templates_flux.h	189;"	d
compute_Flux_Euler_110	simulation/test_case/flux/def_templates_flux.h	87;"	d
compute_Flux_Euler_110	simulation/test_case/flux/flux_euler_T.cpp	/^static void compute_Flux_Euler_110$/;"	f	file:
compute_Flux_Euler_110	simulation/test_case/flux/undef_templates_flux.h	85;"	d
compute_Flux_Euler_111	simulation/test_case/flux/def_templates_flux.h	190;"	d
compute_Flux_Euler_111	simulation/test_case/flux/def_templates_flux.h	88;"	d
compute_Flux_Euler_111	simulation/test_case/flux/flux_euler_T.cpp	/^static void compute_Flux_Euler_111$/;"	f	file:
compute_Flux_Euler_111	simulation/test_case/flux/undef_templates_flux.h	86;"	d
compute_Flux_Euler_fptr	simulation/test_case/flux/def_templates_flux.h	168;"	d
compute_Flux_Euler_fptr	simulation/test_case/flux/def_templates_flux.h	66;"	d
compute_Flux_Euler_fptr	simulation/test_case/flux/flux_euler_T.cpp	/^typedef void (*compute_Flux_Euler_fptr)$/;"	t	file:
compute_Flux_Euler_fptr	simulation/test_case/flux/undef_templates_flux.h	64;"	d
compute_Flux_Navier_Stokes_100	simulation/test_case/flux/def_templates_flux.h	101;"	d
compute_Flux_Navier_Stokes_100	simulation/test_case/flux/def_templates_flux.h	203;"	d
compute_Flux_Navier_Stokes_100	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static void compute_Flux_Navier_Stokes_100$/;"	f	file:
compute_Flux_Navier_Stokes_100	simulation/test_case/flux/undef_templates_flux.h	99;"	d
compute_Flux_Navier_Stokes_111	simulation/test_case/flux/def_templates_flux.h	102;"	d
compute_Flux_Navier_Stokes_111	simulation/test_case/flux/def_templates_flux.h	204;"	d
compute_Flux_Navier_Stokes_111	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static void compute_Flux_Navier_Stokes_111$/;"	f	file:
compute_Flux_Navier_Stokes_111	simulation/test_case/flux/undef_templates_flux.h	100;"	d
compute_Flux_Navier_Stokes_fptr	simulation/test_case/flux/def_templates_flux.h	169;"	d
compute_Flux_Navier_Stokes_fptr	simulation/test_case/flux/def_templates_flux.h	67;"	d
compute_Flux_Navier_Stokes_fptr	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^typedef void (*compute_Flux_Navier_Stokes_fptr)$/;"	t	file:
compute_Flux_Navier_Stokes_fptr	simulation/test_case/flux/undef_templates_flux.h	65;"	d
compute_Flux_T_advection	simulation/test_case/flux/def_templates_flux.h	147;"	d
compute_Flux_T_advection	simulation/test_case/flux/def_templates_flux.h	45;"	d
compute_Flux_T_advection	simulation/test_case/flux/flux_advection_T.cpp	/^void compute_Flux_T_advection (const struct Flux_Input_T* flux_i, struct mutable_Flux_T* flux)$/;"	f
compute_Flux_T_advection	simulation/test_case/flux/undef_templates_flux.h	44;"	d
compute_Flux_T_burgers_inviscid	simulation/test_case/flux/def_templates_flux.h	151;"	d
compute_Flux_T_burgers_inviscid	simulation/test_case/flux/def_templates_flux.h	49;"	d
compute_Flux_T_burgers_inviscid	simulation/test_case/flux/flux_burgers_inviscid_T.cpp	/^void compute_Flux_T_burgers_inviscid (const struct Flux_Input_T* flux_i, struct mutable_Flux_T* flux)$/;"	f
compute_Flux_T_burgers_inviscid	simulation/test_case/flux/undef_templates_flux.h	48;"	d
compute_Flux_T_diffusion	simulation/test_case/flux/def_templates_flux.h	148;"	d
compute_Flux_T_diffusion	simulation/test_case/flux/def_templates_flux.h	46;"	d
compute_Flux_T_diffusion	simulation/test_case/flux/flux_diffusion_T.cpp	/^void compute_Flux_T_diffusion (const struct Flux_Input_T* flux_i, struct mutable_Flux_T* flux)$/;"	f
compute_Flux_T_diffusion	simulation/test_case/flux/undef_templates_flux.h	45;"	d
compute_Flux_T_euler	simulation/test_case/flux/def_templates_flux.h	149;"	d
compute_Flux_T_euler	simulation/test_case/flux/def_templates_flux.h	47;"	d
compute_Flux_T_euler	simulation/test_case/flux/flux_euler_T.cpp	/^void compute_Flux_T_euler (const struct Flux_Input_T* flux_i, struct mutable_Flux_T* flux)$/;"	f
compute_Flux_T_euler	simulation/test_case/flux/undef_templates_flux.h	46;"	d
compute_Flux_T_navier_stokes	simulation/test_case/flux/def_templates_flux.h	150;"	d
compute_Flux_T_navier_stokes	simulation/test_case/flux/def_templates_flux.h	48;"	d
compute_Flux_T_navier_stokes	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^void compute_Flux_T_navier_stokes (const struct Flux_Input_T* flux_i, struct mutable_Flux_T* flux)$/;"	f
compute_Flux_T_navier_stokes	simulation/test_case/flux/undef_templates_flux.h	47;"	d
compute_Flux_advection_0	simulation/test_case/flux/def_templates_flux.h	175;"	d
compute_Flux_advection_0	simulation/test_case/flux/def_templates_flux.h	73;"	d
compute_Flux_advection_0	simulation/test_case/flux/flux_advection_T.cpp	/^static void compute_Flux_advection_0 (const struct Flux_Data_Advection*const flux_data, Type*const f_ptr[DIM*NEQ])$/;"	f	file:
compute_Flux_advection_0	simulation/test_case/flux/undef_templates_flux.h	71;"	d
compute_Flux_advection_1	simulation/test_case/flux/def_templates_flux.h	176;"	d
compute_Flux_advection_1	simulation/test_case/flux/def_templates_flux.h	74;"	d
compute_Flux_advection_1	simulation/test_case/flux/flux_advection_T.cpp	/^static void compute_Flux_advection_1$/;"	f	file:
compute_Flux_advection_1	simulation/test_case/flux/undef_templates_flux.h	72;"	d
compute_Flux_burgers_inviscid_0	simulation/test_case/flux/def_templates_flux.h	180;"	d
compute_Flux_burgers_inviscid_0	simulation/test_case/flux/def_templates_flux.h	78;"	d
compute_Flux_burgers_inviscid_0	simulation/test_case/flux/flux_burgers_inviscid_T.cpp	/^static void compute_Flux_burgers_inviscid_0 (const struct Flux_Data_Burgers_Inviscid*const flux_data, Type*const f_ptr[DIM*NEQ])$/;"	f	file:
compute_Flux_burgers_inviscid_0	simulation/test_case/flux/undef_templates_flux.h	76;"	d
compute_Flux_burgers_inviscid_1	simulation/test_case/flux/def_templates_flux.h	181;"	d
compute_Flux_burgers_inviscid_1	simulation/test_case/flux/def_templates_flux.h	79;"	d
compute_Flux_burgers_inviscid_1	simulation/test_case/flux/flux_burgers_inviscid_T.cpp	/^static void compute_Flux_burgers_inviscid_1$/;"	f	file:
compute_Flux_burgers_inviscid_1	simulation/test_case/flux/undef_templates_flux.h	77;"	d
compute_Flux_diffusion_0	simulation/test_case/flux/def_templates_flux.h	185;"	d
compute_Flux_diffusion_0	simulation/test_case/flux/def_templates_flux.h	83;"	d
compute_Flux_diffusion_0	simulation/test_case/flux/flux_diffusion_T.cpp	/^static void compute_Flux_diffusion_0 (const struct Flux_Data_Diffusion*const flux_data, Type*const f_ptr[DIM*NEQ])$/;"	f	file:
compute_Flux_diffusion_0	simulation/test_case/flux/undef_templates_flux.h	81;"	d
compute_Flux_diffusion_1	simulation/test_case/flux/def_templates_flux.h	186;"	d
compute_Flux_diffusion_1	simulation/test_case/flux/def_templates_flux.h	84;"	d
compute_Flux_diffusion_1	simulation/test_case/flux/flux_diffusion_T.cpp	/^static void compute_Flux_diffusion_1$/;"	f	file:
compute_Flux_diffusion_1	simulation/test_case/flux/undef_templates_flux.h	82;"	d
compute_Flux_diffusion_100	simulation/test_case/flux/def_templates_flux.h	183;"	d
compute_Flux_diffusion_100	simulation/test_case/flux/def_templates_flux.h	81;"	d
compute_Flux_diffusion_100	simulation/test_case/flux/flux_diffusion_T.cpp	/^static void compute_Flux_diffusion_100$/;"	f	file:
compute_Flux_diffusion_100	simulation/test_case/flux/undef_templates_flux.h	79;"	d
compute_Flux_diffusion_101	simulation/test_case/flux/def_templates_flux.h	184;"	d
compute_Flux_diffusion_101	simulation/test_case/flux/def_templates_flux.h	82;"	d
compute_Flux_diffusion_101	simulation/test_case/flux/flux_diffusion_T.cpp	/^static void compute_Flux_diffusion_101$/;"	f	file:
compute_Flux_diffusion_101	simulation/test_case/flux/undef_templates_flux.h	80;"	d
compute_Flux_diffusion_fptr	simulation/test_case/flux/def_templates_flux.h	167;"	d
compute_Flux_diffusion_fptr	simulation/test_case/flux/def_templates_flux.h	65;"	d
compute_Flux_diffusion_fptr	simulation/test_case/flux/flux_diffusion_T.cpp	/^typedef void (*compute_Flux_diffusion_fptr)$/;"	t	file:
compute_Flux_diffusion_fptr	simulation/test_case/flux/undef_templates_flux.h	63;"	d
compute_Flux_euler_0	simulation/test_case/flux/def_templates_flux.h	191;"	d
compute_Flux_euler_0	simulation/test_case/flux/def_templates_flux.h	89;"	d
compute_Flux_euler_0	simulation/test_case/flux/flux_euler_T.cpp	/^static void compute_Flux_euler_0 (const struct Flux_Data_Euler*const flux_data, Type*const f_ptr[DIM*NEQ])$/;"	f	file:
compute_Flux_euler_0	simulation/test_case/flux/undef_templates_flux.h	87;"	d
compute_Flux_euler_1	simulation/test_case/flux/def_templates_flux.h	192;"	d
compute_Flux_euler_1	simulation/test_case/flux/def_templates_flux.h	90;"	d
compute_Flux_euler_1	simulation/test_case/flux/flux_euler_T.cpp	/^static void compute_Flux_euler_1 (const struct Flux_Data_Euler*const flux_data, Type*const dfds_ptr[DIM*NEQ*NVAR])$/;"	f	file:
compute_Flux_euler_1	simulation/test_case/flux/undef_templates_flux.h	88;"	d
compute_Flux_euler_2	simulation/test_case/flux/def_templates_flux.h	193;"	d
compute_Flux_euler_2	simulation/test_case/flux/def_templates_flux.h	91;"	d
compute_Flux_euler_2	simulation/test_case/flux/flux_euler_T.cpp	/^static void compute_Flux_euler_2$/;"	f	file:
compute_Flux_euler_2	simulation/test_case/flux/undef_templates_flux.h	89;"	d
compute_Flux_fptr_T	simulation/test_case/flux/def_templates_flux.h	130;"	d
compute_Flux_fptr_T	simulation/test_case/flux/def_templates_flux.h	28;"	d
compute_Flux_fptr_T	simulation/test_case/flux/flux_T.h	/^typedef void (*compute_Flux_fptr_T)$/;"	t
compute_Flux_fptr_T	simulation/test_case/flux/undef_templates_flux.h	27;"	d
compute_Flux_iv	simulation/test_case/test_case_T.h	/^	compute_Flux_fptr_T compute_Flux_iv[2];$/;"	m	struct:Test_Case_T
compute_Flux_navier_stokes_0	simulation/test_case/flux/def_templates_flux.h	116;"	d
compute_Flux_navier_stokes_0	simulation/test_case/flux/def_templates_flux.h	218;"	d
compute_Flux_navier_stokes_0	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static void compute_Flux_navier_stokes_0$/;"	f	file:
compute_Flux_navier_stokes_0	simulation/test_case/flux/undef_templates_flux.h	114;"	d
compute_Flux_navier_stokes_1g	simulation/test_case/flux/def_templates_flux.h	118;"	d
compute_Flux_navier_stokes_1g	simulation/test_case/flux/def_templates_flux.h	220;"	d
compute_Flux_navier_stokes_1g	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static void compute_Flux_navier_stokes_1g$/;"	f	file:
compute_Flux_navier_stokes_1g	simulation/test_case/flux/undef_templates_flux.h	116;"	d
compute_Flux_navier_stokes_1s	simulation/test_case/flux/def_templates_flux.h	117;"	d
compute_Flux_navier_stokes_1s	simulation/test_case/flux/def_templates_flux.h	219;"	d
compute_Flux_navier_stokes_1s	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static void compute_Flux_navier_stokes_1s$/;"	f	file:
compute_Flux_navier_stokes_1s	simulation/test_case/flux/undef_templates_flux.h	115;"	d
compute_Numerical_Flux	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	compute_Numerical_Flux_fptr_T compute_Numerical_Flux;$/;"	m	struct:Numerical_Flux_Input_T
compute_Numerical_Flux	simulation/test_case/test_case_T.h	/^	compute_Numerical_Flux_fptr_T compute_Numerical_Flux;$/;"	m	struct:Test_Case_T
compute_Numerical_Flux_12_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	107;"	d
compute_Numerical_Flux_12_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	43;"	d
compute_Numerical_Flux_12_T	simulation/solvers/numerical_flux/numerical_flux_T.cpp	/^void compute_Numerical_Flux_12_T$/;"	f
compute_Numerical_Flux_12_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	41;"	d
compute_Numerical_Flux_1_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	105;"	d
compute_Numerical_Flux_1_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	41;"	d
compute_Numerical_Flux_1_T	simulation/solvers/numerical_flux/numerical_flux_T.cpp	/^void compute_Numerical_Flux_1_T$/;"	f
compute_Numerical_Flux_1_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	39;"	d
compute_Numerical_Flux_1st	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	compute_Numerical_Flux_fptr_T compute_Numerical_Flux_1st;$/;"	m	struct:Numerical_Flux_Input_T
compute_Numerical_Flux_2_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	106;"	d
compute_Numerical_Flux_2_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	42;"	d
compute_Numerical_Flux_2_T	simulation/solvers/numerical_flux/numerical_flux_T.cpp	/^void compute_Numerical_Flux_2_T$/;"	f
compute_Numerical_Flux_2_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	40;"	d
compute_Numerical_Flux_2nd	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	compute_Numerical_Flux_fptr_T compute_Numerical_Flux_2nd;$/;"	m	struct:Numerical_Flux_Input_T
compute_Numerical_Flux_T_advection_upwind	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	111;"	d
compute_Numerical_Flux_T_advection_upwind	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	47;"	d
compute_Numerical_Flux_T_advection_upwind	simulation/solvers/numerical_flux/numerical_flux_advection_T.cpp	/^void compute_Numerical_Flux_T_advection_upwind$/;"	f
compute_Numerical_Flux_T_advection_upwind	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	45;"	d
compute_Numerical_Flux_T_advection_upwind_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	112;"	d
compute_Numerical_Flux_T_advection_upwind_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	48;"	d
compute_Numerical_Flux_T_advection_upwind_jacobian	simulation/solvers/numerical_flux/numerical_flux_advection_T.cpp	/^void compute_Numerical_Flux_T_advection_upwind_jacobian$/;"	f
compute_Numerical_Flux_T_advection_upwind_jacobian	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	46;"	d
compute_Numerical_Flux_T_burgers_inviscid_lax_friedrichs	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	125;"	d
compute_Numerical_Flux_T_burgers_inviscid_lax_friedrichs	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	61;"	d
compute_Numerical_Flux_T_burgers_inviscid_lax_friedrichs	simulation/solvers/numerical_flux/numerical_flux_burgers_inviscid_T.cpp	/^void compute_Numerical_Flux_T_burgers_inviscid_lax_friedrichs$/;"	f
compute_Numerical_Flux_T_burgers_inviscid_lax_friedrichs	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	59;"	d
compute_Numerical_Flux_T_burgers_inviscid_lax_friedrichs_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	126;"	d
compute_Numerical_Flux_T_burgers_inviscid_lax_friedrichs_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	62;"	d
compute_Numerical_Flux_T_burgers_inviscid_lax_friedrichs_jacobian	simulation/solvers/numerical_flux/numerical_flux_burgers_inviscid_T.cpp	/^void compute_Numerical_Flux_T_burgers_inviscid_lax_friedrichs_jacobian$/;"	f
compute_Numerical_Flux_T_burgers_inviscid_lax_friedrichs_jacobian	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	60;"	d
compute_Numerical_Flux_T_central	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	141;"	d
compute_Numerical_Flux_T_central	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	77;"	d
compute_Numerical_Flux_T_central	simulation/solvers/numerical_flux/numerical_flux_central_T.cpp	/^static void compute_Numerical_Flux_T_central$/;"	f	file:
compute_Numerical_Flux_T_central	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	74;"	d
compute_Numerical_Flux_T_central_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	142;"	d
compute_Numerical_Flux_T_central_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	78;"	d
compute_Numerical_Flux_T_central_jacobian	simulation/solvers/numerical_flux/numerical_flux_central_T.cpp	/^static void compute_Numerical_Flux_T_central_jacobian$/;"	f	file:
compute_Numerical_Flux_T_central_jacobian	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	75;"	d
compute_Numerical_Flux_T_diffusion_central	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	114;"	d
compute_Numerical_Flux_T_diffusion_central	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	50;"	d
compute_Numerical_Flux_T_diffusion_central	simulation/solvers/numerical_flux/numerical_flux_diffusion_T.cpp	/^void compute_Numerical_Flux_T_diffusion_central$/;"	f
compute_Numerical_Flux_T_diffusion_central	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	48;"	d
compute_Numerical_Flux_T_diffusion_central_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	115;"	d
compute_Numerical_Flux_T_diffusion_central_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	51;"	d
compute_Numerical_Flux_T_diffusion_central_jacobian	simulation/solvers/numerical_flux/numerical_flux_diffusion_T.cpp	/^void compute_Numerical_Flux_T_diffusion_central_jacobian$/;"	f
compute_Numerical_Flux_T_diffusion_central_jacobian	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	49;"	d
compute_Numerical_Flux_T_euler_lax_friedrichs	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	117;"	d
compute_Numerical_Flux_T_euler_lax_friedrichs	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	53;"	d
compute_Numerical_Flux_T_euler_lax_friedrichs	simulation/solvers/numerical_flux/numerical_flux_euler_T.cpp	/^void compute_Numerical_Flux_T_euler_lax_friedrichs$/;"	f
compute_Numerical_Flux_T_euler_lax_friedrichs	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	51;"	d
compute_Numerical_Flux_T_euler_lax_friedrichs_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	118;"	d
compute_Numerical_Flux_T_euler_lax_friedrichs_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	54;"	d
compute_Numerical_Flux_T_euler_lax_friedrichs_jacobian	simulation/solvers/numerical_flux/numerical_flux_euler_T.cpp	/^void compute_Numerical_Flux_T_euler_lax_friedrichs_jacobian$/;"	f
compute_Numerical_Flux_T_euler_lax_friedrichs_jacobian	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	52;"	d
compute_Numerical_Flux_T_euler_roe_pike	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	119;"	d
compute_Numerical_Flux_T_euler_roe_pike	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	55;"	d
compute_Numerical_Flux_T_euler_roe_pike	simulation/solvers/numerical_flux/numerical_flux_euler_T.cpp	/^void compute_Numerical_Flux_T_euler_roe_pike$/;"	f
compute_Numerical_Flux_T_euler_roe_pike	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	53;"	d
compute_Numerical_Flux_T_euler_roe_pike_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	120;"	d
compute_Numerical_Flux_T_euler_roe_pike_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	56;"	d
compute_Numerical_Flux_T_euler_roe_pike_jacobian	simulation/solvers/numerical_flux/numerical_flux_euler_T.cpp	/^void compute_Numerical_Flux_T_euler_roe_pike_jacobian$/;"	f
compute_Numerical_Flux_T_euler_roe_pike_jacobian	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	54;"	d
compute_Numerical_Flux_T_navier_stokes_central	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	122;"	d
compute_Numerical_Flux_T_navier_stokes_central	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	58;"	d
compute_Numerical_Flux_T_navier_stokes_central	simulation/solvers/numerical_flux/numerical_flux_navier_stokes_T.cpp	/^void compute_Numerical_Flux_T_navier_stokes_central$/;"	f
compute_Numerical_Flux_T_navier_stokes_central	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	56;"	d
compute_Numerical_Flux_T_navier_stokes_central_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	123;"	d
compute_Numerical_Flux_T_navier_stokes_central_jacobian	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	59;"	d
compute_Numerical_Flux_T_navier_stokes_central_jacobian	simulation/solvers/numerical_flux/numerical_flux_navier_stokes_T.cpp	/^void compute_Numerical_Flux_T_navier_stokes_central_jacobian$/;"	f
compute_Numerical_Flux_T_navier_stokes_central_jacobian	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	57;"	d
compute_Numerical_Flux_e	simulation/test_case/test_case_T.h	/^	compute_Numerical_Flux_fptr_T compute_Numerical_Flux_e[2];$/;"	m	struct:Test_Case_T
compute_Numerical_Flux_fptr_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	31;"	d
compute_Numerical_Flux_fptr_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	95;"	d
compute_Numerical_Flux_fptr_T	simulation/solvers/numerical_flux/numerical_flux_T.h	/^typedef void (*compute_Numerical_Flux_fptr_T)$/;"	t
compute_Numerical_Flux_fptr_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	29;"	d
compute_Numerical_Flux_i	simulation/test_case/test_case_T.h	/^	compute_Numerical_Flux_fptr_T compute_Numerical_Flux_i[2];$/;"	m	struct:Test_Case_T
compute_Pr	simulation/test_case/flux/def_templates_flux.h	197;"	d
compute_Pr	simulation/test_case/flux/def_templates_flux.h	95;"	d
compute_Pr	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static Real compute_Pr ( )$/;"	f	file:
compute_Pr	simulation/test_case/flux/undef_templates_flux.h	93;"	d
compute_V2_from_rhouvw_T	simulation/test_case/flux/def_templates_flux.h	154;"	d
compute_V2_from_rhouvw_T	simulation/test_case/flux/def_templates_flux.h	52;"	d
compute_V2_from_rhouvw_T	simulation/test_case/flux/flux_euler_T.cpp	/^Type compute_V2_from_rhouvw_T (const Type rho, const Type*const rhouvw)$/;"	f
compute_V2_from_rhouvw_T	simulation/test_case/flux/undef_templates_flux.h	51;"	d
compute_V2_from_uvw_T	simulation/test_case/flux/def_templates_flux.h	153;"	d
compute_V2_from_uvw_T	simulation/test_case/flux/def_templates_flux.h	51;"	d
compute_V2_from_uvw_T	simulation/test_case/flux/flux_euler_T.cpp	/^Type compute_V2_from_uvw_T (const Type*const uvw)$/;"	f
compute_V2_from_uvw_T	simulation/test_case/flux/undef_templates_flux.h	50;"	d
compute_Vn	simulation/test_case/boundary/boundary_euler_T.cpp	/^static Type compute_Vn (const Type*const n, const Type*const uvw)$/;"	f	file:
compute_Vn	simulation/test_case/boundary/def_templates_boundary.h	135;"	d
compute_Vn	simulation/test_case/boundary/def_templates_boundary.h	68;"	d
compute_Vn	simulation/test_case/boundary/undef_templates_boundary.h	69;"	d
compute_Vt	simulation/test_case/boundary/boundary_euler_T.cpp	/^static void compute_Vt (const Type*const n, const Type Vn, const Type*const uvw, Type*const uvw_t)$/;"	f	file:
compute_Vt	simulation/test_case/boundary/def_templates_boundary.h	137;"	d
compute_Vt	simulation/test_case/boundary/def_templates_boundary.h	70;"	d
compute_Vt	simulation/test_case/boundary/undef_templates_boundary.h	71;"	d
compute_adapt_type	simulation/simulation.cpp	/^int compute_adapt_type (const int p_ref[2], const int ml[2])$/;"	f
compute_all_lhs	testing/integration/test_integration_linearization.cpp	/^	compute_dof_coef_fptr  compute_all_lhs;    \/\/\/< Solution coefficient terms contributed by the all    terms.$/;"	m	struct:F_Ptrs_and_Data	file:
compute_all_rlhs_dpg_T	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^void compute_all_rlhs_dpg_T$/;"	f
compute_all_rlhs_dpg_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	22;"	d
compute_all_rlhs_dpg_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	64;"	d
compute_all_rlhs_dpg_T	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	19;"	d
compute_and_store_min_eigenvalue	testing/integration/test_integration_inf_sup.cpp	/^static void compute_and_store_min_eigenvalue (const struct Gen_Eig_Data*const ged, double*const eig_val_ptr)$/;"	f	file:
compute_b_adv	simulation/test_case/solution/advection/solution_advection_T.h	/^	compute_b_adv_fptr_T compute_b_adv; \/\/\/< \\ref compute_b_adv_fptr_T.$/;"	m	struct:Sol_Data__Advection_T
compute_b_adv_constant_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	35;"	d
compute_b_adv_constant_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	52;"	d
compute_b_adv_constant_T	simulation/test_case/solution/advection/solution_advection_T.cpp	/^const Real* compute_b_adv_constant_T (const Type*const xyz)$/;"	f
compute_b_adv_constant_T	simulation/test_case/solution/advection/undef_templates_solution_advection.h	33;"	d
compute_b_adv_fptr_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	29;"	d
compute_b_adv_fptr_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	46;"	d
compute_b_adv_fptr_T	simulation/test_case/solution/advection/solution_advection_T.h	/^typedef const Real* (*compute_b_adv_fptr_T)$/;"	t
compute_b_adv_fptr_T	simulation/test_case/solution/advection/undef_templates_solution_advection.h	27;"	d
compute_b_adv_vortex_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	36;"	d
compute_b_adv_vortex_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	53;"	d
compute_b_adv_vortex_T	simulation/test_case/solution/advection/solution_advection_T.cpp	/^const Real* compute_b_adv_vortex_T (const Type*const xyz)$/;"	f
compute_b_adv_vortex_T	simulation/test_case/solution/advection/undef_templates_solution_advection.h	34;"	d
compute_cd_cl_values	simulation/test_case/solution/euler/solution_euler.cpp	/^void compute_cd_cl_values$/;"	f
compute_cmplx_step_fptr	testing/integration/test_integration_linearization.cpp	/^typedef void (*compute_cmplx_step_fptr)$/;"	t	file:
compute_coef_from_val_ff	simulation/test_case/solution/def_templates_solution.h	121;"	d
compute_coef_from_val_ff	simulation/test_case/solution/def_templates_solution.h	62;"	d
compute_coef_from_val_ff	simulation/test_case/solution/solution_T.cpp	/^static void compute_coef_from_val_ff$/;"	f	file:
compute_coef_from_val_ff	simulation/test_case/solution/undef_templates_solution.h	64;"	d
compute_coef_from_val_vg	simulation/test_case/solution/def_templates_solution.h	119;"	d
compute_coef_from_val_vg	simulation/test_case/solution/def_templates_solution.h	60;"	d
compute_coef_from_val_vg	simulation/test_case/solution/solution_T.cpp	/^static void compute_coef_from_val_vg$/;"	f	file:
compute_coef_from_val_vg	simulation/test_case/solution/undef_templates_solution.h	62;"	d
compute_coef_from_val_vs	simulation/test_case/solution/def_templates_solution.h	118;"	d
compute_coef_from_val_vs	simulation/test_case/solution/def_templates_solution.h	59;"	d
compute_coef_from_val_vs	simulation/test_case/solution/solution_T.cpp	/^static void compute_coef_from_val_vs$/;"	f	file:
compute_coef_from_val_vs	simulation/test_case/solution/undef_templates_solution.h	61;"	d
compute_coef_from_val_vs_T	simulation/test_case/solution/def_templates_solution.h	38;"	d
compute_coef_from_val_vs_T	simulation/test_case/solution/def_templates_solution.h	93;"	d
compute_coef_from_val_vs_T	simulation/test_case/solution/undef_templates_solution.h	37;"	d
compute_cofactors_T	simulation/geometry/def_templates_geometry.h	48;"	d
compute_cofactors_T	simulation/geometry/def_templates_geometry.h	91;"	d
compute_cofactors_T	simulation/geometry/geometry_T.cpp	/^static void compute_cofactors_T (struct const_Multiarray_T* jacobian, struct Multiarray_T* metrics)$/;"	f	file:
compute_cofactors_T	simulation/geometry/undef_templates_geometry.h	42;"	d
compute_cp_ideal_gas	simulation/test_case/solution/navier_stokes/solution_navier_stokes.cpp	/^double compute_cp_ideal_gas (const double r_s)$/;"	f
compute_cub_c_type	element/nodes_operators.cpp	/^static int compute_cub_c_type (const int node_type, const struct Simulation* sim)$/;"	f	file:
compute_dTs	simulation/test_case/flux/def_templates_flux.h	113;"	d
compute_dTs	simulation/test_case/flux/def_templates_flux.h	215;"	d
compute_dTs	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static const Type* compute_dTs$/;"	f	file:
compute_dTs	simulation/test_case/flux/undef_templates_flux.h	111;"	d
compute_dTs_p	simulation/test_case/flux/def_templates_flux.h	100;"	d
compute_dTs_p	simulation/test_case/flux/def_templates_flux.h	202;"	d
compute_dTs_p	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static struct Partials_Vector compute_dTs_p$/;"	f	file:
compute_dTs_p	simulation/test_case/flux/undef_templates_flux.h	98;"	d
compute_d_g_coef_f__d_s_coef_i	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static void compute_d_g_coef_f__d_s_coef_i$/;"	f	file:
compute_d_g_coef_f__d_s_coef_i	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	36;"	d
compute_d_g_coef_f__d_s_coef_i	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	61;"	d
compute_d_g_coef_f__d_s_coef_i	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	33;"	d
compute_d_nodes	element/nodes_operators.cpp	/^static int compute_d_nodes (const char ce, const int elem_d)$/;"	f	file:
compute_ddTs_dg	simulation/test_case/flux/def_templates_flux.h	115;"	d
compute_ddTs_dg	simulation/test_case/flux/def_templates_flux.h	217;"	d
compute_ddTs_dg	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static const Type*const*const* compute_ddTs_dg$/;"	f	file:
compute_ddTs_dg	simulation/test_case/flux/undef_templates_flux.h	113;"	d
compute_ddTs_ds	simulation/test_case/flux/def_templates_flux.h	114;"	d
compute_ddTs_ds	simulation/test_case/flux/def_templates_flux.h	216;"	d
compute_ddTs_ds	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static const Type*const* compute_ddTs_ds$/;"	f	file:
compute_ddTs_ds	simulation/test_case/flux/undef_templates_flux.h	112;"	d
compute_dduvw_dg	simulation/test_case/flux/def_templates_flux.h	109;"	d
compute_dduvw_dg	simulation/test_case/flux/def_templates_flux.h	211;"	d
compute_dduvw_dg	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static const Type*const*const*const* compute_dduvw_dg (const Type rho_inv, const Type*const uvw)$/;"	f	file:
compute_dduvw_dg	simulation/test_case/flux/undef_templates_flux.h	107;"	d
compute_dduvw_ds	simulation/test_case/flux/def_templates_flux.h	108;"	d
compute_dduvw_ds	simulation/test_case/flux/def_templates_flux.h	210;"	d
compute_dduvw_ds	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static const Type*const*const* compute_dduvw_ds$/;"	f	file:
compute_dduvw_ds	simulation/test_case/flux/undef_templates_flux.h	106;"	d
compute_detJV_T	simulation/geometry/def_templates_geometry.h	47;"	d
compute_detJV_T	simulation/geometry/def_templates_geometry.h	90;"	d
compute_detJV_T	simulation/geometry/geometry_T.cpp	/^static void compute_detJV_T (struct const_Multiarray_T* jacobian, struct Multiarray_T* jacobian_det)$/;"	f	file:
compute_detJV_T	simulation/geometry/undef_templates_geometry.h	41;"	d
compute_distance_and_update	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^static void compute_distance_and_update (const ptrdiff_t n, struct SSS_c*const sss)$/;"	f	file:
compute_dmaxV_ds	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	144;"	d
compute_dmaxV_ds	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	80;"	d
compute_dmaxV_ds	simulation/solvers/numerical_flux/numerical_flux_euler_T.cpp	/^static const Type* compute_dmaxV_ds$/;"	f	file:
compute_dmaxV_ds	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	77;"	d
compute_dmu_ds_constant	simulation/test_case/flux/def_templates_flux.h	103;"	d
compute_dmu_ds_constant	simulation/test_case/flux/def_templates_flux.h	205;"	d
compute_dmu_ds_constant	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static const Type* compute_dmu_ds_constant$/;"	f	file:
compute_dmu_ds_constant	simulation/test_case/flux/undef_templates_flux.h	101;"	d
compute_dmu_ds_fptr	simulation/test_case/flux/def_templates_flux.h	171;"	d
compute_dmu_ds_fptr	simulation/test_case/flux/def_templates_flux.h	69;"	d
compute_dmu_ds_fptr	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^typedef const Type* (*compute_dmu_ds_fptr)$/;"	t	file:
compute_dmu_ds_fptr	simulation/test_case/flux/undef_templates_flux.h	67;"	d
compute_dmu_ds_sutherland	simulation/test_case/flux/def_templates_flux.h	104;"	d
compute_dmu_ds_sutherland	simulation/test_case/flux/def_templates_flux.h	206;"	d
compute_dmu_ds_sutherland	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static const Type* compute_dmu_ds_sutherland$/;"	f	file:
compute_dmu_ds_sutherland	simulation/test_case/flux/undef_templates_flux.h	102;"	d
compute_dof_T	simulation/solvers/def_templates_solve.h	22;"	d
compute_dof_T	simulation/solvers/def_templates_solve.h	43;"	d
compute_dof_T	simulation/solvers/solve_T.cpp	/^ptrdiff_t compute_dof_T (const struct Simulation* sim)$/;"	f
compute_dof_T	simulation/solvers/undef_templates_solve.h	19;"	d
compute_dof_coef_fptr	testing/integration/test_integration_linearization.cpp	/^typedef void (*compute_dof_coef_fptr)$/;"	t	file:
compute_dof_faces	simulation/solvers/def_templates_solve.h	34;"	d
compute_dof_faces	simulation/solvers/def_templates_solve.h	55;"	d
compute_dof_faces	simulation/solvers/solve_T.cpp	/^static ptrdiff_t compute_dof_faces (const struct Simulation*const sim)$/;"	f	file:
compute_dof_faces	simulation/solvers/undef_templates_solve.h	29;"	d
compute_dof_schur	simulation/solvers/solve.cpp	/^ptrdiff_t compute_dof_schur (const char dof_type, const struct Simulation* sim)$/;"	f
compute_dof_sol_1st	simulation/solvers/solve.cpp	/^ptrdiff_t compute_dof_sol_1st (const struct Simulation* sim)$/;"	f
compute_dof_test	simulation/solvers/opg/def_templates_solve_opg.h	26;"	d
compute_dof_test	simulation/solvers/opg/def_templates_solve_opg.h	37;"	d
compute_dof_test	simulation/solvers/opg/solve_opg_T.cpp	/^static ptrdiff_t compute_dof_test (const struct Simulation*const sim)$/;"	f	file:
compute_dof_test	simulation/solvers/opg/undef_templates_solve_opg.h	21;"	d
compute_dof_test_T	simulation/solvers/def_templates_solve.h	36;"	d
compute_dof_test_T	simulation/solvers/def_templates_solve.h	57;"	d
compute_dof_test_T	simulation/solvers/solve_T.cpp	/^static ptrdiff_t compute_dof_test_T (const struct Simulation*const sim)$/;"	f	file:
compute_dof_test_T	simulation/solvers/undef_templates_solve.h	31;"	d
compute_dof_test_volumes	simulation/solvers/def_templates_solve.h	37;"	d
compute_dof_test_volumes	simulation/solvers/def_templates_solve.h	58;"	d
compute_dof_test_volumes	simulation/solvers/solve_T.cpp	/^static ptrdiff_t compute_dof_test_volumes (const struct Simulation*const sim)$/;"	f	file:
compute_dof_test_volumes	simulation/solvers/undef_templates_solve.h	32;"	d
compute_dof_volumes	simulation/solvers/def_templates_solve.h	33;"	d
compute_dof_volumes	simulation/solvers/def_templates_solve.h	54;"	d
compute_dof_volumes	simulation/solvers/solve_T.cpp	/^static ptrdiff_t compute_dof_volumes (const struct Simulation*const sim)$/;"	f	file:
compute_dof_volumes	simulation/solvers/undef_templates_solve.h	28;"	d
compute_dof_volumes_l_mult	simulation/solvers/def_templates_solve.h	35;"	d
compute_dof_volumes_l_mult	simulation/solvers/def_templates_solve.h	56;"	d
compute_dof_volumes_l_mult	simulation/solvers/solve_T.cpp	/^static ptrdiff_t compute_dof_volumes_l_mult (const struct Simulation*const sim)$/;"	f	file:
compute_dof_volumes_l_mult	simulation/solvers/undef_templates_solve.h	30;"	d
compute_dof_volumes_test	simulation/solvers/opg/def_templates_solve_opg.h	27;"	d
compute_dof_volumes_test	simulation/solvers/opg/def_templates_solve_opg.h	38;"	d
compute_dof_volumes_test	simulation/solvers/opg/solve_opg_T.cpp	/^static ptrdiff_t compute_dof_volumes_test (const struct Simulation*const sim)$/;"	f	file:
compute_dof_volumes_test	simulation/solvers/opg/undef_templates_solve_opg.h	22;"	d
compute_domain_volume	simulation/test_case/compute_error/compute_error.cpp	/^static double compute_domain_volume (const struct Simulation* sim)$/;"	f	file:
compute_dt_cfl_constrained	simulation/solvers/dg/solve_dg.cpp	/^static double compute_dt_cfl_constrained$/;"	f	file:
compute_dtau_dg	simulation/test_case/flux/def_templates_flux.h	112;"	d
compute_dtau_dg	simulation/test_case/flux/def_templates_flux.h	214;"	d
compute_dtau_dg	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static const Type*const*const*const* compute_dtau_dg$/;"	f	file:
compute_dtau_dg	simulation/test_case/flux/undef_templates_flux.h	110;"	d
compute_dtau_ds	simulation/test_case/flux/def_templates_flux.h	111;"	d
compute_dtau_ds	simulation/test_case/flux/def_templates_flux.h	213;"	d
compute_dtau_ds	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static const Type*const*const* compute_dtau_ds$/;"	f	file:
compute_dtau_ds	simulation/test_case/flux/undef_templates_flux.h	109;"	d
compute_duvw	simulation/test_case/flux/def_templates_flux.h	107;"	d
compute_duvw	simulation/test_case/flux/def_templates_flux.h	209;"	d
compute_duvw	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static const Type*const* compute_duvw$/;"	f	file:
compute_duvw	simulation/test_case/flux/undef_templates_flux.h	105;"	d
compute_duvw_ds	simulation/test_case/flux/def_templates_flux.h	106;"	d
compute_duvw_ds	simulation/test_case/flux/def_templates_flux.h	208;"	d
compute_duvw_ds	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static const Type*const* compute_duvw_ds (const Type rho_inv, const Type*const uvw)$/;"	f	file:
compute_duvw_ds	simulation/test_case/flux/undef_templates_flux.h	104;"	d
compute_duvw_p	simulation/test_case/flux/def_templates_flux.h	200;"	d
compute_duvw_p	simulation/test_case/flux/def_templates_flux.h	98;"	d
compute_duvw_p	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static struct Partials_Tensor compute_duvw_p$/;"	f	file:
compute_duvw_p	simulation/test_case/flux/undef_templates_flux.h	96;"	d
compute_e_type_from_name	testing/unit/test_unit_inverse_mapping.cpp	/^static int compute_e_type_from_name (const char*const name)$/;"	f	file:
compute_elem_from_super_type	element/element.cpp	/^int compute_elem_from_super_type (const int s_type, const int d)$/;"	f
compute_elem_type_sub_ce	element/element.cpp	/^int compute_elem_type_sub_ce (const int e_type, const char ce, const int ind_ce)$/;"	f
compute_entropy	simulation/test_case/solution/euler/solution_euler.cpp	/^void compute_entropy (struct Multiarray_d* s, const struct const_Multiarray_d* vars, const char var_type)$/;"	f
compute_error_file_name	simulation/test_case/compute_error/compute_error.cpp	/^const char* compute_error_file_name (const int error_type, const struct Simulation*const sim)$/;"	f
compute_error_input_name_root	testing/integration/test_integration_convergence_support.cpp	/^static const char* compute_error_input_name_root$/;"	f	file:
compute_extents_mm_MMa	containers/def_templates_multiarray_math.h	43;"	d
compute_extents_mm_MMa	containers/def_templates_multiarray_math.h	70;"	d
compute_extents_mm_MMa	containers/multiarray_math.cpp	/^ptrdiff_t* compute_extents_mm_MMa (const ptrdiff_t ext_0, const int order, const ptrdiff_t* extents_i)$/;"	f
compute_extents_mm_MMa	containers/undef_templates_multiarray_math.h	39;"	d
compute_f_ve	simulation/mesh/mesh_connectivity.cpp	/^static void compute_f_ve$/;"	f	file:
compute_face_geometry_order	simulation/solvers/face_solver.cpp	/^int compute_face_geometry_order (const struct Solver_Face*const s_face)$/;"	f
compute_face_lhs	testing/integration/test_integration_linearization.cpp	/^	compute_dof_coef_fptr  compute_face_lhs;   \/\/\/< Solution coefficient terms contributed by the face   term.$/;"	m	struct:F_Ptrs_and_Data	file:
compute_face_reference_order	simulation/solvers/face_solver.cpp	/^int compute_face_reference_order (const struct Solver_Face*const s_face)$/;"	f
compute_face_rlhs_dg_T	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^void compute_face_rlhs_dg_T$/;"	f
compute_face_rlhs_dg_T	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	25;"	d
compute_face_rlhs_dg_T	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	44;"	d
compute_face_rlhs_dg_T	simulation/solvers/dg/undef_templates_compute_face_rlhs_dg.h	20;"	d
compute_face_rlhs_opg_T	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^void compute_face_rlhs_opg_T$/;"	f
compute_face_rlhs_opg_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	31;"	d
compute_face_rlhs_opg_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	60;"	d
compute_face_rlhs_opg_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	23;"	d
compute_face_rlhs_opg_boundary_T	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^void compute_face_rlhs_opg_boundary_T$/;"	f
compute_face_rlhs_opg_boundary_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	32;"	d
compute_face_rlhs_opg_boundary_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	61;"	d
compute_face_rlhs_opg_boundary_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	24;"	d
compute_flux_imbalances	simulation/solvers/solve.cpp	/^void compute_flux_imbalances (struct Simulation*const sim)$/;"	f
compute_flux_imbalances_dg	simulation/solvers/dg/solve_dg.cpp	/^void compute_flux_imbalances_dg (const struct Simulation*const sim)$/;"	f
compute_flux_imbalances_dpg	simulation/solvers/dpg/solve_dpg.cpp	/^void compute_flux_imbalances_dpg (struct Simulation*const sim)$/;"	f
compute_flux_imbalances_faces_dg_T	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^void compute_flux_imbalances_faces_dg_T (const struct Simulation*const sim)$/;"	f
compute_flux_imbalances_faces_dg_T	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	26;"	d
compute_flux_imbalances_faces_dg_T	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	45;"	d
compute_flux_imbalances_faces_dg_T	simulation/solvers/dg/undef_templates_compute_face_rlhs_dg.h	21;"	d
compute_flux_imbalances_faces_dpg_T	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^void compute_flux_imbalances_faces_dpg_T (struct Simulation*const sim)$/;"	f
compute_flux_imbalances_faces_dpg_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	27;"	d
compute_flux_imbalances_faces_dpg_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	69;"	d
compute_flux_imbalances_faces_dpg_T	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	24;"	d
compute_flux_imbalances_source_dg	simulation/solvers/dg/compute_source_rlhs_dg.cpp	/^void compute_flux_imbalances_source_dg (const struct Simulation*const sim)$/;"	f
compute_g_coef_f_i	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static void compute_g_coef_f_i$/;"	f	file:
compute_g_coef_f_i	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	35;"	d
compute_g_coef_f_i	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	60;"	d
compute_g_coef_f_i	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	32;"	d
compute_g_coef_f_i_using_lin	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static void compute_g_coef_f_i_using_lin (const int side_index, struct DG_Solver_Face_T*const dg_s_face)$/;"	f	file:
compute_g_coef_f_i_using_lin	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	37;"	d
compute_g_coef_f_i_using_lin	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	62;"	d
compute_g_coef_f_i_using_lin	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	34;"	d
compute_g_coef_related_boundary	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static void compute_g_coef_related_boundary$/;"	f	file:
compute_g_coef_related_boundary	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	38;"	d
compute_g_coef_related_boundary	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	63;"	d
compute_g_coef_related_boundary	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	35;"	d
compute_geom_coef_blended_T	simulation/geometry/def_templates_geometry.h	56;"	d
compute_geom_coef_blended_T	simulation/geometry/def_templates_geometry.h	99;"	d
compute_geom_coef_blended_T	simulation/geometry/geometry_T.cpp	/^static void compute_geom_coef_blended_T (const struct Simulation*const sim, struct Solver_Volume_T*const s_vol)$/;"	f	file:
compute_geom_coef_blended_T	simulation/geometry/undef_templates_geometry.h	50;"	d
compute_geom_coef_fptr_T	simulation/geometry/def_templates_geometry.h	42;"	d
compute_geom_coef_fptr_T	simulation/geometry/def_templates_geometry.h	85;"	d
compute_geom_coef_fptr_T	simulation/geometry/geometry_T.cpp	/^typedef void (*compute_geom_coef_fptr_T)$/;"	t	file:
compute_geom_coef_fptr_T	simulation/geometry/undef_templates_geometry.h	25;"	d
compute_geom_coef_fptr_T	simulation/geometry/undef_templates_geometry.h	36;"	d
compute_geom_coef_p1	simulation/geometry/def_templates_geometry.h	45;"	d
compute_geom_coef_p1	simulation/geometry/def_templates_geometry.h	88;"	d
compute_geom_coef_p1	simulation/geometry/geometry_T.cpp	/^static void compute_geom_coef_p1 (const struct Simulation*const sim, struct Solver_Volume_T*const s_vol)$/;"	f	file:
compute_geom_coef_p1	simulation/geometry/undef_templates_geometry.h	39;"	d
compute_geom_coef_parametric_T	simulation/geometry/def_templates_geometry.h	100;"	d
compute_geom_coef_parametric_T	simulation/geometry/def_templates_geometry.h	57;"	d
compute_geom_coef_parametric_T	simulation/geometry/geometry_T.cpp	/^static void compute_geom_coef_parametric_T (const struct Simulation*const sim, struct Solver_Volume_T*const s_vol)$/;"	f	file:
compute_geom_coef_parametric_T	simulation/geometry/undef_templates_geometry.h	51;"	d
compute_geom_coef_straight_T	simulation/geometry/def_templates_geometry.h	55;"	d
compute_geom_coef_straight_T	simulation/geometry/def_templates_geometry.h	98;"	d
compute_geom_coef_straight_T	simulation/geometry/geometry_T.cpp	/^static void compute_geom_coef_straight_T (const struct Simulation*const sim, struct Solver_Volume_T*const s_vol)$/;"	f	file:
compute_geom_coef_straight_T	simulation/geometry/undef_templates_geometry.h	49;"	d
compute_geometry_face_T	simulation/geometry/def_templates_geometry.h	35;"	d
compute_geometry_face_T	simulation/geometry/def_templates_geometry.h	78;"	d
compute_geometry_face_T	simulation/geometry/geometry_T.cpp	/^void compute_geometry_face_T (struct Solver_Face_T* s_face, const struct Simulation*const sim)$/;"	f
compute_geometry_face_T	simulation/geometry/undef_templates_geometry.h	31;"	d
compute_geometry_face_p1_T	simulation/geometry/def_templates_geometry.h	54;"	d
compute_geometry_face_p1_T	simulation/geometry/def_templates_geometry.h	97;"	d
compute_geometry_face_p1_T	simulation/geometry/geometry_T.cpp	/^static void compute_geometry_face_p1_T (struct Solver_Face_T* s_face)$/;"	f	file:
compute_geometry_face_p1_T	simulation/geometry/undef_templates_geometry.h	48;"	d
compute_geometry_volume_T	simulation/geometry/def_templates_geometry.h	34;"	d
compute_geometry_volume_T	simulation/geometry/def_templates_geometry.h	77;"	d
compute_geometry_volume_T	simulation/geometry/geometry_T.cpp	/^void compute_geometry_volume_T$/;"	f
compute_geometry_volume_T	simulation/geometry/undef_templates_geometry.h	30;"	d
compute_geometry_volume_p1_T	simulation/geometry/def_templates_geometry.h	53;"	d
compute_geometry_volume_p1_T	simulation/geometry/def_templates_geometry.h	96;"	d
compute_geometry_volume_p1_T	simulation/geometry/geometry_T.cpp	/^static void compute_geometry_volume_p1_T (struct Solver_Volume_T*const s_vol)$/;"	f	file:
compute_geometry_volume_p1_T	simulation/geometry/undef_templates_geometry.h	47;"	d
compute_grad_coef	testing/integration/test_integration_linearization.cpp	/^	compute_grad_coef_fptr compute_grad_coef;  \/\/\/< Solution gradient coefficients and related terms.$/;"	m	struct:F_Ptrs_and_Data	file:
compute_grad_coef_dg_T	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^void compute_grad_coef_dg_T$/;"	f
compute_grad_coef_dg_T	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	23;"	d
compute_grad_coef_dg_T	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	48;"	d
compute_grad_coef_dg_T	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	21;"	d
compute_grad_coef_faces	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static void compute_grad_coef_faces (const struct Simulation*const sim, struct Intrusive_List*const faces)$/;"	f	file:
compute_grad_coef_faces	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	28;"	d
compute_grad_coef_faces	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	53;"	d
compute_grad_coef_faces	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	25;"	d
compute_grad_coef_fptr	testing/integration/test_integration_linearization.cpp	/^typedef void (*compute_grad_coef_fptr)$/;"	t	file:
compute_grad_coef_volumes	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static void compute_grad_coef_volumes (const struct Simulation*const sim, struct Intrusive_List*const volumes)$/;"	f	file:
compute_grad_coef_volumes	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	27;"	d
compute_grad_coef_volumes	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	52;"	d
compute_grad_coef_volumes	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	24;"	d
compute_h_face	simulation/computational_elements/face.cpp	/^double compute_h_face (const struct Face*const face)$/;"	f
compute_h_volume	simulation/computational_elements/volume.cpp	/^double compute_h_volume (const struct Volume*const vol)$/;"	f
compute_header_spec_advection_all	simulation/test_case/compute_error/compute_error_advection.cpp	/^static const char* compute_header_spec_advection_all ( )$/;"	f	file:
compute_header_spec_advection_all_p_rhs	simulation/test_case/compute_error/compute_error_advection.cpp	/^static const char* compute_header_spec_advection_all_p_rhs ( )$/;"	f	file:
compute_header_spec_burgers_inviscid_all	simulation/test_case/compute_error/compute_error_burgers_inviscid.cpp	/^static const char* compute_header_spec_burgers_inviscid_all ( )$/;"	f	file:
compute_header_spec_cd_cl	simulation/test_case/compute_error/compute_error_euler.cpp	/^static const char* compute_header_spec_cd_cl ( )$/;"	f	file:
compute_header_spec_cl	simulation/test_case/compute_error/compute_error_euler.cpp	/^static const char* compute_header_spec_cl ( )$/;"	f	file:
compute_header_spec_diffusion_all	simulation/test_case/compute_error/compute_error_diffusion.cpp	/^static const char* compute_header_spec_diffusion_all ( )$/;"	f	file:
compute_header_spec_diffusion_all_p_rhs	simulation/test_case/compute_error/compute_error_diffusion.cpp	/^static const char* compute_header_spec_diffusion_all_p_rhs ( )$/;"	f	file:
compute_header_spec_euler_all	simulation/test_case/compute_error/compute_error_euler.cpp	/^static const char* compute_header_spec_euler_all ( )$/;"	f	file:
compute_header_spec_euler_all_p_rhs	simulation/test_case/compute_error/compute_error_euler.cpp	/^static const char* compute_header_spec_euler_all_p_rhs ( )$/;"	f	file:
compute_header_spec_euler_entropy	simulation/test_case/compute_error/compute_error_euler.cpp	/^static const char* compute_header_spec_euler_entropy ( )$/;"	f	file:
compute_header_spec_euler_entropy_p_rhs	simulation/test_case/compute_error/compute_error_euler.cpp	/^static const char* compute_header_spec_euler_entropy_p_rhs ( )$/;"	f	file:
compute_header_spec_navier_stokes_uvw	simulation/test_case/compute_error/compute_error_navier_stokes.cpp	/^static const char* compute_header_spec_navier_stokes_uvw ( )$/;"	f	file:
compute_header_spec_navier_stokes_uvwt	simulation/test_case/compute_error/compute_error_navier_stokes.cpp	/^static const char* compute_header_spec_navier_stokes_uvwt ( )$/;"	f	file:
compute_ind_sref	simulation/solvers/adaptation/adaptation.cpp	/^static int compute_ind_sref (const struct Face*const face, const int side_index)$/;"	f	file:
compute_index_Matrix	containers/matrix.cpp	/^ptrdiff_t compute_index_Matrix$/;"	f
compute_index_sub_container	containers/multiarray.cpp	/^ptrdiff_t compute_index_sub_container$/;"	f
compute_index_sub_container_pi	containers/multiarray.cpp	/^ptrdiff_t compute_index_sub_container_pi$/;"	f
compute_index_sub_matrix	containers/multiarray.cpp	/^ptrdiff_t compute_index_sub_matrix (const int order, const ptrdiff_t*const extents, const ptrdiff_t*const sub_indices)$/;"	f
compute_index_sub_vector	containers/multiarray.cpp	/^ptrdiff_t compute_index_sub_vector (const int order, const ptrdiff_t*const extents, const ptrdiff_t*const sub_indices)$/;"	f
compute_jacobi_normalization	general/math_functions.cpp	/^double compute_jacobi_normalization (const int n, const double a, const double b)$/;"	f
compute_kappa_const_cp	simulation/test_case/solution/navier_stokes/solution_navier_stokes.cpp	/^double compute_kappa_const_cp (const double mu, const double Cp, const double Pr)$/;"	f
compute_lhs_1	simulation/solvers/dg/compute_face_rlhs_dg.cpp	/^static void compute_lhs_1$/;"	f	file:
compute_lhs_1	simulation/solvers/dg/compute_volume_rlhs_dg.cpp	/^static void compute_lhs_1$/;"	f	file:
compute_lhs_1	simulation/solvers/opg/compute_volume_rlhs_opg.cpp	/^static void compute_lhs_1$/;"	f	file:
compute_lhs_1_b	simulation/solvers/opg/compute_face_rlhs_opg.cpp	/^static void compute_lhs_1_b$/;"	f	file:
compute_lhs_1_i	simulation/solvers/opg/compute_face_rlhs_opg.cpp	/^static void compute_lhs_1_i (struct OPG_Solver_Face*const opg_s_face, struct Solver_Storage_Implicit*const ssi)$/;"	f	file:
compute_lhs_2	simulation/solvers/dg/compute_face_rlhs_dg.cpp	/^static void compute_lhs_2$/;"	f	file:
compute_lhs_2	simulation/solvers/dg/compute_volume_rlhs_dg.cpp	/^static void compute_lhs_2$/;"	f	file:
compute_lhs_analytical	testing/integration/test_integration_linearization.cpp	/^static void compute_lhs_analytical$/;"	f	file:
compute_lhs_cmplx_step	testing/integration/test_integration_linearization.cpp	/^	compute_cmplx_step_fptr compute_lhs_cmplx_step; \/\/\/< Compute the lhs terms using the complex step method.$/;"	m	struct:F_Ptrs_and_Data	file:
compute_lhs_cmplx_step	testing/integration/test_integration_linearization.cpp	/^static void compute_lhs_cmplx_step$/;"	f	file:
compute_lhs_cmplx_step_dg	testing/support/simulation/solvers/dg/test_support_solve_dg.cpp	/^void compute_lhs_cmplx_step_dg (const struct Simulation* sim, struct Solver_Storage_Implicit* ssi)$/;"	f
compute_lhs_cmplx_step_dpg	testing/support/simulation/solvers/dpg/test_support_solve_dpg.cpp	/^void compute_lhs_cmplx_step_dpg (const struct Simulation* sim, struct Solver_Storage_Implicit* ssi)$/;"	f
compute_lhs_cmplx_step_opg	testing/support/simulation/solvers/opg/test_support_solve_opg.cpp	/^void compute_lhs_cmplx_step_opg (const struct Simulation* sim, struct Solver_Storage_Implicit* ssi)$/;"	f
compute_mach	simulation/test_case/solution/euler/solution_euler.cpp	/^void compute_mach (struct Multiarray_d* mach, const struct const_Multiarray_d* vars, const char var_type)$/;"	f
compute_max_n_adapt	simulation/solvers/adaptation/adaptation.cpp	/^static int compute_max_n_adapt (const int adapt_strategy, const struct Adaptation_Data*const adapt_data)$/;"	f	file:
compute_max_rhs_dg_like	simulation/solvers/compute_rlhs.cpp	/^double compute_max_rhs_dg_like (const struct Simulation*const sim)$/;"	f
compute_max_rhs_from_ssi	simulation/solvers/solve.cpp	/^double compute_max_rhs_from_ssi (const struct Solver_Storage_Implicit*const ssi)$/;"	f
compute_max_rhs_ratio	simulation/solvers/dg/solve_dg.cpp	/^static double compute_max_rhs_ratio (const double max_rhs)$/;"	f	file:
compute_max_wavespeed	simulation/test_case/solution/euler/solution_euler.cpp	/^void compute_max_wavespeed (struct Multiarray_d* V_p_c, const struct const_Multiarray_d* vars, const char var_type)$/;"	f
compute_member	simulation/test_case/boundary/boundary_T.h	/^	const bool* compute_member;$/;"	m	struct:Boundary_Value_Input_T
compute_member	simulation/test_case/flux/flux_T.h	/^	const bool* compute_member;$/;"	m	struct:Flux_Input_T
compute_min_length_measure	simulation/solvers/dg/solve_dg.cpp	/^static double compute_min_length_measure (const struct Solver_Volume*const s_vol, const struct Simulation*const sim)$/;"	f	file:
compute_mu_constant_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	33;"	d
compute_mu_constant_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	52;"	d
compute_mu_constant_T	simulation/test_case/solution/navier_stokes/solution_navier_stokes_T.cpp	/^Type compute_mu_constant_T (const Type rho, const Type*const rhouvw, const Type E)$/;"	f
compute_mu_constant_T	simulation/test_case/solution/navier_stokes/undef_templates_solution_navier_stokes.h	28;"	d
compute_mu_fptr_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	25;"	d
compute_mu_fptr_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	44;"	d
compute_mu_fptr_T	simulation/test_case/solution/navier_stokes/solution_navier_stokes_T.h	/^typedef Type (*compute_mu_fptr_T)$/;"	t
compute_mu_fptr_T	simulation/test_case/solution/navier_stokes/undef_templates_solution_navier_stokes.h	22;"	d
compute_mu_p	simulation/test_case/flux/def_templates_flux.h	198;"	d
compute_mu_p	simulation/test_case/flux/def_templates_flux.h	96;"	d
compute_mu_p	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static struct Partials_Scalar compute_mu_p$/;"	f	file:
compute_mu_p	simulation/test_case/flux/undef_templates_flux.h	94;"	d
compute_mu_sutherland_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	34;"	d
compute_mu_sutherland_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	53;"	d
compute_mu_sutherland_T	simulation/test_case/solution/navier_stokes/solution_navier_stokes_T.cpp	/^Type compute_mu_sutherland_T (const Type rho, const Type*const rhouvw, const Type E)$/;"	f
compute_mu_sutherland_T	simulation/test_case/solution/navier_stokes/undef_templates_solution_navier_stokes.h	29;"	d
compute_n_basis	element/bases.cpp	/^ptrdiff_t compute_n_basis (const int d, const int p_b, const int super_type)$/;"	f
compute_n_dof_nf_T	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^ptrdiff_t compute_n_dof_nf_T (const struct Solver_Volume_T* s_vol)$/;"	f
compute_n_dof_nf_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	24;"	d
compute_n_dof_nf_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	66;"	d
compute_n_dof_nf_T	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	21;"	d
compute_n_err	testing/integration/test_integration_convergence_support.cpp	/^static int compute_n_err (const char* input_name)$/;"	f	file:
compute_n_volumes	simulation/computational_elements/volume.cpp	/^ptrdiff_t compute_n_volumes (const struct Simulation*const sim)$/;"	f
compute_node_type	element/nodes_operators.cpp	/^static int compute_node_type$/;"	f	file:
compute_node_type_collocated	element/nodes_operators.cpp	/^static int compute_node_type_collocated$/;"	f	file:
compute_node_type_std	element/nodes_operators.cpp	/^static int compute_node_type_std$/;"	f	file:
compute_norm_Matrix_T_row	containers/def_templates_matrix_math.h	31;"	d
compute_norm_Matrix_T_row	containers/def_templates_matrix_math.h	64;"	d
compute_norm_Matrix_T_row	containers/matrix_math_T.cpp	/^Type compute_norm_Matrix_T_row$/;"	f
compute_norm_Matrix_T_row	containers/undef_templates_matrix_math.h	26;"	d
compute_normals_T	simulation/geometry/def_templates_geometry.h	43;"	d
compute_normals_T	simulation/geometry/def_templates_geometry.h	86;"	d
compute_normals_T	simulation/geometry/geometry_T.cpp	/^static void compute_normals_T$/;"	f	file:
compute_normals_T	simulation/geometry/undef_templates_geometry.h	37;"	d
compute_opposite_layout	containers/matrix.cpp	/^char compute_opposite_layout (const char layout_i)$/;"	f
compute_opposite_normal_uvw	simulation/test_case/boundary/boundary_euler_T.cpp	/^static void compute_opposite_normal_uvw$/;"	f	file:
compute_opposite_normal_uvw	simulation/test_case/boundary/def_templates_boundary.h	139;"	d
compute_opposite_normal_uvw	simulation/test_case/boundary/def_templates_boundary.h	72;"	d
compute_opposite_normal_uvw	simulation/test_case/boundary/undef_templates_boundary.h	73;"	d
compute_p_base_min	simulation/geometry/def_templates_geometry_blended.h	37;"	d
compute_p_base_min	simulation/geometry/def_templates_geometry_blended.h	60;"	d
compute_p_base_min	simulation/geometry/geometry_blended_T.cpp	/^static int compute_p_base_min (const struct Solver_Volume_T*const s_vol, const struct Simulation*const sim)$/;"	f	file:
compute_p_base_min	simulation/geometry/undef_templates_geometry_blended.h	30;"	d
compute_p_basis	element/element_operators.cpp	/^int compute_p_basis (const struct Op_IO* op_io, const struct Simulation* sim)$/;"	f
compute_p_nodes	element/nodes_operators.cpp	/^static int compute_p_nodes (const struct Op_IO* op_io, const int node_type, const struct Simulation* sim)$/;"	f	file:
compute_projection_h_refine_face	simulation/solvers/adaptation/adaptation.cpp	/^static void compute_projection_h_refine_face (struct Adaptive_Solver_Face* a_s_face, const struct Simulation* sim)$/;"	f	file:
compute_projection_h_volume	simulation/solvers/adaptation/adaptation.cpp	/^static void compute_projection_h_volume (struct Adaptive_Solver_Volume* a_s_vol, const struct Simulation* sim)$/;"	f	file:
compute_projection_p_face	simulation/solvers/adaptation/adaptation.cpp	/^static void compute_projection_p_face (struct Adaptive_Solver_Face* a_s_face, const struct Simulation* sim)$/;"	f	file:
compute_projection_p_volume	simulation/solvers/adaptation/adaptation.cpp	/^static void compute_projection_p_volume (struct Adaptive_Solver_Volume* a_s_vol, const struct Simulation* sim)$/;"	f	file:
compute_r2_to_box	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^Real compute_r2_to_box (const struct SSS_c*const sss)$/;"	f
compute_radius_from_xyz_ve	simulation/geometry/def_templates_geometry_surface.h	34;"	d
compute_radius_from_xyz_ve	simulation/geometry/def_templates_geometry_surface.h	53;"	d
compute_radius_from_xyz_ve	simulation/geometry/geometry_surface_T.cpp	/^static double compute_radius_from_xyz_ve$/;"	f	file:
compute_radius_from_xyz_ve	simulation/geometry/undef_templates_geometry_surface.h	27;"	d
compute_range	element/element_operators.cpp	/^static void compute_range (int x_mm[2], const struct Operator_Info* op_info, const char var_type, const char var_io)$/;"	f	file:
compute_range_p_o	element/element_operators.cpp	/^static void compute_range_p_o (int p_o_mm[2], const struct Operator_Info* op_info, const int p_i)$/;"	f	file:
compute_relaxation	simulation/solvers/solve_implicit.cpp	/^static double compute_relaxation$/;"	f	file:
compute_restart_name	simulation/test_case/solution/restart/restart_writers.cpp	/^static const char* compute_restart_name$/;"	f	file:
compute_rhs	simulation/solvers/solve.cpp	/^double compute_rhs (const struct Simulation* sim)$/;"	f
compute_rhs_cmplx_step_dg	testing/support/simulation/solvers/dg/test_support_solve_dg.cpp	/^static void compute_rhs_cmplx_step_dg$/;"	f	file:
compute_rhs_cmplx_step_opg	testing/support/simulation/solvers/opg/test_support_solve_opg.cpp	/^static void compute_rhs_cmplx_step_opg$/;"	f	file:
compute_rhs_dg	simulation/solvers/dg/solve_dg.cpp	/^double compute_rhs_dg (const struct Simulation* sim)$/;"	f
compute_rhs_f_dg_like_T	simulation/solvers/compute_face_rlhs_T.cpp	/^void compute_rhs_f_dg_like_T$/;"	f
compute_rhs_f_dg_like_T	simulation/solvers/def_templates_compute_face_rlhs.h	39;"	d
compute_rhs_f_dg_like_T	simulation/solvers/def_templates_compute_face_rlhs.h	70;"	d
compute_rhs_f_dg_like_T	simulation/solvers/undef_templates_compute_face_rlhs.h	36;"	d
compute_rhs_f_opg_dg_like_T	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^static void compute_rhs_f_opg_dg_like_T$/;"	f	file:
compute_rhs_f_opg_dg_like_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	46;"	d
compute_rhs_f_opg_dg_like_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	75;"	d
compute_rhs_f_opg_dg_like_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	38;"	d
compute_rhs_v_dg_like_T	simulation/solvers/compute_volume_rlhs_T.cpp	/^void compute_rhs_v_dg_like_T$/;"	f
compute_rhs_v_dg_like_T	simulation/solvers/def_templates_compute_volume_rlhs.h	36;"	d
compute_rhs_v_dg_like_T	simulation/solvers/def_templates_compute_volume_rlhs.h	72;"	d
compute_rhs_v_dg_like_T	simulation/solvers/undef_templates_compute_volume_rlhs.h	35;"	d
compute_rhs_v_opg_T	simulation/solvers/opg/compute_volume_rlhs_opg_T.cpp	/^static void compute_rhs_v_opg_T$/;"	f	file:
compute_rhs_v_opg_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	36;"	d
compute_rhs_v_opg_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	55;"	d
compute_rhs_v_opg_T	simulation/solvers/opg/undef_templates_compute_volume_rlhs_opg.h	32;"	d
compute_rlhs	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^	compute_rlhs_f_fptr_T compute_rlhs; \/\/\/< Pointer to the appropriate function.$/;"	m	struct:S_Params_T	file:
compute_rlhs	simulation/solvers/dg/compute_volume_rlhs_dg_T.cpp	/^	compute_rlhs_v_fptr_T compute_rlhs; \/\/\/< Pointer to the appropriate function.$/;"	m	struct:S_Params_T	file:
compute_rlhs	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^	compute_rlhs_dpg_fptr compute_rlhs;             \/\/\/< Pointer to the appropriate function.$/;"	m	struct:S_Params_DPG	file:
compute_rlhs	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^	compute_rlhs_opg_f_fptr_T compute_rlhs; \/\/\/< Pointer to the appropriate function.$/;"	m	struct:S_Params_f_T	file:
compute_rlhs	simulation/solvers/opg/compute_volume_rlhs_opg_T.cpp	/^	compute_rlhs_v_fptr_T compute_rlhs; \/\/\/< Pointer to the appropriate function.$/;"	m	struct:S_Params_T	file:
compute_rlhs	simulation/solvers/solve.cpp	/^double compute_rlhs (const struct Simulation* sim, struct Solver_Storage_Implicit* ssi)$/;"	f
compute_rlhs_1	simulation/solvers/dg/compute_face_rlhs_dg.cpp	/^static void compute_rlhs_1$/;"	f	file:
compute_rlhs_1	simulation/solvers/dg/compute_volume_rlhs_dg.cpp	/^static void compute_rlhs_1$/;"	f	file:
compute_rlhs_1	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static void compute_rlhs_1$/;"	f	file:
compute_rlhs_1	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	45;"	d
compute_rlhs_1	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	87;"	d
compute_rlhs_1	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	40;"	d
compute_rlhs_1	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	41;"	d
compute_rlhs_1	simulation/solvers/opg/compute_face_rlhs_opg.cpp	/^static void compute_rlhs_1$/;"	f	file:
compute_rlhs_1	simulation/solvers/opg/compute_volume_rlhs_opg.cpp	/^static void compute_rlhs_1$/;"	f	file:
compute_rlhs_12	simulation/solvers/dg/compute_face_rlhs_dg.cpp	/^static void compute_rlhs_12$/;"	f	file:
compute_rlhs_12	simulation/solvers/dg/compute_volume_rlhs_dg.cpp	/^static void compute_rlhs_12$/;"	f	file:
compute_rlhs_2	simulation/solvers/dg/compute_face_rlhs_dg.cpp	/^static void compute_rlhs_2$/;"	f	file:
compute_rlhs_2	simulation/solvers/dg/compute_volume_rlhs_dg.cpp	/^static void compute_rlhs_2$/;"	f	file:
compute_rlhs_common_dg	simulation/solvers/dg/solve_dg.cpp	/^static void compute_rlhs_common_dg (const struct Simulation*const sim, struct Solver_Storage_Implicit*const ssi)$/;"	f	file:
compute_rlhs_dg	simulation/solvers/dg/solve_dg.cpp	/^double compute_rlhs_dg (const struct Simulation* sim, struct Solver_Storage_Implicit* ssi)$/;"	f
compute_rlhs_dpg	simulation/solvers/dpg/solve_dpg.cpp	/^double compute_rlhs_dpg (const struct Simulation* sim, struct Solver_Storage_Implicit* ssi)$/;"	f
compute_rlhs_dpg_fptr	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^typedef void (*compute_rlhs_dpg_fptr)$/;"	t	file:
compute_rlhs_dpg_fptr	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	33;"	d
compute_rlhs_dpg_fptr	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	75;"	d
compute_rlhs_dpg_fptr	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	28;"	d
compute_rlhs_dpg_fptr	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	30;"	d
compute_rlhs_f_fptr_T	simulation/solvers/compute_face_rlhs_T.h	/^typedef void (*compute_rlhs_f_fptr_T)$/;"	t
compute_rlhs_f_fptr_T	simulation/solvers/def_templates_compute_face_rlhs.h	23;"	d
compute_rlhs_f_fptr_T	simulation/solvers/def_templates_compute_face_rlhs.h	54;"	d
compute_rlhs_f_fptr_T	simulation/solvers/undef_templates_compute_face_rlhs.h	21;"	d
compute_rlhs_opg	simulation/solvers/opg/solve_opg.cpp	/^double compute_rlhs_opg (const struct Simulation*const sim, struct Solver_Storage_Implicit*const ssi)$/;"	f
compute_rlhs_opg_f_fptr_T	simulation/solvers/opg/compute_face_rlhs_opg_T.h	/^typedef void (*compute_rlhs_opg_f_fptr_T)$/;"	t
compute_rlhs_opg_f_fptr_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	27;"	d
compute_rlhs_opg_f_fptr_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	56;"	d
compute_rlhs_opg_f_fptr_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	20;"	d
compute_rlhs_v_fptr_T	simulation/solvers/compute_volume_rlhs_T.h	/^typedef void (*compute_rlhs_v_fptr_T)$/;"	t
compute_rlhs_v_fptr_T	simulation/solvers/def_templates_compute_volume_rlhs.h	29;"	d
compute_rlhs_v_fptr_T	simulation/solvers/def_templates_compute_volume_rlhs.h	65;"	d
compute_rlhs_v_fptr_T	simulation/solvers/undef_templates_compute_volume_rlhs.h	28;"	d
compute_scaling_weak_gradient	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^static Real compute_scaling_weak_gradient (const struct DG_Solver_Face_T*const dg_s_face)$/;"	f	file:
compute_scaling_weak_gradient	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	38;"	d
compute_scaling_weak_gradient	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	57;"	d
compute_scaling_weak_gradient	simulation/solvers/dg/undef_templates_compute_face_rlhs_dg.h	32;"	d
compute_side_index_face	simulation/computational_elements/face.cpp	/^int compute_side_index_face (const struct Face* face, const struct Volume* vol)$/;"	f
compute_size	containers/multiarray.cpp	/^ptrdiff_t compute_size (const int order, const ptrdiff_t*const extents)$/;"	f
compute_source_rhs	simulation/test_case/test_case_T.h	/^	compute_source_rhs_fptr_T compute_source_rhs; \/\/\/< Function pointer to the rhs source computation function.$/;"	m	struct:Test_Case_T
compute_source_rhs_advection_default_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	25;"	d
compute_source_rhs_advection_default_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	43;"	d
compute_source_rhs_advection_default_T	simulation/test_case/solution/advection/solution_advection_default_T.cpp	/^void compute_source_rhs_advection_default_T$/;"	f
compute_source_rhs_advection_default_T	simulation/test_case/solution/advection/undef_templates_solution_advection_default.h	23;"	d
compute_source_rhs_dg_like	simulation/solvers/compute_rlhs.cpp	/^void compute_source_rhs_dg_like (const struct Simulation*const sim)$/;"	f
compute_source_rhs_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	27;"	d
compute_source_rhs_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	53;"	d
compute_source_rhs_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^void compute_source_rhs_diffusion_default_steady_T$/;"	f
compute_source_rhs_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	24;"	d
compute_source_rhs_do_nothing_T	simulation/test_case/solution/def_templates_solution.h	40;"	d
compute_source_rhs_do_nothing_T	simulation/test_case/solution/def_templates_solution.h	95;"	d
compute_source_rhs_do_nothing_T	simulation/test_case/solution/solution_T.cpp	/^void compute_source_rhs_do_nothing_T$/;"	f
compute_source_rhs_do_nothing_T	simulation/test_case/solution/undef_templates_solution.h	39;"	d
compute_source_rhs_fptr_T	simulation/test_case/solution/def_templates_solution.h	29;"	d
compute_source_rhs_fptr_T	simulation/test_case/solution/def_templates_solution.h	84;"	d
compute_source_rhs_fptr_T	simulation/test_case/solution/solution_T.h	/^typedef void (*compute_source_rhs_fptr_T)$/;"	t
compute_source_rhs_fptr_T	simulation/test_case/solution/undef_templates_solution.h	28;"	d
compute_sum_n_f	simulation/mesh/mesh_connectivity.cpp	/^static ptrdiff_t compute_sum_n_f$/;"	f	file:
compute_super_from_elem_type	element/element.cpp	/^int compute_super_from_elem_type (const int e_type)$/;"	f
compute_super_type_op	element/element_operators.cpp	/^int compute_super_type_op (const char ce, const int h_op, const struct const_Element* element)$/;"	f
compute_tau	simulation/test_case/flux/def_templates_flux.h	110;"	d
compute_tau	simulation/test_case/flux/def_templates_flux.h	212;"	d
compute_tau	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static const Type*const* compute_tau (const Type mu, const Type*const*const duvw)$/;"	f	file:
compute_tau	simulation/test_case/flux/undef_templates_flux.h	108;"	d
compute_tau_p	simulation/test_case/flux/def_templates_flux.h	201;"	d
compute_tau_p	simulation/test_case/flux/def_templates_flux.h	99;"	d
compute_tau_p	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static struct Partials_Tensor compute_tau_p$/;"	f	file:
compute_tau_p	simulation/test_case/flux/undef_templates_flux.h	97;"	d
compute_temperature	simulation/test_case/solution/euler/solution_euler.cpp	/^void compute_temperature$/;"	f
compute_total_entries	containers/def_templates_multiarray.h	171;"	d
compute_total_entries	containers/def_templates_multiarray.h	44;"	d
compute_total_entries	containers/def_templates_multiarray.h	95;"	d
compute_total_entries	containers/multiarray_T.cpp	/^static ptrdiff_t compute_total_entries (const struct Multiarray_Vector_T*const src)$/;"	f	file:
compute_total_entries	containers/undef_templates_multiarray.h	40;"	d
compute_unit_normals_T	simulation/geometry/def_templates_geometry.h	33;"	d
compute_unit_normals_T	simulation/geometry/def_templates_geometry.h	76;"	d
compute_unit_normals_T	simulation/geometry/geometry_T.cpp	/^void compute_unit_normals_T$/;"	f
compute_unit_normals_T	simulation/geometry/undef_templates_geometry.h	29;"	d
compute_unit_normals_and_det_T	simulation/geometry/def_templates_geometry.h	51;"	d
compute_unit_normals_and_det_T	simulation/geometry/def_templates_geometry.h	94;"	d
compute_unit_normals_and_det_T	simulation/geometry/geometry_T.cpp	/^static void compute_unit_normals_and_det_T$/;"	f	file:
compute_unit_normals_and_det_T	simulation/geometry/undef_templates_geometry.h	45;"	d
compute_updated_hp	simulation/solvers/adaptation/adaptation.cpp	/^static int compute_updated_hp (const struct Adaptive_Solver_Volume*const a_s_vol, const char hp_type)$/;"	f	file:
compute_uvw	simulation/test_case/boundary/boundary_euler_T.cpp	/^static void compute_uvw (const Type*const n, const Type Vn, const Type*const uvw_t, Type*const*const uvw)$/;"	f	file:
compute_uvw	simulation/test_case/boundary/def_templates_boundary.h	138;"	d
compute_uvw	simulation/test_case/boundary/def_templates_boundary.h	71;"	d
compute_uvw	simulation/test_case/boundary/undef_templates_boundary.h	72;"	d
compute_uvw	simulation/test_case/flux/def_templates_flux.h	105;"	d
compute_uvw	simulation/test_case/flux/def_templates_flux.h	207;"	d
compute_uvw	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static const Type* compute_uvw (const Type rho_inv, const Type*const rhouvw)$/;"	f	file:
compute_uvw	simulation/test_case/flux/undef_templates_flux.h	103;"	d
compute_uvw_ex	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^	compute_uvw_ex_fptr compute_uvw_ex; \/\/\/< Pointer to function computing the exact velocities on the boundary.$/;"	m	struct:Exact_Boundary_Data	file:
compute_uvw_ex_fptr	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^typedef const Type* (*compute_uvw_ex_fptr)$/;"	t	file:
compute_uvw_ex_fptr	simulation/test_case/boundary/def_templates_boundary.h	142;"	d
compute_uvw_ex_fptr	simulation/test_case/boundary/def_templates_boundary.h	75;"	d
compute_uvw_ex_fptr	simulation/test_case/boundary/undef_templates_boundary.h	76;"	d
compute_uvw_ex_rotating	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^static const Type* compute_uvw_ex_rotating (const Type xyz[DIM], const struct Exact_Boundary_Data*const eb_data)$/;"	f	file:
compute_uvw_ex_rotating	simulation/test_case/boundary/def_templates_boundary.h	151;"	d
compute_uvw_ex_rotating	simulation/test_case/boundary/def_templates_boundary.h	84;"	d
compute_uvw_ex_rotating	simulation/test_case/boundary/undef_templates_boundary.h	85;"	d
compute_uvw_ex_zero	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^static const Type* compute_uvw_ex_zero (const Type xyz[DIM], const struct Exact_Boundary_Data*const eb_data)$/;"	f	file:
compute_uvw_ex_zero	simulation/test_case/boundary/def_templates_boundary.h	150;"	d
compute_uvw_ex_zero	simulation/test_case/boundary/def_templates_boundary.h	83;"	d
compute_uvw_ex_zero	simulation/test_case/boundary/undef_templates_boundary.h	84;"	d
compute_uvw_p	simulation/test_case/flux/def_templates_flux.h	199;"	d
compute_uvw_p	simulation/test_case/flux/def_templates_flux.h	97;"	d
compute_uvw_p	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static struct Partials_Vector compute_uvw_p$/;"	f	file:
compute_uvw_p	simulation/test_case/flux/undef_templates_flux.h	95;"	d
compute_v_to__v_lf	simulation/mesh/mesh_connectivity.cpp	/^static void compute_v_to__v_lf (const struct Conn_info*const conn_info, struct Mesh_Connectivity_l*const mesh_conn_l)$/;"	f	file:
compute_ve_inds_f	simulation/computational_elements/face.cpp	/^const struct const_Vector_i* compute_ve_inds_f$/;"	f
compute_viscosity	simulation/test_case/solution/navier_stokes/solution_navier_stokes.cpp	/^void compute_viscosity (struct Multiarray_d* mu, const struct const_Multiarray_d* vars, const char var_type)$/;"	f
compute_vol_jacobian_det_fc_T	simulation/geometry/def_templates_geometry.h	52;"	d
compute_vol_jacobian_det_fc_T	simulation/geometry/def_templates_geometry.h	95;"	d
compute_vol_jacobian_det_fc_T	simulation/geometry/geometry_T.cpp	/^static void compute_vol_jacobian_det_fc_T (struct Solver_Face_T*const s_face)$/;"	f	file:
compute_vol_jacobian_det_fc_T	simulation/geometry/undef_templates_geometry.h	46;"	d
compute_volume	simulation/test_case/compute_error/compute_error.cpp	/^static double compute_volume (const struct Solver_Volume* s_vol)$/;"	f	file:
compute_volume_lhs	testing/integration/test_integration_linearization.cpp	/^	compute_dof_coef_fptr  compute_volume_lhs; \/\/\/< Solution coefficient terms contributed by the volume term.$/;"	m	struct:F_Ptrs_and_Data	file:
compute_volume_ratio	element/element_operators.cpp	/^static double compute_volume_ratio (const int e_type, const int ind_h)$/;"	f	file:
compute_volume_rlhs_dg_T	simulation/solvers/dg/compute_volume_rlhs_dg_T.cpp	/^void compute_volume_rlhs_dg_T$/;"	f
compute_volume_rlhs_dg_T	simulation/solvers/dg/def_templates_compute_volume_rlhs_dg.h	23;"	d
compute_volume_rlhs_dg_T	simulation/solvers/dg/def_templates_compute_volume_rlhs_dg.h	34;"	d
compute_volume_rlhs_dg_T	simulation/solvers/dg/undef_templates_compute_volume_rlhs_dg.h	20;"	d
compute_volume_rlhs_opg_T	simulation/solvers/opg/compute_volume_rlhs_opg_T.cpp	/^void compute_volume_rlhs_opg_T$/;"	f
compute_volume_rlhs_opg_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	23;"	d
compute_volume_rlhs_opg_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	42;"	d
compute_volume_rlhs_opg_T	simulation/solvers/opg/undef_templates_compute_volume_rlhs_opg.h	20;"	d
con	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^	       con;      \/\/\/< A scaling constant.$/;"	m	struct:Sol_Data__pv	file:
connect	element/nodes_plotting.h	/^	const struct const_Multiarray_Vector_i*const connect;   \/\/\/< Defined in \\ref Plotting_Nodes.$/;"	m	struct:const_Plotting_Nodes
connect	element/nodes_plotting.h	/^	struct Multiarray_Vector_i* connect;$/;"	m	struct:Plotting_Nodes	typeref:struct:Plotting_Nodes::Multiarray_Vector_i
connect_e	element/nodes_plotting.h	/^	const struct const_Multiarray_Vector_i*const connect_e; \/\/\/< Defined in \\ref Plotting_Nodes.$/;"	m	struct:const_Plotting_Nodes
connect_e	element/nodes_plotting.h	/^	struct Multiarray_Vector_i* connect_e;$/;"	m	struct:Plotting_Nodes	typeref:struct:Plotting_Nodes::Multiarray_Vector_i
const_Element	element/element.h	/^struct const_Element {$/;"	s
const_Intrusive_Link	intrusive/intrusive.h	/^struct const_Intrusive_Link {$/;"	s
const_Intrusive_List	intrusive/intrusive.h	/^struct const_Intrusive_List {$/;"	s
const_Matrix_C	containers/def_templates_matrix.h	113;"	d
const_Matrix_C	containers/undef_templates_matrix.h	60;"	d
const_Matrix_CSR_T	containers/def_templates_matrix.h	140;"	d
const_Matrix_CSR_T	containers/def_templates_matrix.h	31;"	d
const_Matrix_CSR_T	containers/def_templates_matrix.h	72;"	d
const_Matrix_CSR_T	containers/matrix_T.h	/^struct const_Matrix_CSR_T { \/\/\/\\{$/;"	s
const_Matrix_CSR_T	containers/undef_templates_matrix.h	27;"	d
const_Matrix_R	containers/def_templates_matrix.h	111;"	d
const_Matrix_R	containers/def_templates_matrix.h	137;"	d
const_Matrix_R	containers/undef_templates_matrix.h	58;"	d
const_Matrix_T	containers/def_templates_matrix.h	136;"	d
const_Matrix_T	containers/def_templates_matrix.h	28;"	d
const_Matrix_T	containers/def_templates_matrix.h	69;"	d
const_Matrix_T	containers/matrix_T.h	/^struct const_Matrix_T { \/\/\/\\{$/;"	s
const_Matrix_T	containers/undef_templates_matrix.h	24;"	d
const_Multiarray_Matrix_T	containers/def_templates_multiarray.h	160;"	d
const_Multiarray_Matrix_T	containers/def_templates_multiarray.h	33;"	d
const_Multiarray_Matrix_T	containers/def_templates_multiarray.h	84;"	d
const_Multiarray_Matrix_T	containers/multiarray_T.h	/^struct const_Multiarray_Matrix_T { \/\/\/\\{$/;"	s
const_Multiarray_Matrix_T	containers/undef_templates_multiarray.h	30;"	d
const_Multiarray_R	containers/def_templates_multiarray.h	130;"	d
const_Multiarray_R	containers/def_templates_multiarray.h	155;"	d
const_Multiarray_R	containers/undef_templates_multiarray.h	72;"	d
const_Multiarray_T	containers/def_templates_multiarray.h	154;"	d
const_Multiarray_T	containers/def_templates_multiarray.h	28;"	d
const_Multiarray_T	containers/def_templates_multiarray.h	79;"	d
const_Multiarray_T	containers/multiarray_T.h	/^struct const_Multiarray_T { \/\/\/\\{$/;"	s
const_Multiarray_T	containers/undef_templates_multiarray.h	25;"	d
const_Multiarray_Vector_T	containers/def_templates_multiarray.h	158;"	d
const_Multiarray_Vector_T	containers/def_templates_multiarray.h	31;"	d
const_Multiarray_Vector_T	containers/def_templates_multiarray.h	82;"	d
const_Multiarray_Vector_T	containers/multiarray_T.h	/^struct const_Multiarray_Vector_T { \/\/\/\\{$/;"	s
const_Multiarray_Vector_T	containers/undef_templates_multiarray.h	28;"	d
const_Nodes	element/nodes.h	/^struct const_Nodes {$/;"	s
const_Plotting_Nodes	element/nodes_plotting.h	/^struct const_Plotting_Nodes {$/;"	s
const_Vector_R	containers/def_templates_vector.h	102;"	d
const_Vector_R	containers/def_templates_vector.h	90;"	d
const_Vector_R	containers/undef_templates_vector.h	50;"	d
const_Vector_T	containers/def_templates_vector.h	100;"	d
const_Vector_T	containers/def_templates_vector.h	28;"	d
const_Vector_T	containers/def_templates_vector.h	59;"	d
const_Vector_T	containers/undef_templates_vector.h	24;"	d
const_Vector_T	containers/vector_T.h	/^struct const_Vector_T { \/\/\/\\{$/;"	s
const_cast_Face	simulation/computational_elements/face.cpp	/^void const_cast_Face (const struct Face*const* dest, const struct Face*const src)$/;"	f
const_cast_T	general/const_cast_T.cpp	/^void const_cast_T (const Type* dest, const Type src)$/;"	f
const_cast_T	general/def_templates_const_cast_b.h	20;"	d
const_cast_T	general/def_templates_const_cast_c.h	20;"	d
const_cast_T	general/def_templates_const_cast_d.h	22;"	d
const_cast_T	general/def_templates_const_cast_d.h	30;"	d
const_cast_T	general/def_templates_const_cast_i.h	20;"	d
const_cast_T	general/def_templates_const_cast_p.h	20;"	d
const_cast_T	general/undef_templates_const_cast.h	20;"	d
const_cast_T1	general/const_cast_T.cpp	/^void const_cast_T1 (const Type*const* dest, const Type*const src)$/;"	f
const_cast_T1	general/def_templates_const_cast_b.h	22;"	d
const_cast_T1	general/def_templates_const_cast_c.h	22;"	d
const_cast_T1	general/def_templates_const_cast_d.h	24;"	d
const_cast_T1	general/def_templates_const_cast_d.h	32;"	d
const_cast_T1	general/def_templates_const_cast_i.h	22;"	d
const_cast_T1	general/def_templates_const_cast_p.h	22;"	d
const_cast_T1	general/undef_templates_const_cast.h	22;"	d
const_cast_T_n	general/const_cast_T.cpp	/^void const_cast_T_n (const Type* dest, const Type* src, const int n)$/;"	f
const_cast_T_n	general/def_templates_const_cast_b.h	21;"	d
const_cast_T_n	general/def_templates_const_cast_c.h	21;"	d
const_cast_T_n	general/def_templates_const_cast_d.h	23;"	d
const_cast_T_n	general/def_templates_const_cast_d.h	31;"	d
const_cast_T_n	general/def_templates_const_cast_i.h	21;"	d
const_cast_T_n	general/def_templates_const_cast_p.h	21;"	d
const_cast_T_n	general/undef_templates_const_cast.h	21;"	d
const_cast_const_Element	element/element.cpp	/^void const_cast_const_Element (const struct const_Element*const* dest, const struct const_Element*const src)$/;"	f
const_constructor_copy_Matrix_T	containers/def_templates_matrix_constructors.h	109;"	d
const_constructor_copy_Matrix_T	containers/def_templates_matrix_constructors.h	208;"	d
const_constructor_copy_Matrix_T	containers/def_templates_matrix_constructors.h	37;"	d
const_constructor_copy_Matrix_T	containers/matrix_constructors_T.cpp	/^void const_constructor_copy_Matrix_T (const struct const_Matrix_T*const* dest, const struct const_Matrix_T*const src)$/;"	f
const_constructor_copy_Matrix_T	containers/undef_templates_matrix_constructors.h	33;"	d
const_constructor_copy_Multiarray_R	containers/def_templates_multiarray_constructors.h	164;"	d
const_constructor_copy_Multiarray_R	containers/undef_templates_multiarray_constructors.h	89;"	d
const_constructor_copy_Multiarray_T	containers/def_templates_multiarray_constructors.h	113;"	d
const_constructor_copy_Multiarray_T	containers/def_templates_multiarray_constructors.h	206;"	d
const_constructor_copy_Multiarray_T	containers/def_templates_multiarray_constructors.h	46;"	d
const_constructor_copy_Multiarray_T	containers/multiarray_constructors_T.cpp	/^void const_constructor_copy_Multiarray_T$/;"	f
const_constructor_copy_Multiarray_T	containers/undef_templates_multiarray_constructors.h	42;"	d
const_constructor_move_Matrix_T	containers/def_templates_matrix_constructors.h	121;"	d
const_constructor_move_Matrix_T	containers/def_templates_matrix_constructors.h	216;"	d
const_constructor_move_Matrix_T	containers/def_templates_matrix_constructors.h	49;"	d
const_constructor_move_Matrix_T	containers/matrix_constructors_T.cpp	/^void const_constructor_move_Matrix_T (const struct const_Matrix_T*const* dest, struct Matrix_T* src)$/;"	f
const_constructor_move_Matrix_T	containers/undef_templates_matrix_constructors.h	45;"	d
const_constructor_move_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	128;"	d
const_constructor_move_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	219;"	d
const_constructor_move_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	61;"	d
const_constructor_move_Multiarray_Matrix_T	containers/multiarray_constructors_T.cpp	/^void const_constructor_move_Multiarray_Matrix_T$/;"	f
const_constructor_move_Multiarray_Matrix_T	containers/undef_templates_multiarray_constructors.h	57;"	d
const_constructor_move_Multiarray_R	containers/def_templates_multiarray_constructors.h	166;"	d
const_constructor_move_Multiarray_R	containers/undef_templates_multiarray_constructors.h	91;"	d
const_constructor_move_Multiarray_T	containers/def_templates_multiarray_constructors.h	125;"	d
const_constructor_move_Multiarray_T	containers/def_templates_multiarray_constructors.h	216;"	d
const_constructor_move_Multiarray_T	containers/def_templates_multiarray_constructors.h	58;"	d
const_constructor_move_Multiarray_T	containers/multiarray_constructors_T.cpp	/^void const_constructor_move_Multiarray_T (const struct const_Multiarray_T*const* dest, struct Multiarray_T* src)$/;"	f
const_constructor_move_Multiarray_T	containers/undef_templates_multiarray_constructors.h	54;"	d
const_constructor_move_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	127;"	d
const_constructor_move_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	218;"	d
const_constructor_move_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	60;"	d
const_constructor_move_Multiarray_Vector_T	containers/multiarray_constructors_T.cpp	/^void const_constructor_move_Multiarray_Vector_T$/;"	f
const_constructor_move_Multiarray_Vector_T	containers/undef_templates_multiarray_constructors.h	56;"	d
const_constructor_move_Vector_T	containers/def_templates_vector_constructors.h	100;"	d
const_constructor_move_Vector_T	containers/def_templates_vector_constructors.h	169;"	d
const_constructor_move_Vector_T	containers/def_templates_vector_constructors.h	42;"	d
const_constructor_move_Vector_T	containers/undef_templates_vector_constructors.h	39;"	d
const_constructor_move_Vector_T	containers/vector_constructors_T.cpp	/^void const_constructor_move_Vector_T (const struct const_Vector_T*const* dest, struct Vector_T* src)$/;"	f
const_constructor_move_const_Matrix_T	containers/def_templates_matrix_constructors.h	122;"	d
const_constructor_move_const_Matrix_T	containers/def_templates_matrix_constructors.h	217;"	d
const_constructor_move_const_Matrix_T	containers/def_templates_matrix_constructors.h	50;"	d
const_constructor_move_const_Matrix_T	containers/matrix_constructors_T.cpp	/^void const_constructor_move_const_Matrix_T (const struct const_Matrix_T*const* dest, const struct const_Matrix_T* src)$/;"	f
const_constructor_move_const_Matrix_T	containers/undef_templates_matrix_constructors.h	46;"	d
const_constructor_move_const_Multiarray_R	containers/def_templates_multiarray_constructors.h	167;"	d
const_constructor_move_const_Multiarray_R	containers/undef_templates_multiarray_constructors.h	92;"	d
const_constructor_move_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	126;"	d
const_constructor_move_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	217;"	d
const_constructor_move_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	59;"	d
const_constructor_move_const_Multiarray_T	containers/multiarray_constructors_T.cpp	/^void const_constructor_move_const_Multiarray_T$/;"	f
const_constructor_move_const_Multiarray_T	containers/undef_templates_multiarray_constructors.h	55;"	d
const_constructor_move_const_Vector_T	containers/def_templates_vector_constructors.h	101;"	d
const_constructor_move_const_Vector_T	containers/def_templates_vector_constructors.h	170;"	d
const_constructor_move_const_Vector_T	containers/def_templates_vector_constructors.h	43;"	d
const_constructor_move_const_Vector_T	containers/undef_templates_vector_constructors.h	40;"	d
const_constructor_move_const_Vector_T	containers/vector_constructors_T.cpp	/^void const_constructor_move_const_Vector_T$/;"	f
construct_operators_std	element/element_operators_tp.cpp	/^static void construct_operators_std (const struct Multiarray_Operator* op)$/;"	f	file:
constructor_Adaptive_Solver_Face_h_ref	simulation/solvers/adaptation/adaptation.cpp	/^static struct Adaptive_Solver_Face* constructor_Adaptive_Solver_Face_h_ref$/;"	f	file:
constructor_Adaptive_Solver_Face_i_new	simulation/solvers/adaptation/adaptation.cpp	/^static struct Adaptive_Solver_Face* constructor_Adaptive_Solver_Face_i_new$/;"	f	file:
constructor_Adaptive_Solver_Volume_h_ref	simulation/solvers/adaptation/adaptation.cpp	/^static struct Adaptive_Solver_Volume* constructor_Adaptive_Solver_Volume_h_ref$/;"	f	file:
constructor_Basis_Data_PYR_Bezier	testing/unit/test_unit_bases.cpp	/^static struct Basis_Data_PYR_Bezier* constructor_Basis_Data_PYR_Bezier (const char eval_type)$/;"	f	file:
constructor_Basis_Data_PYR_Ortho	testing/unit/test_unit_bases.cpp	/^static struct Basis_Data_PYR_Ortho* constructor_Basis_Data_PYR_Ortho (const char eval_type)$/;"	f	file:
constructor_Basis_Data_SI_Bezier	testing/unit/test_unit_bases.cpp	/^static struct Basis_Data_SI_Bezier* constructor_Basis_Data_SI_Bezier (const char eval_type)$/;"	f	file:
constructor_Basis_Data_SI_Ortho	testing/unit/test_unit_bases.cpp	/^static struct Basis_Data_SI_Ortho* constructor_Basis_Data_SI_Ortho (const char eval_type)$/;"	f	file:
constructor_Basis_Data_TP_Bezier	testing/unit/test_unit_bases.cpp	/^static struct Basis_Data_TP_Bezier* constructor_Basis_Data_TP_Bezier (const char eval_type)$/;"	f	file:
constructor_Basis_Data_TP_Ortho	testing/unit/test_unit_bases.cpp	/^static struct Basis_Data_TP_Ortho* constructor_Basis_Data_TP_Ortho (const char eval_type)$/;"	f	file:
constructor_Boundary_Face	simulation/mesh/mesh_connectivity.cpp	/^static struct Boundary_Face* constructor_Boundary_Face ( )$/;"	f	file:
constructor_Boundary_Face_Info	simulation/mesh/mesh_connectivity.cpp	/^static struct Boundary_Face_Info* constructor_Boundary_Face_Info (const ptrdiff_t n_pfe, const ptrdiff_t n_bf)$/;"	f	file:
constructor_Boundary_Value_Input_face_fcl	simulation/test_case/test_case_T.h	/^	constructor_Boundary_Value_Input_face_fptr_T constructor_Boundary_Value_Input_face_fcl;$/;"	m	struct:Test_Case_T
constructor_Boundary_Value_Input_face_fptr_T	simulation/test_case/boundary/boundary_T.h	/^typedef void (*constructor_Boundary_Value_Input_face_fptr_T)$/;"	t
constructor_Boundary_Value_Input_face_fptr_T	simulation/test_case/boundary/def_templates_boundary.h	29;"	d
constructor_Boundary_Value_Input_face_fptr_T	simulation/test_case/boundary/def_templates_boundary.h	96;"	d
constructor_Boundary_Value_Input_face_fptr_T	simulation/test_case/boundary/undef_templates_boundary.h	27;"	d
constructor_Boundary_Value_Input_face_s_fcl_interp_T	simulation/test_case/boundary/boundary_T.cpp	/^void constructor_Boundary_Value_Input_face_s_fcl_interp_T$/;"	f
constructor_Boundary_Value_Input_face_s_fcl_interp_T	simulation/test_case/boundary/def_templates_boundary.h	102;"	d
constructor_Boundary_Value_Input_face_s_fcl_interp_T	simulation/test_case/boundary/def_templates_boundary.h	35;"	d
constructor_Boundary_Value_Input_face_s_fcl_interp_T	simulation/test_case/boundary/undef_templates_boundary.h	35;"	d
constructor_Boundary_Value_Input_face_sg_fcl_interp_T	simulation/test_case/boundary/boundary_T.cpp	/^void constructor_Boundary_Value_Input_face_sg_fcl_interp_T$/;"	f
constructor_Boundary_Value_Input_face_sg_fcl_interp_T	simulation/test_case/boundary/def_templates_boundary.h	103;"	d
constructor_Boundary_Value_Input_face_sg_fcl_interp_T	simulation/test_case/boundary/def_templates_boundary.h	36;"	d
constructor_Boundary_Value_Input_face_sg_fcl_interp_T	simulation/test_case/boundary/undef_templates_boundary.h	36;"	d
constructor_Boundary_Value_Input_g_face_fcl	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^static void constructor_Boundary_Value_Input_g_face_fcl$/;"	f	file:
constructor_Boundary_Value_Input_g_face_fcl	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	35;"	d
constructor_Boundary_Value_Input_g_face_fcl	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	54;"	d
constructor_Boundary_Value_Input_g_face_fcl	simulation/solvers/dg/undef_templates_compute_face_rlhs_dg.h	29;"	d
constructor_Boundary_Value_T_advection_upwind	simulation/test_case/boundary/boundary_advection_T.cpp	/^void constructor_Boundary_Value_T_advection_upwind$/;"	f
constructor_Boundary_Value_T_advection_upwind	simulation/test_case/boundary/def_templates_boundary.h	113;"	d
constructor_Boundary_Value_T_advection_upwind	simulation/test_case/boundary/def_templates_boundary.h	46;"	d
constructor_Boundary_Value_T_advection_upwind	simulation/test_case/boundary/undef_templates_boundary.h	46;"	d
constructor_Boundary_Value_T_diffusion_dirichlet	simulation/test_case/boundary/boundary_diffusion_T.cpp	/^void constructor_Boundary_Value_T_diffusion_dirichlet$/;"	f
constructor_Boundary_Value_T_diffusion_dirichlet	simulation/test_case/boundary/def_templates_boundary.h	115;"	d
constructor_Boundary_Value_T_diffusion_dirichlet	simulation/test_case/boundary/def_templates_boundary.h	48;"	d
constructor_Boundary_Value_T_diffusion_dirichlet	simulation/test_case/boundary/undef_templates_boundary.h	48;"	d
constructor_Boundary_Value_T_diffusion_neumann	simulation/test_case/boundary/boundary_diffusion_T.cpp	/^void constructor_Boundary_Value_T_diffusion_neumann$/;"	f
constructor_Boundary_Value_T_diffusion_neumann	simulation/test_case/boundary/def_templates_boundary.h	116;"	d
constructor_Boundary_Value_T_diffusion_neumann	simulation/test_case/boundary/def_templates_boundary.h	49;"	d
constructor_Boundary_Value_T_diffusion_neumann	simulation/test_case/boundary/undef_templates_boundary.h	49;"	d
constructor_Boundary_Value_T_euler_back_pressure	simulation/test_case/boundary/boundary_euler_T.cpp	/^void constructor_Boundary_Value_T_euler_back_pressure$/;"	f
constructor_Boundary_Value_T_euler_back_pressure	simulation/test_case/boundary/def_templates_boundary.h	122;"	d
constructor_Boundary_Value_T_euler_back_pressure	simulation/test_case/boundary/def_templates_boundary.h	55;"	d
constructor_Boundary_Value_T_euler_back_pressure	simulation/test_case/boundary/undef_templates_boundary.h	55;"	d
constructor_Boundary_Value_T_euler_riemann	simulation/test_case/boundary/boundary_euler_T.cpp	/^void constructor_Boundary_Value_T_euler_riemann$/;"	f
constructor_Boundary_Value_T_euler_riemann	simulation/test_case/boundary/def_templates_boundary.h	118;"	d
constructor_Boundary_Value_T_euler_riemann	simulation/test_case/boundary/def_templates_boundary.h	51;"	d
constructor_Boundary_Value_T_euler_riemann	simulation/test_case/boundary/undef_templates_boundary.h	51;"	d
constructor_Boundary_Value_T_euler_slipwall	simulation/test_case/boundary/boundary_euler_T.cpp	/^void constructor_Boundary_Value_T_euler_slipwall$/;"	f
constructor_Boundary_Value_T_euler_slipwall	simulation/test_case/boundary/def_templates_boundary.h	119;"	d
constructor_Boundary_Value_T_euler_slipwall	simulation/test_case/boundary/def_templates_boundary.h	52;"	d
constructor_Boundary_Value_T_euler_slipwall	simulation/test_case/boundary/undef_templates_boundary.h	52;"	d
constructor_Boundary_Value_T_euler_supersonic_inflow	simulation/test_case/boundary/boundary_euler_T.cpp	/^void constructor_Boundary_Value_T_euler_supersonic_inflow$/;"	f
constructor_Boundary_Value_T_euler_supersonic_inflow	simulation/test_case/boundary/def_templates_boundary.h	120;"	d
constructor_Boundary_Value_T_euler_supersonic_inflow	simulation/test_case/boundary/def_templates_boundary.h	53;"	d
constructor_Boundary_Value_T_euler_supersonic_inflow	simulation/test_case/boundary/undef_templates_boundary.h	53;"	d
constructor_Boundary_Value_T_euler_supersonic_outflow	simulation/test_case/boundary/boundary_euler_T.cpp	/^void constructor_Boundary_Value_T_euler_supersonic_outflow$/;"	f
constructor_Boundary_Value_T_euler_supersonic_outflow	simulation/test_case/boundary/def_templates_boundary.h	121;"	d
constructor_Boundary_Value_T_euler_supersonic_outflow	simulation/test_case/boundary/def_templates_boundary.h	54;"	d
constructor_Boundary_Value_T_euler_supersonic_outflow	simulation/test_case/boundary/undef_templates_boundary.h	54;"	d
constructor_Boundary_Value_T_euler_total_tp	simulation/test_case/boundary/boundary_euler_T.cpp	/^void constructor_Boundary_Value_T_euler_total_tp$/;"	f
constructor_Boundary_Value_T_euler_total_tp	simulation/test_case/boundary/def_templates_boundary.h	123;"	d
constructor_Boundary_Value_T_euler_total_tp	simulation/test_case/boundary/def_templates_boundary.h	56;"	d
constructor_Boundary_Value_T_euler_total_tp	simulation/test_case/boundary/undef_templates_boundary.h	56;"	d
constructor_Boundary_Value_T_grad_from_internal	simulation/test_case/boundary/boundary_T.cpp	/^void constructor_Boundary_Value_T_grad_from_internal$/;"	f
constructor_Boundary_Value_T_grad_from_internal	simulation/test_case/boundary/def_templates_boundary.h	107;"	d
constructor_Boundary_Value_T_grad_from_internal	simulation/test_case/boundary/def_templates_boundary.h	40;"	d
constructor_Boundary_Value_T_grad_from_internal	simulation/test_case/boundary/undef_templates_boundary.h	40;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_all_general	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^static void constructor_Boundary_Value_T_navier_stokes_no_slip_all_general$/;"	f	file:
constructor_Boundary_Value_T_navier_stokes_no_slip_all_general	simulation/test_case/boundary/def_templates_boundary.h	145;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_all_general	simulation/test_case/boundary/def_templates_boundary.h	78;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_all_general	simulation/test_case/boundary/undef_templates_boundary.h	79;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_all_rotating	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^void constructor_Boundary_Value_T_navier_stokes_no_slip_all_rotating$/;"	f
constructor_Boundary_Value_T_navier_stokes_no_slip_all_rotating	simulation/test_case/boundary/def_templates_boundary.h	125;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_all_rotating	simulation/test_case/boundary/def_templates_boundary.h	58;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_all_rotating	simulation/test_case/boundary/undef_templates_boundary.h	58;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_flux_adiabatic	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^void constructor_Boundary_Value_T_navier_stokes_no_slip_flux_adiabatic$/;"	f
constructor_Boundary_Value_T_navier_stokes_no_slip_flux_adiabatic	simulation/test_case/boundary/def_templates_boundary.h	126;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_flux_adiabatic	simulation/test_case/boundary/def_templates_boundary.h	59;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_flux_adiabatic	simulation/test_case/boundary/undef_templates_boundary.h	59;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_flux_diabatic	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^void constructor_Boundary_Value_T_navier_stokes_no_slip_flux_diabatic$/;"	f
constructor_Boundary_Value_T_navier_stokes_no_slip_flux_diabatic	simulation/test_case/boundary/def_templates_boundary.h	127;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_flux_diabatic	simulation/test_case/boundary/def_templates_boundary.h	60;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_flux_diabatic	simulation/test_case/boundary/undef_templates_boundary.h	60;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_flux_general	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^static void constructor_Boundary_Value_T_navier_stokes_no_slip_flux_general$/;"	f	file:
constructor_Boundary_Value_T_navier_stokes_no_slip_flux_general	simulation/test_case/boundary/def_templates_boundary.h	146;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_flux_general	simulation/test_case/boundary/def_templates_boundary.h	79;"	d
constructor_Boundary_Value_T_navier_stokes_no_slip_flux_general	simulation/test_case/boundary/undef_templates_boundary.h	80;"	d
constructor_Boundary_Value_c_data	testing/integration/test_integration_support_face.cpp	/^void constructor_Boundary_Value_c_data$/;"	f
constructor_Boundary_Value_fcl	simulation/solvers/face_solver_T.h	/^	constructor_Boundary_Value_fptr_T constructor_Boundary_Value_fcl;$/;"	m	struct:Solver_Face_T
constructor_Boundary_Value_fptr_T	simulation/test_case/boundary/boundary_T.h	/^typedef void (*constructor_Boundary_Value_fptr_T)$/;"	t
constructor_Boundary_Value_fptr_T	simulation/test_case/boundary/def_templates_boundary.h	30;"	d
constructor_Boundary_Value_fptr_T	simulation/test_case/boundary/def_templates_boundary.h	97;"	d
constructor_Boundary_Value_fptr_T	simulation/test_case/boundary/undef_templates_boundary.h	28;"	d
constructor_Boundary_Value_g_face_fcl	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^static void constructor_Boundary_Value_g_face_fcl$/;"	f	file:
constructor_Boundary_Value_g_face_fcl	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	36;"	d
constructor_Boundary_Value_g_face_fcl	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	55;"	d
constructor_Boundary_Value_g_face_fcl	simulation/solvers/dg/undef_templates_compute_face_rlhs_dg.h	30;"	d
constructor_Boundary_Value_s_fcl_interp_T	simulation/test_case/boundary/boundary_T.cpp	/^void constructor_Boundary_Value_s_fcl_interp_T$/;"	f
constructor_Boundary_Value_s_fcl_interp_T	simulation/test_case/boundary/def_templates_boundary.h	105;"	d
constructor_Boundary_Value_s_fcl_interp_T	simulation/test_case/boundary/def_templates_boundary.h	38;"	d
constructor_Boundary_Value_s_fcl_interp_T	simulation/test_case/boundary/undef_templates_boundary.h	38;"	d
constructor_Conn_info	simulation/mesh/mesh_connectivity.cpp	/^static struct Conn_info* constructor_Conn_info$/;"	f	file:
constructor_Conv_Order_Data	testing/integration/test_integration_convergence_support.cpp	/^static struct Conv_Order_Data* constructor_Conv_Order_Data$/;"	f	file:
constructor_Element	element/element.cpp	/^static struct Element* constructor_Element (const int elem_type)$/;"	f	file:
constructor_Element_Data	simulation/mesh/mesh_readers.cpp	/^static struct Element_Data* constructor_Element_Data (const ptrdiff_t n_elems, const ptrdiff_t n_tags)$/;"	f	file:
constructor_Elementary_Entities	simulation/mesh/mesh_readers.cpp	/^static struct Elementary_Entity* constructor_Elementary_Entities (const ptrdiff_t n_entities, const int n_partitions)$/;"	f	file:
constructor_Elements	element/element.cpp	/^struct const_Intrusive_List* constructor_Elements (const int d)$/;"	f
constructor_Elements_Info	simulation/test_case/solution/restart/restart_writers.cpp	/^static const struct Elements_Info* constructor_Elements_Info (const struct Simulation*const sim)$/;"	f	file:
constructor_Error_CE	simulation/test_case/compute_error/compute_error.cpp	/^struct Error_CE* constructor_Error_CE (struct Error_CE_Helper* e_ce_h, const struct Simulation* sim)$/;"	f
constructor_Error_CE	simulation/test_case/test_case_T.h	/^	constructor_Error_CE_fptr constructor_Error_CE;         \/\/\/< Pointer to the function computing the error.$/;"	m	struct:Test_Case_T
constructor_Error_CE_Data	simulation/test_case/compute_error/compute_error.cpp	/^struct Error_CE_Data* constructor_Error_CE_Data$/;"	f
constructor_Error_CE_Helper	simulation/test_case/compute_error/compute_error.cpp	/^struct Error_CE_Helper* constructor_Error_CE_Helper (const struct Simulation* sim, const int n_out)$/;"	f
constructor_Error_CE_NULL	simulation/test_case/compute_error/compute_error.cpp	/^struct Error_CE* constructor_Error_CE_NULL (const struct Simulation* sim)$/;"	f
constructor_Error_CE_advection_all	simulation/test_case/compute_error/compute_error_advection.cpp	/^struct Error_CE* constructor_Error_CE_advection_all (const struct Simulation* sim)$/;"	f
constructor_Error_CE_advection_all_p_rhs	simulation/test_case/compute_error/compute_error_advection.cpp	/^struct Error_CE* constructor_Error_CE_advection_all_p_rhs (const struct Simulation* sim)$/;"	f
constructor_Error_CE_burgers_inviscid_all	simulation/test_case/compute_error/compute_error_burgers_inviscid.cpp	/^struct Error_CE* constructor_Error_CE_burgers_inviscid_all (const struct Simulation* sim)$/;"	f
constructor_Error_CE_diffusion_all	simulation/test_case/compute_error/compute_error_diffusion.cpp	/^struct Error_CE* constructor_Error_CE_diffusion_all (const struct Simulation* sim)$/;"	f
constructor_Error_CE_diffusion_all_p_rhs	simulation/test_case/compute_error/compute_error_diffusion.cpp	/^struct Error_CE* constructor_Error_CE_diffusion_all_p_rhs (const struct Simulation* sim)$/;"	f
constructor_Error_CE_euler_all	simulation/test_case/compute_error/compute_error_euler.cpp	/^struct Error_CE* constructor_Error_CE_euler_all (const struct Simulation* sim)$/;"	f
constructor_Error_CE_euler_all_p_rhs	simulation/test_case/compute_error/compute_error_euler.cpp	/^struct Error_CE* constructor_Error_CE_euler_all_p_rhs (const struct Simulation* sim)$/;"	f
constructor_Error_CE_euler_entropy	simulation/test_case/compute_error/compute_error_euler.cpp	/^struct Error_CE* constructor_Error_CE_euler_entropy (const struct Simulation* sim)$/;"	f
constructor_Error_CE_euler_entropy_p_rhs	simulation/test_case/compute_error/compute_error_euler.cpp	/^struct Error_CE* constructor_Error_CE_euler_entropy_p_rhs (const struct Simulation* sim)$/;"	f
constructor_Error_CE_fptr	simulation/test_case/compute_error/compute_error.h	/^typedef struct Error_CE* (*constructor_Error_CE_fptr)$/;"	t	typeref:struct:constructor_Error_CE_fptr
constructor_Error_CE_functionals	simulation/test_case/test_case_T.h	/^	constructor_Error_CE_fptr constructor_Error_CE_functionals;$/;"	m	struct:Test_Case_T
constructor_Error_CE_functionals__cd_cl	simulation/test_case/compute_error/compute_error_euler.cpp	/^struct Error_CE* constructor_Error_CE_functionals__cd_cl (const struct Simulation*const sim)$/;"	f
constructor_Error_CE_functionals__cd_cl_general	simulation/test_case/compute_error/compute_error_euler.cpp	/^static struct Error_CE* constructor_Error_CE_functionals__cd_cl_general$/;"	f	file:
constructor_Error_CE_functionals__cl	simulation/test_case/compute_error/compute_error_euler.cpp	/^struct Error_CE* constructor_Error_CE_functionals__cl (const struct Simulation*const sim)$/;"	f
constructor_Error_CE_navier_stokes_uvw_zero_surface	simulation/test_case/compute_error/compute_error_navier_stokes.cpp	/^struct Error_CE* constructor_Error_CE_navier_stokes_uvw_zero_surface (const struct Simulation*const sim)$/;"	f
constructor_Error_CE_navier_stokes_uvwt	simulation/test_case/compute_error/compute_error_navier_stokes.cpp	/^struct Error_CE* constructor_Error_CE_navier_stokes_uvwt (const struct Simulation* sim)$/;"	f
constructor_Error_CE_restart_test	simulation/test_case/test_case_T.h	/^	constructor_Error_CE_fptr constructor_Error_CE_restart_test;$/;"	m	struct:Test_Case_T
constructor_FE_Test_Data	testing/support/test_support_fe_init.cpp	/^static struct FE_Test_Data* constructor_FE_Test_Data$/;"	f	file:
constructor_F_Ptrs_and_Data	testing/integration/test_integration_linearization.cpp	/^static struct F_Ptrs_and_Data* constructor_F_Ptrs_and_Data (const struct Simulation* sim)$/;"	f	file:
constructor_Face	simulation/computational_elements/face.cpp	/^static struct Face* constructor_Face$/;"	f	file:
constructor_Face_file	testing/support/simulation/computational_elements/test_support_face.cpp	/^struct Face* constructor_Face_file$/;"	f
constructor_Face_h_ref	simulation/solvers/adaptation/adaptation.cpp	/^static void constructor_Face_h_ref$/;"	f	file:
constructor_Face_i_new	simulation/solvers/adaptation/adaptation.cpp	/^static void constructor_Face_i_new$/;"	f	file:
constructor_Faces	simulation/computational_elements/face.cpp	/^struct Intrusive_List* constructor_Faces (struct Simulation*const sim, const struct Mesh*const mesh)$/;"	f
constructor_Faces_dpg_local	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static struct Intrusive_List* constructor_Faces_dpg_local$/;"	f	file:
constructor_Faces_local_neigh_only	testing/support/simulation/solvers/test_support_solve.cpp	/^struct Intrusive_List* constructor_Faces_local_neigh_only$/;"	f
constructor_Flux_Input_T	simulation/test_case/flux/def_templates_flux.h	134;"	d
constructor_Flux_Input_T	simulation/test_case/flux/def_templates_flux.h	32;"	d
constructor_Flux_Input_T	simulation/test_case/flux/flux_T.cpp	/^struct Flux_Input_T* constructor_Flux_Input_T (const struct Simulation* sim)$/;"	f
constructor_Flux_Input_T	simulation/test_case/flux/undef_templates_flux.h	31;"	d
constructor_Flux_Input_T_e	simulation/test_case/flux/def_templates_flux.h	135;"	d
constructor_Flux_Input_T_e	simulation/test_case/flux/def_templates_flux.h	33;"	d
constructor_Flux_Input_T_e	simulation/test_case/flux/flux_T.cpp	/^struct Flux_Input_T* constructor_Flux_Input_T_e (struct Simulation* sim)$/;"	f
constructor_Flux_Input_T_e	simulation/test_case/flux/undef_templates_flux.h	32;"	d
constructor_Flux_Input_c_data_members	testing/integration/test_integration_fluxes.cpp	/^static void constructor_Flux_Input_c_data_members (struct Flux_Input_c*const flux_c_i, struct Flux_Input*const flux_i)$/;"	f	file:
constructor_Flux_Input_data_f_T	simulation/solvers/compute_face_rlhs_T.cpp	/^void constructor_Flux_Input_data_f_T$/;"	f
constructor_Flux_Input_data_f_T	simulation/solvers/def_templates_compute_face_rlhs.h	41;"	d
constructor_Flux_Input_data_f_T	simulation/solvers/def_templates_compute_face_rlhs.h	72;"	d
constructor_Flux_Input_data_f_T	simulation/solvers/undef_templates_compute_face_rlhs.h	38;"	d
constructor_Flux_Input_data_members	testing/integration/test_integration_fluxes.cpp	/^static void constructor_Flux_Input_data_members (struct Flux_Input*const flux_i, const struct Simulation*const sim)$/;"	f	file:
constructor_Flux_Ref	simulation/solvers/undef_templates_compute_volume_rlhs.h	49;"	d
constructor_Flux_Ref_OPG_T	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^static struct Flux_Ref_T* constructor_Flux_Ref_OPG_T$/;"	f	file:
constructor_Flux_Ref_OPG_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	43;"	d
constructor_Flux_Ref_OPG_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	72;"	d
constructor_Flux_Ref_OPG_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	34;"	d
constructor_Flux_Ref_T	simulation/solvers/compute_rlhs_T.cpp	/^struct Flux_Ref_T* constructor_Flux_Ref_T (const struct const_Multiarray_T*const m, const struct Flux_T*const flux)$/;"	f
constructor_Flux_Ref_T	simulation/solvers/def_templates_compute_rlhs.h	26;"	d
constructor_Flux_Ref_T	simulation/solvers/def_templates_compute_rlhs.h	41;"	d
constructor_Flux_Ref_T	simulation/solvers/undef_templates_compute_rlhs.h	22;"	d
constructor_Flux_Ref_vol_T	simulation/solvers/compute_volume_rlhs_T.cpp	/^struct Flux_Ref_T* constructor_Flux_Ref_vol_T$/;"	f
constructor_Flux_Ref_vol_T	simulation/solvers/def_templates_compute_volume_rlhs.h	34;"	d
constructor_Flux_Ref_vol_T	simulation/solvers/def_templates_compute_volume_rlhs.h	70;"	d
constructor_Flux_Ref_vol_T	simulation/solvers/undef_templates_compute_volume_rlhs.h	33;"	d
constructor_Flux_Ref_vol_opg_T	simulation/solvers/opg/compute_volume_rlhs_opg_T.cpp	/^struct Flux_Ref_T* constructor_Flux_Ref_vol_opg_T (struct Flux_Input_T* flux_i, const struct Solver_Volume_T* s_vol)$/;"	f
constructor_Flux_Ref_vol_opg_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	32;"	d
constructor_Flux_Ref_vol_opg_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	51;"	d
constructor_Flux_Ref_vol_opg_T	simulation/solvers/opg/undef_templates_compute_volume_rlhs_opg.h	28;"	d
constructor_Flux_T	simulation/test_case/flux/def_templates_flux.h	137;"	d
constructor_Flux_T	simulation/test_case/flux/def_templates_flux.h	35;"	d
constructor_Flux_T	simulation/test_case/flux/flux_T.cpp	/^struct Flux_T* constructor_Flux_T (const struct Flux_Input_T* flux_i)$/;"	f
constructor_Flux_T	simulation/test_case/flux/undef_templates_flux.h	34;"	d
constructor_Flux_cmplx_step	testing/integration/test_integration_fluxes.cpp	/^static struct Flux* constructor_Flux_cmplx_step (struct Flux_Input_c*const flux_i_c, struct Flux_Input*const flux_i)$/;"	f	file:
constructor_Fluxes_LR	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	136;"	d
constructor_Fluxes_LR	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	72;"	d
constructor_Fluxes_LR	simulation/solvers/numerical_flux/numerical_flux_central_T.cpp	/^static struct Fluxes_LR constructor_Fluxes_LR (const struct Numerical_Flux_Input_T*const num_flux_i)$/;"	f	file:
constructor_Fluxes_LR	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	69;"	d
constructor_Gen_Eig_Data_inf_sup	testing/integration/test_integration_inf_sup.cpp	/^static const struct Gen_Eig_Data* constructor_Gen_Eig_Data_inf_sup (struct Simulation*const sim)$/;"	f	file:
constructor_Gen_Eig_Data_inf_sup_dg	testing/support/simulation/solvers/dg/test_support_solve_dg.cpp	/^const struct Gen_Eig_Data* constructor_Gen_Eig_Data_inf_sup_dg (struct Simulation*const sim)$/;"	f
constructor_Gen_Eig_Data_inf_sup_dpg	testing/support/simulation/solvers/dpg/test_support_solve_dpg.cpp	/^const struct Gen_Eig_Data* constructor_Gen_Eig_Data_inf_sup_dpg (struct Simulation*const sim)$/;"	f
constructor_Geom_Test_Data	testing/integration/test_integration_geometry.cpp	/^static struct Geom_Test_Data* constructor_Geom_Test_Data (const struct Simulation* sim)$/;"	f	file:
constructor_Integration_Test_Info	testing/integration/test_integration.cpp	/^struct Integration_Test_Info* constructor_Integration_Test_Info (const char*const ctrl_name)$/;"	f
constructor_Inv_Map	simulation/test_case/solution/restart/inverse_mapping.cpp	/^static const struct Inv_Map* constructor_Inv_Map (const int e_type)$/;"	f	file:
constructor_Lhs_Operators_OPG_T	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^const struct Lhs_Operators_OPG_T* constructor_Lhs_Operators_OPG_T (const struct OPG_Solver_Face_T*const opg_s_face)$/;"	f
constructor_Lhs_Operators_OPG_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	34;"	d
constructor_Lhs_Operators_OPG_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	63;"	d
constructor_Lhs_Operators_OPG_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	26;"	d
constructor_MaM1_V_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	132;"	d
constructor_MaM1_V_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	65;"	d
constructor_MaM1_V_const_Multiarray_T	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_T* constructor_MaM1_V_const_Multiarray_T$/;"	f
constructor_MaM1_V_const_Multiarray_T	containers/undef_templates_multiarray_constructors.h	61;"	d
constructor_Mat_S_dg	testing/support/simulation/solvers/dg/test_support_solve_dg.cpp	/^static Mat constructor_Mat_S_dg (const struct Simulation*const sim)$/;"	f	file:
constructor_Mat_S_dpg	testing/support/simulation/solvers/dpg/test_support_solve_dpg.cpp	/^static Mat constructor_Mat_S_dpg (const struct Simulation*const sim)$/;"	f	file:
constructor_Mat_T_inv_dg	testing/support/simulation/solvers/dg/test_support_solve_dg.cpp	/^static Mat constructor_Mat_T_inv_dg (const struct Simulation*const sim)$/;"	f	file:
constructor_Mesh	simulation/mesh/mesh.cpp	/^struct Mesh* constructor_Mesh (const struct Mesh_Input* mesh_input, const struct const_Intrusive_List* elements)$/;"	f
constructor_Mesh_Connectivity	simulation/mesh/mesh_connectivity.cpp	/^struct Mesh_Connectivity* constructor_Mesh_Connectivity$/;"	f
constructor_Mesh_Data	simulation/mesh/mesh_readers.cpp	/^struct Mesh_Data* constructor_Mesh_Data (const char*const mesh_name_full, const int d)$/;"	f
constructor_Mesh_Input	testing/integration/test_integration_mesh.cpp	/^static struct Mesh_Input* constructor_Mesh_Input (const char*const mesh_name)$/;"	f	file:
constructor_Mesh_Test_Data	testing/integration/test_integration_mesh.cpp	/^static struct Mesh_Test_Data* constructor_Mesh_Test_Data$/;"	f	file:
constructor_Mesh_Vertices	simulation/mesh/mesh_vertices.cpp	/^struct Mesh_Vertices* constructor_Mesh_Vertices$/;"	f
constructor_NULL	simulation/solvers/compute_volume_rlhs_T.cpp	/^static const struct const_Multiarray_T* constructor_NULL (const struct Solver_Volume_T*const s_vol)$/;"	f	file:
constructor_NULL	simulation/solvers/def_templates_compute_volume_rlhs.h	42;"	d
constructor_NULL	simulation/solvers/def_templates_compute_volume_rlhs.h	78;"	d
constructor_NULL	simulation/solvers/undef_templates_compute_volume_rlhs.h	40;"	d
constructor_Nodes_Data_PYR	testing/unit/test_unit_nodes.cpp	/^static struct Nodes_Data_PYR* constructor_Nodes_Data_PYR (const char eval_type, const char*const node_type)$/;"	f	file:
constructor_Nodes_Data_SI	testing/unit/test_unit_nodes.cpp	/^static struct Nodes_Data_SI* constructor_Nodes_Data_SI (const char eval_type, const char*const node_type)$/;"	f	file:
constructor_Nodes_Data_TP	testing/unit/test_unit_nodes.cpp	/^static struct Nodes_Data_TP* constructor_Nodes_Data_TP (const char eval_type, const char*const node_type)$/;"	f	file:
constructor_Nodes_FC_Data	testing/unit/test_unit_nodes.cpp	/^static struct Nodes_FC_Data* constructor_Nodes_FC_Data (const char eval_type, const char*const node_type)$/;"	f	file:
constructor_Nodes_Info	simulation/test_case/solution/restart/restart_writers.cpp	/^static const struct Nodes_Info* constructor_Nodes_Info (const struct Simulation*const sim)$/;"	f	file:
constructor_Nodes_Sorted_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^const struct Nodes_Sorted_ANN* constructor_Nodes_Sorted_ANN (const struct const_Matrix_d*const nodes_i)$/;"	f
constructor_Nodes_Sorted_ANN_with_trans	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^const struct Nodes_Sorted_ANN* constructor_Nodes_Sorted_ANN_with_trans (struct Matrix_d*const nodes_i)$/;"	f
constructor_Nodes_Sorted_naive	testing/unit/test_unit_approximate_nearest_neighbor.cpp	/^static const struct Nodes_Sorted_ANN* constructor_Nodes_Sorted_naive (const struct const_Matrix_d*const nodes_i)$/;"	f	file:
constructor_Nodes_fptr	element/nodes.h	/^typedef const struct const_Nodes* (*constructor_Nodes_fptr)$/;"	t	typeref:struct:constructor_Nodes_fptr
constructor_Numerical_Flux_Input_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	35;"	d
constructor_Numerical_Flux_Input_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	99;"	d
constructor_Numerical_Flux_Input_T	simulation/solvers/numerical_flux/numerical_flux_T.cpp	/^struct Numerical_Flux_Input_T* constructor_Numerical_Flux_Input_T (const struct Simulation* sim)$/;"	f
constructor_Numerical_Flux_Input_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	33;"	d
constructor_Numerical_Flux_Input_c_data_members	testing/integration/test_integration_support_face.cpp	/^void constructor_Numerical_Flux_Input_c_data_members$/;"	f
constructor_Numerical_Flux_Input_cmplx_step	testing/integration/test_integration_boundary_conditions.cpp	/^static struct Numerical_Flux_Input* constructor_Numerical_Flux_Input_cmplx_step$/;"	f	file:
constructor_Numerical_Flux_Input_data_T	simulation/solvers/compute_face_rlhs_T.cpp	/^void constructor_Numerical_Flux_Input_data_T$/;"	f
constructor_Numerical_Flux_Input_data_T	simulation/solvers/def_templates_compute_face_rlhs.h	34;"	d
constructor_Numerical_Flux_Input_data_T	simulation/solvers/def_templates_compute_face_rlhs.h	65;"	d
constructor_Numerical_Flux_Input_data_T	simulation/solvers/undef_templates_compute_face_rlhs.h	31;"	d
constructor_Numerical_Flux_Input_data_dg_T	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^void constructor_Numerical_Flux_Input_data_dg_T$/;"	f
constructor_Numerical_Flux_Input_data_dg_T	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	27;"	d
constructor_Numerical_Flux_Input_data_dg_T	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	46;"	d
constructor_Numerical_Flux_Input_data_dg_T	simulation/solvers/dg/undef_templates_compute_face_rlhs_dg.h	22;"	d
constructor_Numerical_Flux_Input_data_opg_T	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^static void constructor_Numerical_Flux_Input_data_opg_T$/;"	f	file:
constructor_Numerical_Flux_Input_data_opg_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	44;"	d
constructor_Numerical_Flux_Input_data_opg_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	73;"	d
constructor_Numerical_Flux_Input_data_opg_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	35;"	d
constructor_Numerical_Flux_Input_data_opg_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	39;"	d
constructor_Numerical_Flux_Input_data_with_gradients	testing/integration/test_integration_support_face.cpp	/^void constructor_Numerical_Flux_Input_data_with_gradients$/;"	f
constructor_Numerical_Flux_OPG_T	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^static struct Numerical_Flux_T* constructor_Numerical_Flux_OPG_T$/;"	f	file:
constructor_Numerical_Flux_OPG_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	42;"	d
constructor_Numerical_Flux_OPG_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	71;"	d
constructor_Numerical_Flux_OPG_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	33;"	d
constructor_Numerical_Flux_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	102;"	d
constructor_Numerical_Flux_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	38;"	d
constructor_Numerical_Flux_T	simulation/solvers/numerical_flux/numerical_flux_T.cpp	/^struct Numerical_Flux_T* constructor_Numerical_Flux_T (const struct Numerical_Flux_Input_T* num_flux_i)$/;"	f
constructor_Numerical_Flux_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	36;"	d
constructor_Numerical_Flux_cmplx_step	testing/integration/test_integration_numerical_fluxes.cpp	/^static struct Numerical_Flux* constructor_Numerical_Flux_cmplx_step$/;"	f	file:
constructor_Numerical_Flux_dpg	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static struct Numerical_Flux_T* constructor_Numerical_Flux_dpg$/;"	f	file:
constructor_Numerical_Flux_dpg	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	41;"	d
constructor_Numerical_Flux_dpg	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	83;"	d
constructor_Numerical_Flux_dpg	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	36;"	d
constructor_Numerical_Flux_dpg	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	37;"	d
constructor_Operator_Info	element/element_operators.cpp	/^struct Operator_Info* constructor_Operator_Info$/;"	f
constructor_Periodic_Face	simulation/mesh/mesh_periodic.cpp	/^struct Periodic_Face* constructor_Periodic_Face ()$/;"	f
constructor_Periodic_Face_Info	simulation/mesh/mesh_periodic.cpp	/^static struct Periodic_Face_Info* constructor_Periodic_Face_Info (const ptrdiff_t n_pf)$/;"	f	file:
constructor_Plotting_Nodes_Data	testing/unit/test_unit_nodes.cpp	/^static struct Plotting_Nodes_Data* constructor_Plotting_Nodes_Data (const char eval_type, const char*const node_type)$/;"	f	file:
constructor_SSS_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^static const struct SSS_ANN* constructor_SSS_ANN (const struct Input_ANN*const ann_i)$/;"	f	file:
constructor_SSS_ANN_b	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^void constructor_SSS_ANN_b (const struct Input_ANN*const ann_i, struct SSS_ANN*const sss)$/;"	f
constructor_SSS_ANN_s	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^void constructor_SSS_ANN_s (const struct Input_ANN*const ann_i, struct SSS_ANN*const sss)$/;"	f
constructor_SSS_ANN_xyz	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^void constructor_SSS_ANN_xyz (const struct Input_ANN*const ann_i, struct SSS_ANN*const sss)$/;"	f
constructor_Schur_Data	simulation/solvers/solve_implicit.cpp	/^static struct Schur_Data* constructor_Schur_Data (Mat A, Vec b, const struct Simulation* sim)$/;"	f	file:
constructor_Semi_Norm_DPG_h1_upwind	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static const struct Semi_Norm_DPG* constructor_Semi_Norm_DPG_h1_upwind$/;"	f	file:
constructor_Semi_Norm_DPG_h1_upwind	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	100;"	d
constructor_Semi_Norm_DPG_h1_upwind	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	58;"	d
constructor_Semi_Norm_DPG_h1_upwind	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	53;"	d
constructor_Simulation	simulation/simulation.cpp	/^struct Simulation* constructor_Simulation (const char*const ctrl_name)$/;"	f
constructor_Simulation__no_mesh	simulation/simulation.cpp	/^struct Simulation* constructor_Simulation__no_mesh (const char*const ctrl_name)$/;"	f
constructor_Simulation_c_comp_elems	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static void constructor_Simulation_c_comp_elems$/;"	f	file:
constructor_Simulation_restart	simulation/simulation.cpp	/^struct Simulation* constructor_Simulation_restart (const struct Simulation*const sim_main)$/;"	f
constructor_Solver_Face__nf_coef_T	simulation/test_case/solution/def_templates_solution.h	100;"	d
constructor_Solver_Face__nf_coef_T	simulation/test_case/solution/def_templates_solution.h	45;"	d
constructor_Solver_Face__nf_coef_T	simulation/test_case/solution/solution_T.cpp	/^void constructor_Solver_Face__nf_coef_T$/;"	f
constructor_Solver_Face__nf_coef_T	simulation/test_case/solution/undef_templates_solution.h	44;"	d
constructor_Solver_Face_h_ref	simulation/solvers/adaptation/adaptation.cpp	/^static void constructor_Solver_Face_h_ref$/;"	f	file:
constructor_Solver_Face_i_new	simulation/solvers/adaptation/adaptation.cpp	/^static void constructor_Solver_Face_i_new$/;"	f	file:
constructor_Solver_Storage_Implicit_T	simulation/solvers/def_templates_solve.h	23;"	d
constructor_Solver_Storage_Implicit_T	simulation/solvers/def_templates_solve.h	44;"	d
constructor_Solver_Storage_Implicit_T	simulation/solvers/solve_T.cpp	/^struct Solver_Storage_Implicit* constructor_Solver_Storage_Implicit_T (const struct Simulation* sim)$/;"	f
constructor_Solver_Storage_Implicit_T	simulation/solvers/undef_templates_solve.h	20;"	d
constructor_Solver_Storage_Implicit_dg_S	testing/support/simulation/solvers/dg/test_support_solve_dg.cpp	/^struct Solver_Storage_Implicit* constructor_Solver_Storage_Implicit_dg_S (const struct Simulation*const sim)$/;"	f
constructor_Solver_Storage_Implicit_dpg_S	testing/support/simulation/solvers/dpg/test_support_solve_dpg.cpp	/^struct Solver_Storage_Implicit* constructor_Solver_Storage_Implicit_dpg_S (const struct Simulation*const sim)$/;"	f
constructor_Solver_Volume_exact	simulation/test_case/compute_error/compute_error.cpp	/^static struct Solver_Volume* constructor_Solver_Volume_exact ()$/;"	f	file:
constructor_Solver_Volume_h_ref	simulation/solvers/adaptation/adaptation.cpp	/^static void constructor_Solver_Volume_h_ref$/;"	f	file:
constructor_Test_Case_T	simulation/test_case/def_templates_test_case.h	26;"	d
constructor_Test_Case_T	simulation/test_case/def_templates_test_case.h	50;"	d
constructor_Test_Case_T	simulation/test_case/test_case_T.cpp	/^struct Test_Case_T* constructor_Test_Case_T (const struct Simulation* sim)$/;"	f
constructor_Test_Case_T	simulation/test_case/undef_templates_test_case.h	25;"	d
constructor_Test_Case_rc_real	simulation/test_case/test_case.cpp	/^struct Test_Case_rc* constructor_Test_Case_rc_real (const struct Simulation* sim)$/;"	f
constructor_VDV	simulation/visualization/visualization.cpp	/^static const struct Volume_Data_Vis* constructor_VDV$/;"	f	file:
constructor_Vertex_Correspondence	simulation/computational_elements/face.cpp	/^static struct Vertex_Correspondence* constructor_Vertex_Correspondence$/;"	f	file:
constructor_Volume	simulation/computational_elements/volume.cpp	/^static struct Volume* constructor_Volume$/;"	f	file:
constructor_Volume	testing/support/simulation/computational_elements/test_support_volume.cpp	/^struct Volume* constructor_Volume$/;"	f
constructor_Volume_h_ref	simulation/solvers/adaptation/adaptation.cpp	/^static void constructor_Volume_h_ref$/;"	f	file:
constructor_Volumes	simulation/computational_elements/volume.cpp	/^struct Intrusive_List* constructor_Volumes (struct Simulation*const sim, const struct Mesh*const mesh)$/;"	f
constructor_Volumes_dpg_local	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static struct Intrusive_List* constructor_Volumes_dpg_local$/;"	f	file:
constructor_Volumes_local_centre_only	testing/support/simulation/solvers/test_support_solve.cpp	/^struct Intrusive_List* constructor_Volumes_local_centre_only (const struct Volume*const vol)$/;"	f
constructor_Volumes_local_f	testing/support/simulation/solvers/dpg/test_support_solve_dpg.cpp	/^static struct Intrusive_List* constructor_Volumes_local_f (const struct Face* face)$/;"	f	file:
constructor_Volumes_local_neigh_only	testing/support/simulation/solvers/test_support_solve.cpp	/^struct Intrusive_List* constructor_Volumes_local_neigh_only$/;"	f
constructor_abc_from_rst_pyr	element/bases.cpp	/^const struct const_Matrix_d* constructor_abc_from_rst_pyr (const struct const_Matrix_d*const rst)$/;"	f
constructor_abc_from_rst_si	element/bases.cpp	/^const struct const_Matrix_d* constructor_abc_from_rst_si (const struct const_Matrix_d*const rst)$/;"	f
constructor_ann_indices	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^const struct const_Vector_i* constructor_ann_indices (const struct Input_ANN*const ann_i)$/;"	f
constructor_ann_indices_from_sss	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^const struct const_Vector_i* constructor_ann_indices_from_sss (const struct SSS_ANN*const sss)$/;"	f
constructor_ann_indices_naive	testing/unit/test_unit_approximate_nearest_neighbor.cpp	/^static const struct const_Vector_i* constructor_ann_indices_naive (const struct Input_ANN*const ann_i)$/;"	f	file:
constructor_b_adv_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	34;"	d
constructor_b_adv_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	51;"	d
constructor_b_adv_T	simulation/test_case/solution/advection/solution_advection_T.cpp	/^const struct const_Matrix_R* constructor_b_adv_T$/;"	f
constructor_b_adv_T	simulation/test_case/solution/advection/undef_templates_solution_advection.h	32;"	d
constructor_b_coords	element/nodes_operators.cpp	/^static const struct const_Matrix_d* constructor_b_coords (const int e_type)$/;"	f	file:
constructor_b_faces	simulation/mesh/mesh_connectivity.cpp	/^static struct Boundary_Face** constructor_b_faces (const ptrdiff_t n_bf, struct Boundary_Face**const src)$/;"	f	file:
constructor_base_Intrusive_Link	simulation/computational_elements/computational_elements_T.cpp	/^static struct Intrusive_Link* constructor_base_Intrusive_Link$/;"	f	file:
constructor_base_Intrusive_Link	simulation/computational_elements/def_templates_computational_elements.h	33;"	d
constructor_base_Intrusive_Link	simulation/computational_elements/def_templates_computational_elements.h	53;"	d
constructor_base_Intrusive_Link	simulation/computational_elements/undef_templates_computational_elements.h	30;"	d
constructor_base_const_Intrusive_Link	simulation/computational_elements/computational_elements.cpp	/^static const struct const_Intrusive_Link* constructor_base_const_Intrusive_Link$/;"	f	file:
constructor_basis_fptr	element/bases.h	/^typedef const struct const_Matrix_d* (*constructor_basis_fptr)$/;"	t	typeref:struct:constructor_basis_fptr
constructor_basis_pyr_bezier	element/bases.cpp	/^const struct const_Matrix_d* constructor_basis_pyr_bezier (const int p_b, const struct const_Matrix_d*const rst)$/;"	f
constructor_basis_pyr_bezier_def	testing/support/element/test_support_bases.cpp	/^const struct const_Matrix_d* constructor_basis_pyr_bezier_def$/;"	f
constructor_basis_pyr_orthonormal	element/bases.cpp	/^const struct const_Matrix_d* constructor_basis_pyr_orthonormal (const int p_b, const struct const_Matrix_d*const rst)$/;"	f
constructor_basis_pyr_orthonormal_def	testing/support/element/test_support_bases.cpp	/^const struct const_Matrix_d* constructor_basis_pyr_orthonormal_def$/;"	f
constructor_basis_si_bezier	element/bases.cpp	/^const struct const_Matrix_d* constructor_basis_si_bezier (const int p_b, const struct const_Matrix_d*const rst)$/;"	f
constructor_basis_si_bezier_def	testing/support/element/test_support_bases.cpp	/^const struct const_Matrix_d* constructor_basis_si_bezier_def (const int p_b, const struct const_Matrix_d*const rst)$/;"	f
constructor_basis_si_orthonormal	element/bases.cpp	/^const struct const_Matrix_d* constructor_basis_si_orthonormal (const int p_b, const struct const_Matrix_d*const rst)$/;"	f
constructor_basis_si_orthonormal_def	testing/support/element/test_support_bases.cpp	/^const struct const_Matrix_d* constructor_basis_si_orthonormal_def (const int p_b, const struct const_Matrix_d*const rst)$/;"	f
constructor_basis_std_p1	simulation/test_case/solution/restart/inverse_mapping.cpp	/^const struct const_Matrix_d* constructor_basis_std_p1 (const int e_type, const struct const_Matrix_d*const rst_std)$/;"	f
constructor_basis_tp_bezier	element/bases.cpp	/^const struct const_Matrix_d* constructor_basis_tp_bezier (const int p_b, const struct const_Matrix_d*const rst)$/;"	f
constructor_basis_tp_bezier_def	testing/support/element/test_support_bases.cpp	/^const struct const_Matrix_d* constructor_basis_tp_bezier_def (const int p_b, const struct const_Matrix_d*const rst)$/;"	f
constructor_basis_tp_orthonormal	element/bases.cpp	/^const struct const_Matrix_d* constructor_basis_tp_orthonormal (const int p_b, const struct const_Matrix_d*const rst)$/;"	f
constructor_basis_tp_orthonormal_def	testing/support/element/test_support_bases.cpp	/^const struct const_Matrix_d* constructor_basis_tp_orthonormal_def (const int p_b, const struct const_Matrix_d*const rst)$/;"	f
constructor_bc_edges	simulation/computational_elements/volume.cpp	/^static const struct const_Vector_i* constructor_bc_edges$/;"	f	file:
constructor_bc_edges_h_ref	simulation/solvers/adaptation/adaptation.cpp	/^static const struct const_Vector_i* constructor_bc_edges_h_ref$/;"	f	file:
constructor_bc_faces	simulation/computational_elements/volume.cpp	/^static const struct const_Vector_i* constructor_bc_faces$/;"	f	file:
constructor_bc_faces_h_ref	simulation/solvers/adaptation/adaptation.cpp	/^static const struct const_Vector_i* constructor_bc_faces_h_ref$/;"	f	file:
constructor_bcoords_from_rst_si	element/bases.cpp	/^const struct const_Matrix_d* constructor_bcoords_from_rst_si (const struct const_Matrix_d*const rst)$/;"	f
constructor_blend_values	simulation/geometry/def_templates_geometry_blended.h	38;"	d
constructor_blend_values	simulation/geometry/def_templates_geometry_blended.h	61;"	d
constructor_blend_values	simulation/geometry/geometry_blended_T.cpp	/^static const struct const_Vector_R* constructor_blend_values$/;"	f	file:
constructor_blend_values	simulation/geometry/undef_templates_geometry_blended.h	31;"	d
constructor_block_diagonal_const_Matrix_T	containers/def_templates_matrix_constructors.h	127;"	d
constructor_block_diagonal_const_Matrix_T	containers/def_templates_matrix_constructors.h	55;"	d
constructor_block_diagonal_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_block_diagonal_const_Matrix_T$/;"	f
constructor_block_diagonal_const_Matrix_T	containers/undef_templates_matrix_constructors.h	51;"	d
constructor_cc0_vgc_fgc_indices	simulation/geometry/def_templates_geometry.h	103;"	d
constructor_cc0_vgc_fgc_indices	simulation/geometry/def_templates_geometry.h	60;"	d
constructor_cc0_vgc_fgc_indices	simulation/geometry/geometry_T.cpp	/^static const struct const_Vector_i* constructor_cc0_vgc_fgc_indices$/;"	f	file:
constructor_cc0_vgc_fgc_indices	simulation/geometry/undef_templates_geometry.h	54;"	d
constructor_cc0_vgc_fgc_indices	simulation/solvers/adaptation/adaptation.cpp	/^static const struct const_Vector_i* constructor_cc0_vgc_fgc_indices$/;"	f	file:
constructor_coef_fg_vol	simulation/solvers/adaptation/adaptation.cpp	/^static const struct const_Multiarray_d* constructor_coef_fg_vol$/;"	f	file:
constructor_coef_fg_vol_opp_dom	simulation/solvers/adaptation/adaptation.cpp	/^static const struct const_Multiarray_d* constructor_coef_fg_vol_opp_dom$/;"	f	file:
constructor_coef_fg_vol_specified	simulation/solvers/adaptation/adaptation.cpp	/^static const struct const_Multiarray_d* constructor_coef_fg_vol_specified$/;"	f	file:
constructor_coef_from_val_l2_proj	simulation/test_case/solution/def_templates_solution.h	126;"	d
constructor_coef_from_val_l2_proj	simulation/test_case/solution/def_templates_solution.h	67;"	d
constructor_coef_from_val_l2_proj	simulation/test_case/solution/solution_T.cpp	/^static struct Multiarray_T* constructor_coef_from_val_l2_proj$/;"	f	file:
constructor_coef_from_val_l2_proj	simulation/test_case/solution/undef_templates_solution.h	69;"	d
constructor_const_Nodes_h	element/nodes_operators.cpp	/^const struct const_Nodes* constructor_const_Nodes_h$/;"	f
constructor_const_Nodes_plot	element/nodes.cpp	/^static const struct const_Nodes* constructor_const_Nodes_plot (const int d, const int p, const int s_type)$/;"	f	file:
constructor_const_Nodes_pyr	element/nodes.cpp	/^const struct const_Nodes* constructor_const_Nodes_pyr (const int d, const int p, const int node_type)$/;"	f
constructor_const_Nodes_si	element/nodes.cpp	/^const struct const_Nodes* constructor_const_Nodes_si (const int d, const int p, const int node_type)$/;"	f
constructor_const_Nodes_tet	element/nodes.cpp	/^static const struct const_Nodes* constructor_const_Nodes_tet (const int p, const int node_type)$/;"	f	file:
constructor_const_Nodes_tp	element/nodes.cpp	/^const struct const_Nodes* constructor_const_Nodes_tp (const int d, const int p, const int node_type)$/;"	f
constructor_const_Nodes_tri	element/nodes.cpp	/^static const struct const_Nodes* constructor_const_Nodes_tri (const int p, const int node_type)$/;"	f	file:
constructor_const_Nodes_vertices	element/nodes.cpp	/^const struct const_Nodes* constructor_const_Nodes_vertices (const int d, const int p, const int s_type)$/;"	f
constructor_const_Plotting_Nodes	element/nodes_plotting.cpp	/^const struct const_Plotting_Nodes* constructor_const_Plotting_Nodes (const int p, const int e_type)$/;"	f
constructor_const_Vector_i_inds_eq_1_const_Matrix_d	containers/vector_constructors.cpp	/^const struct const_Vector_i* constructor_const_Vector_i_inds_eq_1_const_Matrix_d (const struct const_Matrix_d*const a)$/;"	f
constructor_const_functionals_cd_cl_reference_constant	simulation/test_case/solution/euler/solution_euler.cpp	/^const struct const_Multiarray_d* constructor_const_functionals_cd_cl_reference_constant$/;"	f
constructor_const_grad_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	26;"	d
constructor_const_grad_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	52;"	d
constructor_const_grad_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^const struct const_Multiarray_T* constructor_const_grad_diffusion_default_steady_T$/;"	f
constructor_const_grad_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	23;"	d
constructor_const_grad_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	26;"	d
constructor_const_grad_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	44;"	d
constructor_const_grad_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^const struct const_Multiarray_T* constructor_const_grad_taylor_couette_T$/;"	f
constructor_const_grad_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/undef_templates_solution_taylor_couette.h	23;"	d
constructor_const_grad_zero_T	simulation/test_case/solution/def_templates_solution.h	102;"	d
constructor_const_grad_zero_T	simulation/test_case/solution/def_templates_solution.h	47;"	d
constructor_const_grad_zero_T	simulation/test_case/solution/solution_T.cpp	/^const struct const_Multiarray_T* constructor_const_grad_zero_T$/;"	f
constructor_const_grad_zero_T	simulation/test_case/solution/undef_templates_solution.h	46;"	d
constructor_const_sol_advection_default_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	24;"	d
constructor_const_sol_advection_default_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	42;"	d
constructor_const_sol_advection_default_T	simulation/test_case/solution/advection/solution_advection_default_T.cpp	/^const struct const_Multiarray_T* constructor_const_sol_advection_default_T$/;"	f
constructor_const_sol_advection_default_T	simulation/test_case/solution/advection/undef_templates_solution_advection_default.h	22;"	d
constructor_const_sol_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	25;"	d
constructor_const_sol_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	51;"	d
constructor_const_sol_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^const struct const_Multiarray_T* constructor_const_sol_diffusion_default_steady_T$/;"	f
constructor_const_sol_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	22;"	d
constructor_const_sol_free_stream_T	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	24;"	d
constructor_const_sol_free_stream_T	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	41;"	d
constructor_const_sol_free_stream_T	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^const struct const_Multiarray_T* constructor_const_sol_free_stream_T$/;"	f
constructor_const_sol_free_stream_T	simulation/test_case/solution/euler/free_stream/undef_templates_solution_free_stream.h	21;"	d
constructor_const_sol_free_stream_advection_T	simulation/test_case/solution/advection/free_stream_advection/def_templates_solution_free_stream_advection.h	24;"	d
constructor_const_sol_free_stream_advection_T	simulation/test_case/solution/advection/free_stream_advection/def_templates_solution_free_stream_advection.h	35;"	d
constructor_const_sol_free_stream_advection_T	simulation/test_case/solution/advection/free_stream_advection/solution_free_stream_advection_T.cpp	/^const struct const_Multiarray_T* constructor_const_sol_free_stream_advection_T$/;"	f
constructor_const_sol_free_stream_advection_T	simulation/test_case/solution/advection/free_stream_advection/undef_templates_solution_free_stream_advection.h	21;"	d
constructor_const_sol_hyperbolic_tan_T	simulation/test_case/solution/advection/hyperbolic_tan/def_templates_solution_hyperbolic_tan.h	24;"	d
constructor_const_sol_hyperbolic_tan_T	simulation/test_case/solution/advection/hyperbolic_tan/def_templates_solution_hyperbolic_tan.h	35;"	d
constructor_const_sol_hyperbolic_tan_T	simulation/test_case/solution/advection/hyperbolic_tan/solution_hyperbolic_tan_T.cpp	/^const struct const_Multiarray_T* constructor_const_sol_hyperbolic_tan_T$/;"	f
constructor_const_sol_hyperbolic_tan_T	simulation/test_case/solution/advection/hyperbolic_tan/undef_templates_solution_hyperbolic_tan.h	21;"	d
constructor_const_sol_invalid_T	simulation/test_case/solution/def_templates_solution.h	33;"	d
constructor_const_sol_invalid_T	simulation/test_case/solution/def_templates_solution.h	88;"	d
constructor_const_sol_invalid_T	simulation/test_case/solution/solution_T.cpp	/^const struct const_Multiarray_T* constructor_const_sol_invalid_T$/;"	f
constructor_const_sol_invalid_T	simulation/test_case/solution/undef_templates_solution.h	32;"	d
constructor_const_sol_periodic_vortex_T	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	23;"	d
constructor_const_sol_periodic_vortex_T	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	39;"	d
constructor_const_sol_periodic_vortex_T	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^const struct const_Multiarray_T* constructor_const_sol_periodic_vortex_T$/;"	f
constructor_const_sol_periodic_vortex_T	simulation/test_case/solution/euler/periodic_vortex/undef_templates_solution_periodic_vortex.h	21;"	d
constructor_const_sol_peterson_T	simulation/test_case/solution/advection/peterson/def_templates_solution_advection_peterson.h	24;"	d
constructor_const_sol_peterson_T	simulation/test_case/solution/advection/peterson/def_templates_solution_advection_peterson.h	35;"	d
constructor_const_sol_peterson_T	simulation/test_case/solution/advection/peterson/solution_peterson_T.cpp	/^const struct const_Multiarray_T* constructor_const_sol_peterson_T$/;"	f
constructor_const_sol_peterson_T	simulation/test_case/solution/advection/peterson/undef_templates_solution_advection_peterson.h	22;"	d
constructor_const_sol_restart_T	simulation/test_case/solution/restart/def_templates_restart.h	27;"	d
constructor_const_sol_restart_T	simulation/test_case/solution/restart/def_templates_restart.h	54;"	d
constructor_const_sol_restart_T	simulation/test_case/solution/restart/restart_T.cpp	/^const struct const_Multiarray_T* constructor_const_sol_restart_T$/;"	f
constructor_const_sol_restart_T	simulation/test_case/solution/restart/undef_templates_restart.h	25;"	d
constructor_const_sol_supersonic_vortex_T	simulation/test_case/solution/euler/supersonic_vortex/def_templates_solution_supersonic_vortex.h	24;"	d
constructor_const_sol_supersonic_vortex_T	simulation/test_case/solution/euler/supersonic_vortex/def_templates_solution_supersonic_vortex.h	38;"	d
constructor_const_sol_supersonic_vortex_T	simulation/test_case/solution/euler/supersonic_vortex/solution_supersonic_vortex_T.cpp	/^const struct const_Multiarray_T* constructor_const_sol_supersonic_vortex_T$/;"	f
constructor_const_sol_supersonic_vortex_T	simulation/test_case/solution/euler/supersonic_vortex/undef_templates_solution_supersonic_vortex.h	21;"	d
constructor_const_sol_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	25;"	d
constructor_const_sol_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	43;"	d
constructor_const_sol_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^const struct const_Multiarray_T* constructor_const_sol_taylor_couette_T$/;"	f
constructor_const_sol_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/undef_templates_solution_taylor_couette.h	22;"	d
constructor_const_sol_trigonometric_T	simulation/test_case/solution/burgers_inviscid/trigonometric/def_templates_solution_trigonometric.h	24;"	d
constructor_const_sol_trigonometric_T	simulation/test_case/solution/burgers_inviscid/trigonometric/def_templates_solution_trigonometric.h	35;"	d
constructor_const_sol_trigonometric_T	simulation/test_case/solution/burgers_inviscid/trigonometric/solution_trigonometric_T.cpp	/^const struct const_Multiarray_T* constructor_const_sol_trigonometric_T$/;"	f
constructor_const_sol_trigonometric_T	simulation/test_case/solution/burgers_inviscid/trigonometric/undef_templates_solution_trigonometric.h	21;"	d
constructor_const_sol_vortex_advection_T	simulation/test_case/solution/advection/vortex_advection/def_templates_solution_vortex_advection.h	24;"	d
constructor_const_sol_vortex_advection_T	simulation/test_case/solution/advection/vortex_advection/def_templates_solution_vortex_advection.h	35;"	d
constructor_const_sol_vortex_advection_T	simulation/test_case/solution/advection/vortex_advection/solution_vortex_advection_T.cpp	/^const struct const_Multiarray_T* constructor_const_sol_vortex_advection_T$/;"	f
constructor_const_sol_vortex_advection_T	simulation/test_case/solution/advection/vortex_advection/undef_templates_solution_vortex_advection.h	21;"	d
constructor_copied_Intrusive_Link	testing/support/simulation/computational_elements/test_support_computational_elements.cpp	/^struct Intrusive_Link* constructor_copied_Intrusive_Link$/;"	f
constructor_copy_Face	simulation/computational_elements/face.cpp	/^struct Face* constructor_copy_Face$/;"	f
constructor_copy_Matrix_R	containers/def_templates_matrix_constructors.h	174;"	d
constructor_copy_Matrix_R	containers/undef_templates_matrix_constructors.h	95;"	d
constructor_copy_Matrix_R_Matrix_T	containers/def_templates_matrix_constructors.h	112;"	d
constructor_copy_Matrix_R_Matrix_T	containers/def_templates_matrix_constructors.h	211;"	d
constructor_copy_Matrix_R_Matrix_T	containers/def_templates_matrix_constructors.h	40;"	d
constructor_copy_Matrix_R_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_R* constructor_copy_Matrix_R_Matrix_T (struct Matrix_T*const src)$/;"	f
constructor_copy_Matrix_R_Matrix_T	containers/undef_templates_matrix_constructors.h	36;"	d
constructor_copy_Matrix_T	containers/def_templates_matrix_constructors.h	102;"	d
constructor_copy_Matrix_T	containers/def_templates_matrix_constructors.h	205;"	d
constructor_copy_Matrix_T	containers/def_templates_matrix_constructors.h	30;"	d
constructor_copy_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_copy_Matrix_T (const struct Matrix_T* src)$/;"	f
constructor_copy_Matrix_T	containers/undef_templates_matrix_constructors.h	26;"	d
constructor_copy_Matrix_T_Matrix_R	containers/def_templates_matrix_constructors.h	110;"	d
constructor_copy_Matrix_T_Matrix_R	containers/def_templates_matrix_constructors.h	209;"	d
constructor_copy_Matrix_T_Matrix_R	containers/def_templates_matrix_constructors.h	38;"	d
constructor_copy_Matrix_T_Matrix_R	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_copy_Matrix_T_Matrix_R (struct Matrix_R* src)$/;"	f
constructor_copy_Matrix_T_Matrix_R	containers/undef_templates_matrix_constructors.h	34;"	d
constructor_copy_Matrix_T_Matrix_R_trans	containers/def_templates_matrix_constructors.h	114;"	d
constructor_copy_Matrix_T_Matrix_R_trans	containers/def_templates_matrix_constructors.h	42;"	d
constructor_copy_Matrix_T_Matrix_R_trans	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_copy_Matrix_T_Matrix_R_trans (struct Matrix_R*const src)$/;"	f
constructor_copy_Matrix_T_Matrix_R_trans	containers/undef_templates_matrix_constructors.h	38;"	d
constructor_copy_Matrix_T_T	containers/def_templates_matrix_constructors.h	105;"	d
constructor_copy_Matrix_T_T	containers/def_templates_matrix_constructors.h	203;"	d
constructor_copy_Matrix_T_T	containers/def_templates_matrix_constructors.h	33;"	d
constructor_copy_Matrix_T_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_copy_Matrix_T_T$/;"	f
constructor_copy_Matrix_T_T	containers/undef_templates_matrix_constructors.h	29;"	d
constructor_copy_Multiarray_R	containers/def_templates_multiarray_constructors.h	162;"	d
constructor_copy_Multiarray_R	containers/undef_templates_multiarray_constructors.h	87;"	d
constructor_copy_Multiarray_T	containers/def_templates_multiarray_constructors.h	109;"	d
constructor_copy_Multiarray_T	containers/def_templates_multiarray_constructors.h	202;"	d
constructor_copy_Multiarray_T	containers/def_templates_multiarray_constructors.h	42;"	d
constructor_copy_Multiarray_T	containers/multiarray_constructors_T.cpp	/^struct Multiarray_T* constructor_copy_Multiarray_T (struct Multiarray_T* src)$/;"	f
constructor_copy_Multiarray_T	containers/undef_templates_multiarray_constructors.h	38;"	d
constructor_copy_Multiarray_T_Multiarray_R	containers/def_templates_multiarray_constructors.h	114;"	d
constructor_copy_Multiarray_T_Multiarray_R	containers/def_templates_multiarray_constructors.h	47;"	d
constructor_copy_Multiarray_T_Multiarray_R	containers/multiarray_constructors_T.cpp	/^struct Multiarray_T* constructor_copy_Multiarray_T_Multiarray_R (const struct Multiarray_R*const src)$/;"	f
constructor_copy_Multiarray_T_Multiarray_R	containers/undef_templates_multiarray_constructors.h	43;"	d
constructor_copy_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	112;"	d
constructor_copy_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	205;"	d
constructor_copy_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	45;"	d
constructor_copy_Multiarray_Vector_T	containers/multiarray_constructors_T.cpp	/^struct Multiarray_Vector_T* constructor_copy_Multiarray_Vector_T (struct Multiarray_Vector_T*const src)$/;"	f
constructor_copy_Multiarray_Vector_T	containers/undef_templates_multiarray_constructors.h	41;"	d
constructor_copy_Multiarray_Vector_T_T	containers/def_templates_multiarray_constructors.h	111;"	d
constructor_copy_Multiarray_Vector_T_T	containers/def_templates_multiarray_constructors.h	204;"	d
constructor_copy_Multiarray_Vector_T_T	containers/def_templates_multiarray_constructors.h	44;"	d
constructor_copy_Multiarray_Vector_T_T	containers/multiarray_constructors_T.cpp	/^struct Multiarray_Vector_T* constructor_copy_Multiarray_Vector_T_T$/;"	f
constructor_copy_Multiarray_Vector_T_T	containers/undef_templates_multiarray_constructors.h	40;"	d
constructor_copy_Vector_T	containers/def_templates_vector_constructors.h	160;"	d
constructor_copy_Vector_T	containers/def_templates_vector_constructors.h	31;"	d
constructor_copy_Vector_T	containers/def_templates_vector_constructors.h	89;"	d
constructor_copy_Vector_T	containers/undef_templates_vector_constructors.h	28;"	d
constructor_copy_Vector_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_copy_Vector_T (const struct Vector_T*const src)$/;"	f
constructor_copy_Vector_T_T	containers/def_templates_vector_constructors.h	162;"	d
constructor_copy_Vector_T_T	containers/def_templates_vector_constructors.h	33;"	d
constructor_copy_Vector_T_T	containers/def_templates_vector_constructors.h	91;"	d
constructor_copy_Vector_T_T	containers/undef_templates_vector_constructors.h	30;"	d
constructor_copy_Vector_T_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_copy_Vector_T_T (const ptrdiff_t ext_0, const Type*const data_src)$/;"	f
constructor_copy_Vector_T_Vector_R	containers/def_templates_vector_constructors.h	35;"	d
constructor_copy_Vector_T_Vector_R	containers/def_templates_vector_constructors.h	93;"	d
constructor_copy_Vector_T_Vector_R	containers/undef_templates_vector_constructors.h	32;"	d
constructor_copy_Vector_T_Vector_R	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_copy_Vector_T_Vector_R (struct Vector_R* src)$/;"	f
constructor_copy_Volume	simulation/computational_elements/volume.cpp	/^struct Volume* constructor_copy_Volume$/;"	f
constructor_copy_const_Matrix_R	containers/def_templates_matrix_constructors.h	175;"	d
constructor_copy_const_Matrix_R	containers/undef_templates_matrix_constructors.h	96;"	d
constructor_copy_const_Matrix_R_Matrix_T	containers/def_templates_matrix_constructors.h	113;"	d
constructor_copy_const_Matrix_R_Matrix_T	containers/def_templates_matrix_constructors.h	212;"	d
constructor_copy_const_Matrix_R_Matrix_T	containers/def_templates_matrix_constructors.h	41;"	d
constructor_copy_const_Matrix_R_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_R* constructor_copy_const_Matrix_R_Matrix_T (const struct const_Matrix_T*const src)$/;"	f
constructor_copy_const_Matrix_R_Matrix_T	containers/undef_templates_matrix_constructors.h	37;"	d
constructor_copy_const_Matrix_T	containers/def_templates_matrix_constructors.h	107;"	d
constructor_copy_const_Matrix_T	containers/def_templates_matrix_constructors.h	206;"	d
constructor_copy_const_Matrix_T	containers/def_templates_matrix_constructors.h	35;"	d
constructor_copy_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_copy_const_Matrix_T (const struct const_Matrix_T*const src)$/;"	f
constructor_copy_const_Matrix_T	containers/undef_templates_matrix_constructors.h	31;"	d
constructor_copy_const_Matrix_T_Matrix_R	containers/def_templates_matrix_constructors.h	111;"	d
constructor_copy_const_Matrix_T_Matrix_R	containers/def_templates_matrix_constructors.h	210;"	d
constructor_copy_const_Matrix_T_Matrix_R	containers/def_templates_matrix_constructors.h	39;"	d
constructor_copy_const_Matrix_T_Matrix_R	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_copy_const_Matrix_T_Matrix_R (const struct const_Matrix_R* src)$/;"	f
constructor_copy_const_Matrix_T_Matrix_R	containers/undef_templates_matrix_constructors.h	35;"	d
constructor_copy_const_Matrix_T_Matrix_R_trans	containers/def_templates_matrix_constructors.h	115;"	d
constructor_copy_const_Matrix_T_Matrix_R_trans	containers/def_templates_matrix_constructors.h	43;"	d
constructor_copy_const_Matrix_T_Matrix_R_trans	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_copy_const_Matrix_T_Matrix_R_trans (const struct const_Matrix_R*const src)$/;"	f
constructor_copy_const_Matrix_T_Matrix_R_trans	containers/undef_templates_matrix_constructors.h	39;"	d
constructor_copy_const_Matrix_T_T	containers/def_templates_matrix_constructors.h	106;"	d
constructor_copy_const_Matrix_T_T	containers/def_templates_matrix_constructors.h	204;"	d
constructor_copy_const_Matrix_T_T	containers/def_templates_matrix_constructors.h	34;"	d
constructor_copy_const_Matrix_T_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_copy_const_Matrix_T_T$/;"	f
constructor_copy_const_Matrix_T_T	containers/undef_templates_matrix_constructors.h	30;"	d
constructor_copy_const_Multiarray_R	containers/def_templates_multiarray_constructors.h	163;"	d
constructor_copy_const_Multiarray_R	containers/undef_templates_multiarray_constructors.h	88;"	d
constructor_copy_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	110;"	d
constructor_copy_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	203;"	d
constructor_copy_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	43;"	d
constructor_copy_const_Multiarray_T	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_T* constructor_copy_const_Multiarray_T (const struct const_Multiarray_T*const src)$/;"	f
constructor_copy_const_Multiarray_T	containers/undef_templates_multiarray_constructors.h	39;"	d
constructor_copy_const_Multiarray_T_Multiarray_R	containers/def_templates_multiarray_constructors.h	115;"	d
constructor_copy_const_Multiarray_T_Multiarray_R	containers/def_templates_multiarray_constructors.h	48;"	d
constructor_copy_const_Multiarray_T_Multiarray_R	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_T* constructor_copy_const_Multiarray_T_Multiarray_R$/;"	f
constructor_copy_const_Multiarray_T_Multiarray_R	containers/undef_templates_multiarray_constructors.h	44;"	d
constructor_copy_const_Vector_R_R	containers/def_templates_vector_constructors.h	136;"	d
constructor_copy_const_Vector_R_R	containers/undef_templates_vector_constructors.h	78;"	d
constructor_copy_const_Vector_T	containers/def_templates_vector_constructors.h	161;"	d
constructor_copy_const_Vector_T	containers/def_templates_vector_constructors.h	32;"	d
constructor_copy_const_Vector_T	containers/def_templates_vector_constructors.h	90;"	d
constructor_copy_const_Vector_T	containers/undef_templates_vector_constructors.h	29;"	d
constructor_copy_const_Vector_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_copy_const_Vector_T (const struct const_Vector_T*const src)$/;"	f
constructor_copy_const_Vector_T_T	containers/def_templates_vector_constructors.h	163;"	d
constructor_copy_const_Vector_T_T	containers/def_templates_vector_constructors.h	34;"	d
constructor_copy_const_Vector_T_T	containers/def_templates_vector_constructors.h	92;"	d
constructor_copy_const_Vector_T_T	containers/undef_templates_vector_constructors.h	31;"	d
constructor_copy_const_Vector_T_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_copy_const_Vector_T_T (const ptrdiff_t ext_0, const Type*const data_src)$/;"	f
constructor_copy_const_Vector_T_Vector_R	containers/def_templates_vector_constructors.h	36;"	d
constructor_copy_const_Vector_T_Vector_R	containers/def_templates_vector_constructors.h	94;"	d
constructor_copy_const_Vector_T_Vector_R	containers/undef_templates_vector_constructors.h	33;"	d
constructor_copy_const_Vector_T_Vector_R	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_copy_const_Vector_T_Vector_R (const struct const_Vector_R* src)$/;"	f
constructor_copy_extract_const_Matrix_T	containers/def_templates_matrix_constructors.h	108;"	d
constructor_copy_extract_const_Matrix_T	containers/def_templates_matrix_constructors.h	207;"	d
constructor_copy_extract_const_Matrix_T	containers/def_templates_matrix_constructors.h	36;"	d
constructor_copy_extract_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_copy_extract_const_Matrix_T$/;"	f
constructor_copy_extract_const_Matrix_T	containers/undef_templates_matrix_constructors.h	32;"	d
constructor_copy_permute_Matrix_R	containers/def_templates_matrix_constructors.h	176;"	d
constructor_copy_permute_Matrix_R	containers/undef_templates_matrix_constructors.h	97;"	d
constructor_copy_permute_Matrix_T	containers/def_templates_matrix_constructors.h	116;"	d
constructor_copy_permute_Matrix_T	containers/def_templates_matrix_constructors.h	44;"	d
constructor_copy_permute_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_copy_permute_Matrix_T$/;"	f
constructor_copy_permute_Matrix_T	containers/undef_templates_matrix_constructors.h	40;"	d
constructor_copy_permute_const_Matrix_R	containers/def_templates_matrix_constructors.h	177;"	d
constructor_copy_permute_const_Matrix_R	containers/undef_templates_matrix_constructors.h	98;"	d
constructor_copy_permute_const_Matrix_T	containers/def_templates_matrix_constructors.h	117;"	d
constructor_copy_permute_const_Matrix_T	containers/def_templates_matrix_constructors.h	45;"	d
constructor_copy_permute_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_copy_permute_const_Matrix_T$/;"	f
constructor_copy_permute_const_Matrix_T	containers/undef_templates_matrix_constructors.h	41;"	d
constructor_copy_scale_Matrix_T	containers/def_templates_matrix_constructors.h	103;"	d
constructor_copy_scale_Matrix_T	containers/def_templates_matrix_constructors.h	31;"	d
constructor_copy_scale_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_copy_scale_Matrix_T (const struct Matrix_T*const src, const Type scale)$/;"	f
constructor_copy_scale_Matrix_T	containers/undef_templates_matrix_constructors.h	27;"	d
constructor_copy_scale_const_Matrix_T	containers/def_templates_matrix_constructors.h	104;"	d
constructor_copy_scale_const_Matrix_T	containers/def_templates_matrix_constructors.h	32;"	d
constructor_copy_scale_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_copy_scale_const_Matrix_T$/;"	f
constructor_copy_scale_const_Matrix_T	containers/undef_templates_matrix_constructors.h	28;"	d
constructor_copy_transpose_Matrix_T	containers/def_templates_matrix_constructors.h	126;"	d
constructor_copy_transpose_Matrix_T	containers/def_templates_matrix_constructors.h	54;"	d
constructor_copy_transpose_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_copy_transpose_Matrix_T (struct Matrix_T* a, const bool mem_only)$/;"	f
constructor_copy_transpose_Matrix_T	containers/undef_templates_matrix_constructors.h	50;"	d
constructor_copy_transpose_const_Matrix_d	testing/support/containers/test_support_matrix.cpp	/^const struct const_Matrix_d* constructor_copy_transpose_const_Matrix_d$/;"	f
constructor_cv	element/element_operators.cpp	/^static const struct const_Matrix_d* constructor_cv$/;"	f	file:
constructor_default_Matrix_R	containers/def_templates_matrix_constructors.h	167;"	d
constructor_default_Matrix_R	containers/undef_templates_matrix_constructors.h	88;"	d
constructor_default_Matrix_T	containers/def_templates_matrix_constructors.h	198;"	d
constructor_default_Matrix_T	containers/def_templates_matrix_constructors.h	23;"	d
constructor_default_Matrix_T	containers/def_templates_matrix_constructors.h	95;"	d
constructor_default_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_default_Matrix_T ()$/;"	f
constructor_default_Matrix_T	containers/undef_templates_matrix_constructors.h	19;"	d
constructor_default_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	183;"	d
constructor_default_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	25;"	d
constructor_default_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	92;"	d
constructor_default_Multiarray_Matrix_T	containers/multiarray_constructors_T.cpp	/^struct Multiarray_Matrix_T* constructor_default_Multiarray_Matrix_T ()$/;"	f
constructor_default_Multiarray_Matrix_T	containers/undef_templates_multiarray_constructors.h	21;"	d
constructor_default_Multiarray_Operator	simulation/operators/multiarray_operator.cpp	/^const struct Multiarray_Operator* constructor_default_Multiarray_Operator ()$/;"	f
constructor_default_Multiarray_R	containers/def_templates_multiarray_constructors.h	157;"	d
constructor_default_Multiarray_R	containers/undef_templates_multiarray_constructors.h	83;"	d
constructor_default_Multiarray_T	containers/def_templates_multiarray_constructors.h	181;"	d
constructor_default_Multiarray_T	containers/def_templates_multiarray_constructors.h	23;"	d
constructor_default_Multiarray_T	containers/def_templates_multiarray_constructors.h	90;"	d
constructor_default_Multiarray_T	containers/multiarray_constructors_T.cpp	/^struct Multiarray_T* constructor_default_Multiarray_T ()$/;"	f
constructor_default_Multiarray_T	containers/undef_templates_multiarray_constructors.h	19;"	d
constructor_default_Vector_T	containers/def_templates_vector_constructors.h	152;"	d
constructor_default_Vector_T	containers/def_templates_vector_constructors.h	23;"	d
constructor_default_Vector_T	containers/def_templates_vector_constructors.h	81;"	d
constructor_default_Vector_T	containers/undef_templates_vector_constructors.h	20;"	d
constructor_default_Vector_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_default_Vector_T ()$/;"	f
constructor_default_Vector_T_2	containers/def_templates_vector_constructors.h	154;"	d
constructor_default_Vector_T_2	containers/def_templates_vector_constructors.h	25;"	d
constructor_default_Vector_T_2	containers/def_templates_vector_constructors.h	83;"	d
constructor_default_Vector_T_2	containers/undef_templates_vector_constructors.h	22;"	d
constructor_default_Vector_T_2	containers/vector_constructors_T.cpp	/^struct Vector_T** constructor_default_Vector_T_2 (const ptrdiff_t n_dest)$/;"	f
constructor_default_const_Matrix_R	containers/def_templates_matrix_constructors.h	168;"	d
constructor_default_const_Matrix_R	containers/undef_templates_matrix_constructors.h	89;"	d
constructor_default_const_Matrix_T	containers/def_templates_matrix_constructors.h	199;"	d
constructor_default_const_Matrix_T	containers/def_templates_matrix_constructors.h	24;"	d
constructor_default_const_Matrix_T	containers/def_templates_matrix_constructors.h	96;"	d
constructor_default_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_default_const_Matrix_T ()$/;"	f
constructor_default_const_Matrix_T	containers/undef_templates_matrix_constructors.h	20;"	d
constructor_default_const_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	184;"	d
constructor_default_const_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	26;"	d
constructor_default_const_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	93;"	d
constructor_default_const_Multiarray_Matrix_T	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_Matrix_T* constructor_default_const_Multiarray_Matrix_T ()$/;"	f
constructor_default_const_Multiarray_Matrix_T	containers/undef_templates_multiarray_constructors.h	22;"	d
constructor_default_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	182;"	d
constructor_default_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	24;"	d
constructor_default_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	91;"	d
constructor_default_const_Multiarray_T	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_T* constructor_default_const_Multiarray_T ()$/;"	f
constructor_default_const_Multiarray_T	containers/undef_templates_multiarray_constructors.h	20;"	d
constructor_default_const_Vector_T	containers/def_templates_vector_constructors.h	153;"	d
constructor_default_const_Vector_T	containers/def_templates_vector_constructors.h	24;"	d
constructor_default_const_Vector_T	containers/def_templates_vector_constructors.h	82;"	d
constructor_default_const_Vector_T	containers/undef_templates_vector_constructors.h	21;"	d
constructor_default_const_Vector_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_default_const_Vector_T ()$/;"	f
constructor_derived_Adaptation_Element	simulation/solvers/adaptation/element_adaptation.cpp	/^void constructor_derived_Adaptation_Element (struct Element* element_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_Adaptation_Element_common	simulation/solvers/adaptation/element_adaptation.cpp	/^static void constructor_derived_Adaptation_Element_common (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Adaptation_Element_std	simulation/solvers/adaptation/element_adaptation.cpp	/^static void constructor_derived_Adaptation_Element_std (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Adaptation_Element_tp	simulation/solvers/adaptation/element_adaptation.cpp	/^static void constructor_derived_Adaptation_Element_tp (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Adaptive_Solver_Face	simulation/solvers/adaptation/face_solver_adaptive.cpp	/^void constructor_derived_Adaptive_Solver_Face (struct Face* face_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_Adaptive_Solver_Volume	simulation/solvers/adaptation/volume_solver_adaptive.cpp	/^void constructor_derived_Adaptive_Solver_Volume (struct Volume* volume_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_DG_Solver_Element	simulation/solvers/dg/element_solver_dg.cpp	/^void constructor_derived_DG_Solver_Element (struct Element* element_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_DG_Solver_Element_std	simulation/solvers/dg/element_solver_dg.cpp	/^static void constructor_derived_DG_Solver_Element_std (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_DG_Solver_Element_tp	simulation/solvers/dg/element_solver_dg.cpp	/^static void constructor_derived_DG_Solver_Element_tp (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_DG_Solver_Face_T	simulation/solvers/dg/def_templates_face_solver_dg.h	28;"	d
constructor_derived_DG_Solver_Face_T	simulation/solvers/dg/def_templates_face_solver_dg.h	40;"	d
constructor_derived_DG_Solver_Face_T	simulation/solvers/dg/face_solver_dg_T.cpp	/^void constructor_derived_DG_Solver_Face_T (struct Face* face_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_DG_Solver_Face_T	simulation/solvers/dg/undef_templates_face_solver_dg.h	28;"	d
constructor_derived_DG_Solver_Volume_T	simulation/solvers/dg/def_templates_volume_solver_dg.h	27;"	d
constructor_derived_DG_Solver_Volume_T	simulation/solvers/dg/def_templates_volume_solver_dg.h	43;"	d
constructor_derived_DG_Solver_Volume_T	simulation/solvers/dg/undef_templates_volume_solver_dg.h	25;"	d
constructor_derived_DG_Solver_Volume_T	simulation/solvers/dg/volume_solver_dg_T.cpp	/^void constructor_derived_DG_Solver_Volume_T (struct Volume* volume_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_DPG_Solver_Element	simulation/solvers/dpg/element_solver_dpg.cpp	/^void constructor_derived_DPG_Solver_Element (struct Element* element_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_DPG_Solver_Element_common	simulation/solvers/dpg/element_solver_dpg.cpp	/^static void constructor_derived_DPG_Solver_Element_common (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_DPG_Solver_Element_std	simulation/solvers/dpg/element_solver_dpg.cpp	/^static void constructor_derived_DPG_Solver_Element_std (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_DPG_Solver_Element_tp	simulation/solvers/dpg/element_solver_dpg.cpp	/^static void constructor_derived_DPG_Solver_Element_tp (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_DPG_Solver_Face_T	simulation/solvers/dpg/def_templates_face_solver_dpg.h	27;"	d
constructor_derived_DPG_Solver_Face_T	simulation/solvers/dpg/def_templates_face_solver_dpg.h	38;"	d
constructor_derived_DPG_Solver_Face_T	simulation/solvers/dpg/face_solver_dpg_T.cpp	/^void constructor_derived_DPG_Solver_Face_T (struct Face* face_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_DPG_Solver_Face_T	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	25;"	d
constructor_derived_DPG_Solver_Volume_T	simulation/solvers/dpg/def_templates_volume_solver_dpg.h	27;"	d
constructor_derived_DPG_Solver_Volume_T	simulation/solvers/dpg/def_templates_volume_solver_dpg.h	43;"	d
constructor_derived_DPG_Solver_Volume_T	simulation/solvers/dpg/undef_templates_volume_solver_dpg.h	25;"	d
constructor_derived_DPG_Solver_Volume_T	simulation/solvers/dpg/volume_solver_dpg_T.cpp	/^void constructor_derived_DPG_Solver_Volume_T (struct Volume* volume_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_Element	simulation/computational_elements/computational_elements.cpp	/^	constructor_derived_Element_fptr constructor_derived_Element; \/\/\/< \\ref constructor_derived_Element_fptr.$/;"	m	struct:Derived_Elements_Info	file:
constructor_derived_Element_fptr	simulation/computational_elements/computational_elements.h	/^typedef void (*constructor_derived_Element_fptr)$/;"	t
constructor_derived_Elements	simulation/computational_elements/computational_elements.cpp	/^void constructor_derived_Elements (struct Simulation* sim, const int derived_name)$/;"	f
constructor_derived_Face	simulation/computational_elements/computational_elements_T.cpp	/^	constructor_derived_Face_fptr   constructor_derived_Face;   \/\/\/< \\ref constructor_derived_Face_fptr.$/;"	m	struct:Derived_Comp_Elements_Info	file:
constructor_derived_Face_fptr	simulation/computational_elements/computational_elements_T.cpp	/^typedef void (*constructor_derived_Face_fptr)$/;"	t	file:
constructor_derived_Geometry_Element	simulation/geometry/element_geometry.cpp	/^void constructor_derived_Geometry_Element (struct Element* element_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_Geometry_Element_common	simulation/geometry/element_geometry.cpp	/^static void constructor_derived_Geometry_Element_common (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Geometry_Element_std	simulation/geometry/element_geometry.cpp	/^static void constructor_derived_Geometry_Element_std (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Geometry_Element_tp	simulation/geometry/element_geometry.cpp	/^static void constructor_derived_Geometry_Element_tp (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Intrusive_Link	simulation/computational_elements/computational_elements.cpp	/^struct Intrusive_Link* constructor_derived_Intrusive_Link$/;"	f
constructor_derived_OPG_Solver_Element	simulation/solvers/opg/element_solver_opg.cpp	/^void constructor_derived_OPG_Solver_Element (struct Element* element_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_OPG_Solver_Element_common	simulation/solvers/opg/element_solver_opg.cpp	/^static void constructor_derived_OPG_Solver_Element_common (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_OPG_Solver_Element_std	simulation/solvers/opg/element_solver_opg.cpp	/^static void constructor_derived_OPG_Solver_Element_std (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_OPG_Solver_Element_tp	simulation/solvers/opg/element_solver_opg.cpp	/^static void constructor_derived_OPG_Solver_Element_tp (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_OPG_Solver_Face_T	simulation/solvers/opg/def_templates_face_solver_opg.h	33;"	d
constructor_derived_OPG_Solver_Face_T	simulation/solvers/opg/def_templates_face_solver_opg.h	57;"	d
constructor_derived_OPG_Solver_Face_T	simulation/solvers/opg/face_solver_opg_T.cpp	/^void constructor_derived_OPG_Solver_Face_T (struct Face* face_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_OPG_Solver_Face_T	simulation/solvers/opg/undef_templates_face_solver_opg.h	29;"	d
constructor_derived_OPG_Solver_Volume_T	simulation/solvers/opg/def_templates_volume_solver_opg.h	29;"	d
constructor_derived_OPG_Solver_Volume_T	simulation/solvers/opg/def_templates_volume_solver_opg.h	43;"	d
constructor_derived_OPG_Solver_Volume_T	simulation/solvers/opg/undef_templates_volume_solver_opg.h	27;"	d
constructor_derived_OPG_Solver_Volume_T	simulation/solvers/opg/volume_solver_opg_T.cpp	/^void constructor_derived_OPG_Solver_Volume_T (struct Volume* volume_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_Plotting_Element	simulation/visualization/element_plotting.cpp	/^void constructor_derived_Plotting_Element (struct Element* element_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_Plotting_Element_std	simulation/visualization/element_plotting.cpp	/^static void constructor_derived_Plotting_Element_std (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Plotting_Element_tp	simulation/visualization/element_plotting.cpp	/^static void constructor_derived_Plotting_Element_tp (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Solution_Element	simulation/test_case/solution/element_solution.cpp	/^void constructor_derived_Solution_Element (struct Element* element_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_Solution_Element_common	simulation/test_case/solution/element_solution.cpp	/^static void constructor_derived_Solution_Element_common (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Solution_Element_std	simulation/test_case/solution/element_solution.cpp	/^static void constructor_derived_Solution_Element_std (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Solution_Element_tp	simulation/test_case/solution/element_solution.cpp	/^static void constructor_derived_Solution_Element_tp (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Solver_Element	simulation/solvers/element_solver.cpp	/^void constructor_derived_Solver_Element (struct Element* element_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_Solver_Element_common	simulation/solvers/element_solver.cpp	/^static void constructor_derived_Solver_Element_common (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Solver_Element_std	simulation/solvers/element_solver.cpp	/^static void constructor_derived_Solver_Element_std (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Solver_Element_tp	simulation/solvers/element_solver.cpp	/^static void constructor_derived_Solver_Element_tp (struct Element* element_ptr, const struct Simulation* sim)$/;"	f	file:
constructor_derived_Solver_Face_T	simulation/solvers/def_templates_face_solver.h	27;"	d
constructor_derived_Solver_Face_T	simulation/solvers/def_templates_face_solver.h	50;"	d
constructor_derived_Solver_Face_T	simulation/solvers/face_solver_T.cpp	/^void constructor_derived_Solver_Face_T (struct Face* face_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_Solver_Face_T	simulation/solvers/undef_templates_face_solver.h	24;"	d
constructor_derived_Solver_Volume_T	simulation/solvers/def_templates_volume_solver.h	27;"	d
constructor_derived_Solver_Volume_T	simulation/solvers/def_templates_volume_solver.h	54;"	d
constructor_derived_Solver_Volume_T	simulation/solvers/undef_templates_solver.h	25;"	d
constructor_derived_Solver_Volume_T	simulation/solvers/undef_templates_volume_solver.h	25;"	d
constructor_derived_Solver_Volume_T	simulation/solvers/volume_solver_T.cpp	/^void constructor_derived_Solver_Volume_T (struct Volume* volume_ptr, const struct Simulation* sim)$/;"	f
constructor_derived_Volume	simulation/computational_elements/computational_elements_T.cpp	/^	constructor_derived_Volume_fptr constructor_derived_Volume; \/\/\/< \\ref constructor_derived_Volume_fptr.$/;"	m	struct:Derived_Comp_Elements_Info	file:
constructor_derived_Volume_fptr	simulation/computational_elements/computational_elements_T.cpp	/^typedef void (*constructor_derived_Volume_fptr)$/;"	t	file:
constructor_derived_computational_elements_T	simulation/computational_elements/computational_elements_T.cpp	/^void constructor_derived_computational_elements_T (struct Simulation* sim, const int derived_category)$/;"	f
constructor_derived_computational_elements_T	simulation/computational_elements/def_templates_computational_elements.h	22;"	d
constructor_derived_computational_elements_T	simulation/computational_elements/def_templates_computational_elements.h	42;"	d
constructor_derived_computational_elements_T	simulation/computational_elements/undef_templates_computational_elements.h	21;"	d
constructor_derived_const_Intrusive_Link	simulation/computational_elements/computational_elements.cpp	/^static const struct const_Intrusive_Link* constructor_derived_const_Intrusive_Link$/;"	f	file:
constructor_derived_elements_comp_elements	simulation/solvers/solve_implicit.cpp	/^static void constructor_derived_elements_comp_elements (struct Simulation* sim)$/;"	f	file:
constructor_diagonal_Matrix_T_T	containers/def_templates_matrix_constructors.h	128;"	d
constructor_diagonal_Matrix_T_T	containers/def_templates_matrix_constructors.h	56;"	d
constructor_diagonal_Matrix_T_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_diagonal_Matrix_T_T (const char layout, const ptrdiff_t ext_0, const Type val)$/;"	f
constructor_diagonal_Matrix_T_T	containers/undef_templates_matrix_constructors.h	52;"	d
constructor_diff_s_num_s	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static const struct const_Matrix_T* constructor_diff_s_num_s$/;"	f	file:
constructor_diff_s_num_s	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	32;"	d
constructor_diff_s_num_s	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	57;"	d
constructor_diff_s_num_s	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	29;"	d
constructor_dlhs_ds_v_1	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static struct Matrix_d* constructor_dlhs_ds_v_1$/;"	f	file:
constructor_dot_mult_const_Vector_R	containers/def_templates_vector_constructors.h	139;"	d
constructor_dot_mult_const_Vector_R	containers/undef_templates_vector_constructors.h	81;"	d
constructor_dot_mult_const_Vector_T	containers/def_templates_vector_constructors.h	108;"	d
constructor_dot_mult_const_Vector_T	containers/def_templates_vector_constructors.h	50;"	d
constructor_dot_mult_const_Vector_T	containers/undef_templates_vector_constructors.h	47;"	d
constructor_dot_mult_const_Vector_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_dot_mult_const_Vector_T$/;"	f
constructor_dot_mult_const_Vector_T_RT	containers/def_templates_vector_constructors.h	109;"	d
constructor_dot_mult_const_Vector_T_RT	containers/def_templates_vector_constructors.h	51;"	d
constructor_dot_mult_const_Vector_T_RT	containers/undef_templates_vector_constructors.h	48;"	d
constructor_dot_mult_const_Vector_T_RT	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_dot_mult_const_Vector_T_RT$/;"	f
constructor_dot_mult_inverse_2nd_const_Vector_T	containers/def_templates_vector_constructors.h	110;"	d
constructor_dot_mult_inverse_2nd_const_Vector_T	containers/def_templates_vector_constructors.h	52;"	d
constructor_dot_mult_inverse_2nd_const_Vector_T	containers/undef_templates_vector_constructors.h	49;"	d
constructor_dot_mult_inverse_2nd_const_Vector_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_dot_mult_inverse_2nd_const_Vector_T$/;"	f
constructor_empty_Boundary_Face	simulation/mesh/mesh_connectivity.cpp	/^static struct Boundary_Face* constructor_empty_Boundary_Face (struct Boundary_Face* src)$/;"	f	file:
constructor_empty_IL	intrusive/intrusive.cpp	/^struct Intrusive_List* constructor_empty_IL (const int list_name, struct Intrusive_List* base)$/;"	f
constructor_empty_Matrix_R	containers/def_templates_matrix_constructors.h	170;"	d
constructor_empty_Matrix_R	containers/undef_templates_matrix_constructors.h	91;"	d
constructor_empty_Matrix_T	containers/def_templates_matrix_constructors.h	201;"	d
constructor_empty_Matrix_T	containers/def_templates_matrix_constructors.h	26;"	d
constructor_empty_Matrix_T	containers/def_templates_matrix_constructors.h	98;"	d
constructor_empty_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_empty_Matrix_T (const char layout, const ptrdiff_t ext_0, const ptrdiff_t ext_1)$/;"	f
constructor_empty_Matrix_T	containers/undef_templates_matrix_constructors.h	22;"	d
constructor_empty_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	101;"	d
constructor_empty_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	194;"	d
constructor_empty_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	34;"	d
constructor_empty_Multiarray_Matrix_T	containers/multiarray_constructors_T.cpp	/^struct Multiarray_Matrix_T* constructor_empty_Multiarray_Matrix_T$/;"	f
constructor_empty_Multiarray_Matrix_T	containers/undef_templates_multiarray_constructors.h	30;"	d
constructor_empty_Multiarray_Matrix_T_V	containers/def_templates_multiarray_constructors.h	103;"	d
constructor_empty_Multiarray_Matrix_T_V	containers/def_templates_multiarray_constructors.h	196;"	d
constructor_empty_Multiarray_Matrix_T_V	containers/def_templates_multiarray_constructors.h	36;"	d
constructor_empty_Multiarray_Matrix_T_V	containers/multiarray_constructors_T.cpp	/^struct Multiarray_Matrix_T* constructor_empty_Multiarray_Matrix_T_V$/;"	f
constructor_empty_Multiarray_Matrix_T_V	containers/undef_templates_multiarray_constructors.h	32;"	d
constructor_empty_Multiarray_Operator	simulation/operators/multiarray_operator.cpp	/^const struct Multiarray_Operator* constructor_empty_Multiarray_Operator$/;"	f
constructor_empty_Multiarray_Operator_V	simulation/operators/multiarray_operator.cpp	/^const struct Multiarray_Operator* constructor_empty_Multiarray_Operator_V$/;"	f
constructor_empty_Multiarray_R	containers/def_templates_multiarray_constructors.h	159;"	d
constructor_empty_Multiarray_R	containers/undef_templates_multiarray_constructors.h	85;"	d
constructor_empty_Multiarray_T	containers/def_templates_multiarray_constructors.h	186;"	d
constructor_empty_Multiarray_T	containers/def_templates_multiarray_constructors.h	28;"	d
constructor_empty_Multiarray_T	containers/def_templates_multiarray_constructors.h	95;"	d
constructor_empty_Multiarray_T	containers/multiarray_constructors_T.cpp	/^struct Multiarray_T* constructor_empty_Multiarray_T$/;"	f
constructor_empty_Multiarray_T	containers/undef_templates_multiarray_constructors.h	24;"	d
constructor_empty_Multiarray_T_dyn_extents	containers/def_templates_multiarray_constructors.h	187;"	d
constructor_empty_Multiarray_T_dyn_extents	containers/def_templates_multiarray_constructors.h	30;"	d
constructor_empty_Multiarray_T_dyn_extents	containers/def_templates_multiarray_constructors.h	97;"	d
constructor_empty_Multiarray_T_dyn_extents	containers/multiarray_constructors_T.cpp	/^struct Multiarray_T* constructor_empty_Multiarray_T_dyn_extents$/;"	f
constructor_empty_Multiarray_T_dyn_extents	containers/undef_templates_multiarray_constructors.h	26;"	d
constructor_empty_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	188;"	d
constructor_empty_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	191;"	d
constructor_empty_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	31;"	d
constructor_empty_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	98;"	d
constructor_empty_Multiarray_Vector_T	containers/multiarray_constructors_T.cpp	/^struct Multiarray_Vector_T* constructor_empty_Multiarray_Vector_T$/;"	f
constructor_empty_Multiarray_Vector_T	containers/undef_templates_multiarray_constructors.h	27;"	d
constructor_empty_Vector_T	containers/def_templates_vector_constructors.h	156;"	d
constructor_empty_Vector_T	containers/def_templates_vector_constructors.h	27;"	d
constructor_empty_Vector_T	containers/def_templates_vector_constructors.h	85;"	d
constructor_empty_Vector_T	containers/undef_templates_vector_constructors.h	24;"	d
constructor_empty_Vector_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_empty_Vector_T (const ptrdiff_t ext_0)$/;"	f
constructor_empty_const_IL	intrusive/intrusive.cpp	/^const struct const_Intrusive_List* constructor_empty_const_IL$/;"	f
constructor_empty_const_Matrix_R	containers/def_templates_matrix_constructors.h	171;"	d
constructor_empty_const_Matrix_R	containers/undef_templates_matrix_constructors.h	92;"	d
constructor_empty_const_Matrix_T	containers/def_templates_matrix_constructors.h	27;"	d
constructor_empty_const_Matrix_T	containers/def_templates_matrix_constructors.h	99;"	d
constructor_empty_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_empty_const_Matrix_T$/;"	f
constructor_empty_const_Matrix_T	containers/undef_templates_matrix_constructors.h	23;"	d
constructor_empty_const_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	102;"	d
constructor_empty_const_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	195;"	d
constructor_empty_const_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	35;"	d
constructor_empty_const_Multiarray_Matrix_T	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_Matrix_T* constructor_empty_const_Multiarray_Matrix_T$/;"	f
constructor_empty_const_Multiarray_Matrix_T	containers/undef_templates_multiarray_constructors.h	31;"	d
constructor_empty_const_Multiarray_Matrix_T_V	containers/def_templates_multiarray_constructors.h	104;"	d
constructor_empty_const_Multiarray_Matrix_T_V	containers/def_templates_multiarray_constructors.h	197;"	d
constructor_empty_const_Multiarray_Matrix_T_V	containers/def_templates_multiarray_constructors.h	37;"	d
constructor_empty_const_Multiarray_Matrix_T_V	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_Matrix_T* constructor_empty_const_Multiarray_Matrix_T_V$/;"	f
constructor_empty_const_Multiarray_Matrix_T_V	containers/undef_templates_multiarray_constructors.h	33;"	d
constructor_empty_const_Multiarray_R	containers/def_templates_multiarray_constructors.h	160;"	d
constructor_empty_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	29;"	d
constructor_empty_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	96;"	d
constructor_empty_const_Multiarray_T	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_T* constructor_empty_const_Multiarray_T$/;"	f
constructor_empty_const_Multiarray_T	containers/undef_templates_multiarray_constructors.h	25;"	d
constructor_empty_const_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	189;"	d
constructor_empty_const_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	192;"	d
constructor_empty_const_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	32;"	d
constructor_empty_const_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	99;"	d
constructor_empty_const_Multiarray_Vector_T	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_Vector_T* constructor_empty_const_Multiarray_Vector_T$/;"	f
constructor_empty_const_Multiarray_Vector_T	containers/undef_templates_multiarray_constructors.h	28;"	d
constructor_empty_const_Multiarray_Vector_T_V	containers/def_templates_multiarray_constructors.h	100;"	d
constructor_empty_const_Multiarray_Vector_T_V	containers/def_templates_multiarray_constructors.h	190;"	d
constructor_empty_const_Multiarray_Vector_T_V	containers/def_templates_multiarray_constructors.h	193;"	d
constructor_empty_const_Multiarray_Vector_T_V	containers/def_templates_multiarray_constructors.h	33;"	d
constructor_empty_const_Multiarray_Vector_T_V	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_Vector_T* constructor_empty_const_Multiarray_Vector_T_V$/;"	f
constructor_empty_const_Multiarray_Vector_T_V	containers/undef_templates_multiarray_constructors.h	29;"	d
constructor_f_geom_coef_p1	simulation/geometry/def_templates_geometry.h	102;"	d
constructor_f_geom_coef_p1	simulation/geometry/def_templates_geometry.h	59;"	d
constructor_f_geom_coef_p1	simulation/geometry/geometry_T.cpp	/^static const struct const_Multiarray_T* constructor_f_geom_coef_p1$/;"	f	file:
constructor_f_geom_coef_p1	simulation/geometry/undef_templates_geometry.h	53;"	d
constructor_f_rst	testing/support/element/test_support_bases.cpp	/^static const struct const_Multiarray_d* constructor_f_rst (const struct const_Matrix_d* rst)$/;"	f	file:
constructor_face_corr	element/nodes_correspondence.cpp	/^static const struct const_Vector_i* constructor_face_corr$/;"	f	file:
constructor_faces_h_coarse	simulation/solvers/adaptation/adaptation.cpp	/^static void constructor_faces_h_coarse$/;"	f	file:
constructor_faces_h_refine	simulation/solvers/adaptation/adaptation.cpp	/^static void constructor_faces_h_refine$/;"	f	file:
constructor_file_Input_ANN	testing/unit/test_unit_approximate_nearest_neighbor.cpp	/^static const struct Input_ANN* constructor_file_Input_ANN (const char*const data_name)$/;"	f	file:
constructor_file_Inv_Map_Data	testing/unit/test_unit_inverse_mapping.cpp	/^static const struct Inv_Map_Data* constructor_file_Inv_Map_Data (const char*const data_name)$/;"	f	file:
constructor_file_Matrix_d	testing/support/containers/test_support_matrix.cpp	/^struct Matrix_d* constructor_file_Matrix_d (FILE* data_file, const bool check_container)$/;"	f
constructor_file_Matrix_i	testing/support/containers/test_support_matrix.cpp	/^struct Matrix_i* constructor_file_Matrix_i (FILE* data_file, const bool check_container)$/;"	f
constructor_file_Multiarray_Matrix_d	testing/support/containers/test_support_multiarray.cpp	/^static struct Multiarray_Matrix_d* constructor_file_Multiarray_Matrix_d (FILE* data_file)$/;"	f	file:
constructor_file_Multiarray_Vector_i	testing/support/containers/test_support_multiarray.cpp	/^struct Multiarray_Vector_i* constructor_file_Multiarray_Vector_i (FILE* data_file)$/;"	f
constructor_file_Multiarray_d	testing/support/containers/test_support_multiarray.cpp	/^struct Multiarray_d* constructor_file_Multiarray_d (FILE* data_file, const bool check_container)$/;"	f
constructor_file_Nodes	testing/support/element/test_support_nodes.cpp	/^static struct Nodes* constructor_file_Nodes (FILE* data_file)$/;"	f	file:
constructor_file_Plotting_Nodes	testing/support/element/test_support_nodes.cpp	/^static struct Plotting_Nodes* constructor_file_Plotting_Nodes (FILE* data_file)$/;"	f	file:
constructor_file_Solver_Face	testing/support/simulation/computational_elements/test_support_face.cpp	/^void constructor_file_Solver_Face (FILE* file, char* line, struct Face* face_ptr)$/;"	f
constructor_file_Vector_T	containers/def_templates_vector_constructors.h	174;"	d
constructor_file_Vector_T	containers/def_templates_vector_constructors.h	69;"	d
constructor_file_Vector_T	containers/undef_templates_vector_constructors.h	66;"	d
constructor_file_Vector_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_file_Vector_T (FILE* data_file, const bool check_container)$/;"	f
constructor_file_const_Multiarray_d	testing/support/containers/test_support_multiarray.cpp	/^const struct const_Multiarray_d* constructor_file_const_Multiarray_d (FILE* data_file, const bool check_container)$/;"	f
constructor_file_const_Vector_T	containers/def_templates_vector_constructors.h	175;"	d
constructor_file_const_Vector_T	containers/def_templates_vector_constructors.h	70;"	d
constructor_file_const_Vector_T	containers/undef_templates_vector_constructors.h	67;"	d
constructor_file_const_Vector_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_file_const_Vector_T (FILE* data_file, const bool check_container)$/;"	f
constructor_file_name_IL	testing/support/intrusive/test_support_intrusive.cpp	/^struct Intrusive_List* constructor_file_name_IL$/;"	f
constructor_file_name_Matrix_d	testing/support/containers/test_support_matrix.cpp	/^struct Matrix_d* constructor_file_name_Matrix_d (const char*const var_name, const char*const file_name_full)$/;"	f
constructor_file_name_Matrix_i	testing/support/containers/test_support_matrix.cpp	/^struct Matrix_i* constructor_file_name_Matrix_i (const char*const var_name, const char*const file_name_full)$/;"	f
constructor_file_name_Multiarray_Vector_i	testing/support/containers/test_support_multiarray.cpp	/^struct Multiarray_Vector_i* constructor_file_name_Multiarray_Vector_i$/;"	f
constructor_file_name_Multiarray_d	testing/support/containers/test_support_multiarray.cpp	/^struct Multiarray_d* constructor_file_name_Multiarray_d$/;"	f
constructor_file_name_Nodes	testing/support/element/test_support_nodes.cpp	/^static struct Nodes* constructor_file_name_Nodes (const char*const var_name, const char*const file_name_full)$/;"	f	file:
constructor_file_name_Plotting_Nodes	testing/support/element/test_support_nodes.cpp	/^struct Plotting_Nodes* constructor_file_name_Plotting_Nodes (const char*const var_name, const char*const file_name_full)$/;"	f
constructor_file_name_Vector_T	containers/def_templates_vector_constructors.h	172;"	d
constructor_file_name_Vector_T	containers/def_templates_vector_constructors.h	67;"	d
constructor_file_name_Vector_T	containers/undef_templates_vector_constructors.h	64;"	d
constructor_file_name_Vector_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_file_name_Vector_T (const char*const var_name, const char*const file_name_full)$/;"	f
constructor_file_name_const_Matrix_d	testing/support/containers/test_support_matrix.cpp	/^const struct const_Matrix_d* constructor_file_name_const_Matrix_d$/;"	f
constructor_file_name_const_Matrix_i	testing/support/containers/test_support_matrix.cpp	/^const struct const_Matrix_i* constructor_file_name_const_Matrix_i$/;"	f
constructor_file_name_const_Multiarray_Matrix_d	testing/support/containers/test_support_multiarray.cpp	/^const struct const_Multiarray_Matrix_d* constructor_file_name_const_Multiarray_Matrix_d$/;"	f
constructor_file_name_const_Multiarray_Vector_i	testing/support/containers/test_support_multiarray.cpp	/^const struct const_Multiarray_Vector_i* constructor_file_name_const_Multiarray_Vector_i$/;"	f
constructor_file_name_const_Multiarray_d	testing/support/containers/test_support_multiarray.cpp	/^const struct const_Multiarray_d* constructor_file_name_const_Multiarray_d$/;"	f
constructor_file_name_const_Nodes	testing/support/element/test_support_nodes.cpp	/^const struct const_Nodes* constructor_file_name_const_Nodes$/;"	f
constructor_file_name_const_Plotting_Nodes	testing/support/element/test_support_nodes.cpp	/^const struct const_Plotting_Nodes* constructor_file_name_const_Plotting_Nodes$/;"	f
constructor_file_name_const_Vector_T	containers/def_templates_vector_constructors.h	173;"	d
constructor_file_name_const_Vector_T	containers/def_templates_vector_constructors.h	68;"	d
constructor_file_name_const_Vector_T	containers/undef_templates_vector_constructors.h	65;"	d
constructor_file_name_const_Vector_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_file_name_const_Vector_T$/;"	f
constructor_file_name_derived_Faces	testing/support/intrusive/test_support_intrusive.cpp	/^void constructor_file_name_derived_Faces (struct Intrusive_List* faces, const char*const file_name)$/;"	f
constructor_flux_ref_T	simulation/solvers/def_templates_compute_volume_rlhs.h	51;"	d
constructor_flux_ref_T	simulation/solvers/def_templates_compute_volume_rlhs.h	87;"	d
constructor_flux_ref_T	simulation/solvers/undef_templates_compute_volume_rlhs.h	50;"	d
constructor_flux_ref_piece_T	simulation/solvers/compute_rlhs_T.cpp	/^static const struct const_Multiarray_T* constructor_flux_ref_piece_T$/;"	f	file:
constructor_flux_ref_piece_T	simulation/solvers/def_templates_compute_rlhs.h	31;"	d
constructor_flux_ref_piece_T	simulation/solvers/def_templates_compute_rlhs.h	46;"	d
constructor_flux_ref_piece_T	simulation/solvers/undef_templates_compute_rlhs.h	25;"	d
constructor_g	testing/integration/test_integration_fluxes.cpp	/^static const struct const_Multiarray_d* constructor_g (const int index, const struct Simulation*const sim)$/;"	f	file:
constructor_g_fc_interp	simulation/test_case/boundary/undef_templates_boundary.h	64;"	d
constructor_g_fc_interp_T	simulation/test_case/boundary/boundary_T.cpp	/^const struct const_Multiarray_T* constructor_g_fc_interp_T (const int side_index, const struct Solver_Face_T*const s_face)$/;"	f
constructor_g_fc_interp_T	simulation/test_case/boundary/def_templates_boundary.h	109;"	d
constructor_g_fc_interp_T	simulation/test_case/boundary/def_templates_boundary.h	42;"	d
constructor_g_fc_interp_T	simulation/test_case/boundary/undef_templates_boundary.h	42;"	d
constructor_geom_coef_ho_T	simulation/geometry/def_templates_geometry.h	37;"	d
constructor_geom_coef_ho_T	simulation/geometry/def_templates_geometry.h	80;"	d
constructor_geom_coef_ho_T	simulation/geometry/geometry_T.cpp	/^const struct const_Multiarray_T* constructor_geom_coef_ho_T$/;"	f
constructor_geom_coef_ho_T	simulation/geometry/undef_templates_geometry.h	33;"	d
constructor_geom_fg	simulation/solvers/adaptation/adaptation.cpp	/^const struct const_Multiarray_d* constructor_geom_fg$/;"	f
constructor_grad	simulation/test_case/test_case_T.h	/^	constructor_sol_fptr_T constructor_grad; \/\/\/< Pointer to the function used to construct the solution gradient.$/;"	m	struct:Test_Case_T
constructor_grad_basis_fptr	element/bases.h	/^typedef const struct const_Multiarray_Matrix_d* (*constructor_grad_basis_fptr)$/;"	t	typeref:struct:constructor_grad_basis_fptr
constructor_grad_basis_pyr_bezier	element/bases.cpp	/^const struct const_Multiarray_Matrix_d* constructor_grad_basis_pyr_bezier$/;"	f
constructor_grad_basis_pyr_bezier_def	testing/support/element/test_support_bases.cpp	/^const struct const_Multiarray_Matrix_d* constructor_grad_basis_pyr_bezier_def$/;"	f
constructor_grad_basis_pyr_orthonormal	element/bases.cpp	/^const struct const_Multiarray_Matrix_d* constructor_grad_basis_pyr_orthonormal$/;"	f
constructor_grad_basis_pyr_orthonormal_def	testing/support/element/test_support_bases.cpp	/^const struct const_Multiarray_Matrix_d* constructor_grad_basis_pyr_orthonormal_def$/;"	f
constructor_grad_basis_si_bezier	element/bases.cpp	/^const struct const_Multiarray_Matrix_d* constructor_grad_basis_si_bezier$/;"	f
constructor_grad_basis_si_bezier_def	testing/support/element/test_support_bases.cpp	/^const struct const_Multiarray_Matrix_d* constructor_grad_basis_si_bezier_def$/;"	f
constructor_grad_basis_si_orthonormal	element/bases.cpp	/^const struct const_Multiarray_Matrix_d* constructor_grad_basis_si_orthonormal$/;"	f
constructor_grad_basis_si_orthonormal_def	testing/support/element/test_support_bases.cpp	/^const struct const_Multiarray_Matrix_d* constructor_grad_basis_si_orthonormal_def$/;"	f
constructor_grad_basis_tp_bezier	element/bases.cpp	/^const struct const_Multiarray_Matrix_d* constructor_grad_basis_tp_bezier$/;"	f
constructor_grad_basis_tp_bezier_def	testing/support/element/test_support_bases.cpp	/^const struct const_Multiarray_Matrix_d* constructor_grad_basis_tp_bezier_def$/;"	f
constructor_grad_basis_tp_orthonormal	element/bases.cpp	/^const struct const_Multiarray_Matrix_d* constructor_grad_basis_tp_orthonormal$/;"	f
constructor_grad_basis_tp_orthonormal_def	testing/support/element/test_support_bases.cpp	/^const struct const_Multiarray_Matrix_d* constructor_grad_basis_tp_orthonormal_def$/;"	f
constructor_grad_bv	simulation/test_case/boundary/boundary_diffusion_T.cpp	/^static const struct const_Multiarray_T* constructor_grad_bv$/;"	f	file:
constructor_grad_bv	simulation/test_case/boundary/def_templates_boundary.h	131;"	d
constructor_grad_bv	simulation/test_case/boundary/def_templates_boundary.h	64;"	d
constructor_grad_bv	simulation/test_case/boundary/undef_templates_boundary.h	65;"	d
constructor_grad_diffusion_default_steady	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	33;"	d
constructor_grad_diffusion_default_steady	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	59;"	d
constructor_grad_diffusion_default_steady	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^static struct Multiarray_T* constructor_grad_diffusion_default_steady$/;"	f	file:
constructor_grad_diffusion_default_steady	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	28;"	d
constructor_grad_diffusion_default_steady_1d	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	36;"	d
constructor_grad_diffusion_default_steady_1d	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	62;"	d
constructor_grad_diffusion_default_steady_1d	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^static struct Multiarray_T* constructor_grad_diffusion_default_steady_1d$/;"	f	file:
constructor_grad_diffusion_default_steady_1d	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	31;"	d
constructor_grad_diffusion_default_steady_2d	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	39;"	d
constructor_grad_diffusion_default_steady_2d	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	65;"	d
constructor_grad_diffusion_default_steady_2d	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^static struct Multiarray_T* constructor_grad_diffusion_default_steady_2d$/;"	f	file:
constructor_grad_diffusion_default_steady_2d	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	34;"	d
constructor_grad_f_rst	testing/support/element/test_support_bases.cpp	/^static const struct const_Multiarray_d* constructor_grad_f_rst (const struct const_Matrix_d* rst)$/;"	f	file:
constructor_grad_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	31;"	d
constructor_grad_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	49;"	d
constructor_grad_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^static struct Multiarray_T* constructor_grad_taylor_couette$/;"	f	file:
constructor_grad_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/undef_templates_solution_taylor_couette.h	26;"	d
constructor_grad_vals_computation	testing/support/element/test_support_bases.cpp	/^const struct const_Multiarray_d* constructor_grad_vals_computation$/;"	f
constructor_grad_vals_computation_def	testing/support/element/test_support_bases.cpp	/^const struct const_Multiarray_d* constructor_grad_vals_computation_def$/;"	f
constructor_grad_vc	simulation/solvers/compute_volume_rlhs_T.h	/^	constructor_sol_vc_fptr_T constructor_grad_vc; \/\/\/< Pointer to the appropriate function.$/;"	m	struct:S_Params_Volume_Structor_T
constructor_grad_vc_col	simulation/solvers/compute_volume_rlhs_T.cpp	/^static const struct const_Multiarray_T* constructor_grad_vc_col (const struct Solver_Volume_T*const s_vol)$/;"	f	file:
constructor_grad_vc_col	simulation/solvers/def_templates_compute_volume_rlhs.h	46;"	d
constructor_grad_vc_col	simulation/solvers/def_templates_compute_volume_rlhs.h	82;"	d
constructor_grad_vc_col	simulation/solvers/undef_templates_compute_volume_rlhs.h	44;"	d
constructor_grad_vc_interp	simulation/solvers/compute_volume_rlhs_T.cpp	/^static const struct const_Multiarray_T* constructor_grad_vc_interp (const struct Solver_Volume_T*const s_vol)$/;"	f	file:
constructor_grad_vc_interp	simulation/solvers/def_templates_compute_volume_rlhs.h	44;"	d
constructor_grad_vc_interp	simulation/solvers/def_templates_compute_volume_rlhs.h	80;"	d
constructor_grad_vc_interp	simulation/solvers/undef_templates_compute_volume_rlhs.h	42;"	d
constructor_grad_vs_T	simulation/solvers/opg/compute_volume_rlhs_opg_T.cpp	/^static const struct const_Multiarray_T* constructor_grad_vs_T (const struct Solver_Volume_T*const s_vol)$/;"	f	file:
constructor_grad_vs_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	34;"	d
constructor_grad_vs_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	53;"	d
constructor_grad_vs_T	simulation/solvers/opg/undef_templates_compute_volume_rlhs_opg.h	30;"	d
constructor_grad_xyz_p	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static const struct const_Matrix_T* constructor_grad_xyz_p$/;"	f	file:
constructor_grad_xyz_p	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	30;"	d
constructor_grad_xyz_p	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	55;"	d
constructor_grad_xyz_p	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	27;"	d
constructor_identity_Matrix_T	containers/def_templates_matrix_constructors.h	129;"	d
constructor_identity_Matrix_T	containers/def_templates_matrix_constructors.h	57;"	d
constructor_identity_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_identity_Matrix_T (const char layout, const ptrdiff_t ext_0)$/;"	f
constructor_identity_Matrix_T	containers/undef_templates_matrix_constructors.h	53;"	d
constructor_identity_const_Matrix_T	containers/def_templates_matrix_constructors.h	130;"	d
constructor_identity_const_Matrix_T	containers/def_templates_matrix_constructors.h	58;"	d
constructor_identity_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_identity_const_Matrix_T (const char layout, const ptrdiff_t ext_0)$/;"	f
constructor_identity_const_Matrix_T	containers/undef_templates_matrix_constructors.h	54;"	d
constructor_ind_h_b_coords	element/nodes_operators.cpp	/^static const struct const_Vector_i* constructor_ind_h_b_coords$/;"	f	file:
constructor_indices_Vector_i	element/element_operators.cpp	/^const struct const_Vector_i* constructor_indices_Vector_i$/;"	f
constructor_indices_vol_background	simulation/test_case/solution/restart/def_templates_restart.h	34;"	d
constructor_indices_vol_background	simulation/test_case/solution/restart/def_templates_restart.h	61;"	d
constructor_indices_vol_background	simulation/test_case/solution/restart/restart_T.cpp	/^static const struct const_Vector_i* constructor_indices_vol_background$/;"	f	file:
constructor_indices_vol_background	simulation/test_case/solution/restart/undef_templates_restart.h	31;"	d
constructor_inverse_Matrix_T	containers/def_templates_matrix_constructors.h	131;"	d
constructor_inverse_Matrix_T	containers/def_templates_matrix_constructors.h	59;"	d
constructor_inverse_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_inverse_Matrix_T (struct Matrix_T* src)$/;"	f
constructor_inverse_Matrix_T	containers/undef_templates_matrix_constructors.h	55;"	d
constructor_inverse_Vector_T	containers/def_templates_vector_constructors.h	106;"	d
constructor_inverse_Vector_T	containers/def_templates_vector_constructors.h	48;"	d
constructor_inverse_Vector_T	containers/undef_templates_vector_constructors.h	45;"	d
constructor_inverse_Vector_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_inverse_Vector_T (const struct const_Vector_T* src)$/;"	f
constructor_inverse_const_Matrix_R	containers/def_templates_matrix_constructors.h	182;"	d
constructor_inverse_const_Matrix_R	containers/undef_templates_matrix_constructors.h	103;"	d
constructor_inverse_const_Matrix_T	containers/def_templates_matrix_constructors.h	132;"	d
constructor_inverse_const_Matrix_T	containers/def_templates_matrix_constructors.h	60;"	d
constructor_inverse_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_inverse_const_Matrix_T (const struct const_Matrix_T* src)$/;"	f
constructor_inverse_const_Matrix_T	containers/undef_templates_matrix_constructors.h	56;"	d
constructor_inverse_const_Vector_R	containers/def_templates_vector_constructors.h	138;"	d
constructor_inverse_const_Vector_R	containers/undef_templates_vector_constructors.h	80;"	d
constructor_inverse_const_Vector_T	containers/def_templates_vector_constructors.h	107;"	d
constructor_inverse_const_Vector_T	containers/def_templates_vector_constructors.h	49;"	d
constructor_inverse_const_Vector_T	containers/undef_templates_vector_constructors.h	46;"	d
constructor_inverse_const_Vector_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_inverse_const_Vector_T (const struct const_Vector_T* src)$/;"	f
constructor_inverse_mapping	simulation/test_case/solution/restart/inverse_mapping.cpp	/^const struct const_Matrix_d* constructor_inverse_mapping$/;"	f
constructor_inverse_mapping_mutable	simulation/test_case/solution/restart/inverse_mapping.cpp	/^struct Matrix_d* constructor_inverse_mapping_mutable$/;"	f
constructor_inverse_mass_T	simulation/solvers/def_templates_volume_solver.h	31;"	d
constructor_inverse_mass_T	simulation/solvers/def_templates_volume_solver.h	58;"	d
constructor_inverse_mass_T	simulation/solvers/undef_templates_solver.h	29;"	d
constructor_inverse_mass_T	simulation/solvers/undef_templates_volume_solver.h	29;"	d
constructor_inverse_mass_T	simulation/solvers/volume_solver_T.cpp	/^const struct const_Matrix_T* constructor_inverse_mass_T$/;"	f
constructor_inverse_mass_face_T	simulation/solvers/opg/def_templates_face_solver_opg.h	40;"	d
constructor_inverse_mass_face_T	simulation/solvers/opg/def_templates_face_solver_opg.h	64;"	d
constructor_inverse_mass_face_T	simulation/solvers/opg/face_solver_opg_T.cpp	/^static const struct const_Matrix_T* constructor_inverse_mass_face_T$/;"	f	file:
constructor_inverse_mass_face_T	simulation/solvers/opg/undef_templates_face_solver_opg.h	35;"	d
constructor_jdet_n_diff_fc	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static const struct const_Matrix_T*const* constructor_jdet_n_diff_fc$/;"	f	file:
constructor_jdet_n_diff_fc	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	33;"	d
constructor_jdet_n_diff_fc	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	58;"	d
constructor_jdet_n_diff_fc	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	30;"	d
constructor_jump_test_s_fc_T	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^static const struct const_Multiarray_T* constructor_jump_test_s_fc_T$/;"	f	file:
constructor_jump_test_s_fc_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	45;"	d
constructor_jump_test_s_fc_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	74;"	d
constructor_jump_test_s_fc_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	37;"	d
constructor_l2_proj_operator_s_T	simulation/solvers/def_templates_volume_solver.h	32;"	d
constructor_l2_proj_operator_s_T	simulation/solvers/def_templates_volume_solver.h	59;"	d
constructor_l2_proj_operator_s_T	simulation/solvers/undef_templates_volume_solver.h	30;"	d
constructor_l2_proj_operator_s_T	simulation/solvers/volume_solver_T.cpp	/^const struct const_Matrix_T* constructor_l2_proj_operator_s_T$/;"	f
constructor_l_mult_M	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static const struct const_Matrix_T* constructor_l_mult_M$/;"	f	file:
constructor_l_mult_M	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	56;"	d
constructor_l_mult_M	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	98;"	d
constructor_l_mult_M	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	51;"	d
constructor_l_mult_M	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	51;"	d
constructor_lhs_f_1_T	simulation/solvers/compute_face_rlhs_T.cpp	/^struct Matrix_T* constructor_lhs_f_1_T$/;"	f
constructor_lhs_f_1_T	simulation/solvers/def_templates_compute_face_rlhs.h	36;"	d
constructor_lhs_f_1_T	simulation/solvers/def_templates_compute_face_rlhs.h	67;"	d
constructor_lhs_f_1_T	simulation/solvers/undef_templates_compute_face_rlhs.h	33;"	d
constructor_lhs_f_1_b	simulation/solvers/opg/compute_face_rlhs_opg.cpp	/^static const struct const_Matrix_d* constructor_lhs_f_1_b$/;"	f	file:
constructor_lhs_f_1_b_l	simulation/solvers/opg/compute_face_rlhs_opg.cpp	/^static const struct const_Matrix_d* constructor_lhs_f_1_b_l$/;"	f	file:
constructor_lhs_f_1_b_r	simulation/solvers/opg/compute_face_rlhs_opg.cpp	/^static const struct const_Matrix_d* constructor_lhs_f_1_b_r$/;"	f	file:
constructor_lhs_l_internal_face_dpg_T	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^const struct const_Matrix_T* constructor_lhs_l_internal_face_dpg_T$/;"	f
constructor_lhs_l_internal_face_dpg_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	23;"	d
constructor_lhs_l_internal_face_dpg_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	65;"	d
constructor_lhs_l_internal_face_dpg_T	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	20;"	d
constructor_lhs_p_f_2_T	simulation/solvers/compute_face_rlhs_T.cpp	/^struct Matrix_T* constructor_lhs_p_f_2_T$/;"	f
constructor_lhs_p_f_2_T	simulation/solvers/def_templates_compute_face_rlhs.h	37;"	d
constructor_lhs_p_f_2_T	simulation/solvers/def_templates_compute_face_rlhs.h	68;"	d
constructor_lhs_p_f_2_T	simulation/solvers/undef_templates_compute_face_rlhs.h	34;"	d
constructor_lhs_p_r_gs	simulation/solvers/dg/compute_face_rlhs_dg.cpp	/^static const struct const_Matrix_d* constructor_lhs_p_r_gs$/;"	f	file:
constructor_lhs_p_r_internal	simulation/solvers/dg/compute_volume_rlhs_dg.cpp	/^static const struct const_Matrix_d* constructor_lhs_p_r_internal (const struct DG_Solver_Volume*const dg_s_vol)$/;"	f	file:
constructor_lhs_p_v_2_T	simulation/solvers/compute_volume_rlhs_T.cpp	/^struct Matrix_T* constructor_lhs_p_v_2_T$/;"	f
constructor_lhs_p_v_2_T	simulation/solvers/def_templates_compute_volume_rlhs.h	38;"	d
constructor_lhs_p_v_2_T	simulation/solvers/def_templates_compute_volume_rlhs.h	74;"	d
constructor_lhs_p_v_2_T	simulation/solvers/undef_templates_compute_volume_rlhs.h	37;"	d
constructor_lhs_v_1_T	simulation/solvers/compute_volume_rlhs_T.cpp	/^struct Matrix_T* constructor_lhs_v_1_T (const struct Flux_Ref_T*const flux_r, const struct Solver_Volume_T*const s_vol)$/;"	f
constructor_lhs_v_1_T	simulation/solvers/def_templates_compute_volume_rlhs.h	37;"	d
constructor_lhs_v_1_T	simulation/solvers/def_templates_compute_volume_rlhs.h	73;"	d
constructor_lhs_v_1_T	simulation/solvers/undef_templates_compute_volume_rlhs.h	36;"	d
constructor_lhs_v_1_opg	simulation/solvers/opg/compute_volume_rlhs_opg.cpp	/^static const struct const_Matrix_d* constructor_lhs_v_1_opg$/;"	f	file:
constructor_m_inv_tw0_vt_fc	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static const struct const_Matrix_T* constructor_m_inv_tw0_vt_fc$/;"	f	file:
constructor_m_inv_tw0_vt_fc	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	40;"	d
constructor_m_inv_tw0_vt_fc	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	65;"	d
constructor_m_inv_tw0_vt_fc	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	37;"	d
constructor_mass	element/element_operators.cpp	/^static const struct const_Matrix_d* constructor_mass$/;"	f	file:
constructor_mass_T	simulation/solvers/def_templates_volume_solver.h	30;"	d
constructor_mass_T	simulation/solvers/def_templates_volume_solver.h	57;"	d
constructor_mass_T	simulation/solvers/undef_templates_solver.h	28;"	d
constructor_mass_T	simulation/solvers/undef_templates_volume_solver.h	28;"	d
constructor_mass_T	simulation/solvers/volume_solver_T.cpp	/^const struct const_Matrix_T* constructor_mass_T (const struct Solver_Volume_T* s_vol)$/;"	f
constructor_mass_face_T	simulation/solvers/def_templates_face_solver.h	31;"	d
constructor_mass_face_T	simulation/solvers/def_templates_face_solver.h	54;"	d
constructor_mass_face_T	simulation/solvers/face_solver_T.cpp	/^const struct const_Matrix_T* constructor_mass_face_T (const struct Solver_Face_T*const s_face)$/;"	f
constructor_mass_face_T	simulation/solvers/undef_templates_face_solver.h	28;"	d
constructor_mass_orthonormal	testing/support/element/test_support_bases.cpp	/^const struct const_Matrix_d* constructor_mass_orthonormal (const int d, const int p_b, const int super_type)$/;"	f
constructor_mass_orthonormal_def	testing/support/element/test_support_bases.cpp	/^const struct const_Matrix_d* constructor_mass_orthonormal_def (const int d, const int p_b, const int super_type)$/;"	f
constructor_matches_Vector_i_Matrix_d	simulation/computational_elements/face.cpp	/^static struct Vector_i* constructor_matches_Vector_i_Matrix_d$/;"	f	file:
constructor_metrics_ff	simulation/test_case/solution/def_templates_solution.h	124;"	d
constructor_metrics_ff	simulation/test_case/solution/def_templates_solution.h	65;"	d
constructor_metrics_ff	simulation/test_case/solution/solution_T.cpp	/^static const struct const_Multiarray_T* constructor_metrics_ff (const struct Solver_Face_T* s_face)$/;"	f	file:
constructor_metrics_ff	simulation/test_case/solution/undef_templates_solution.h	67;"	d
constructor_mm_Matrix_R	containers/def_templates_matrix_constructors.h	183;"	d
constructor_mm_Matrix_R	containers/undef_templates_matrix_constructors.h	104;"	d
constructor_mm_Matrix_T	containers/def_templates_matrix_constructors.h	137;"	d
constructor_mm_Matrix_T	containers/def_templates_matrix_constructors.h	65;"	d
constructor_mm_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_mm_Matrix_T$/;"	f
constructor_mm_Matrix_T	containers/undef_templates_matrix_constructors.h	61;"	d
constructor_mm_NN1C_Matrix_T	containers/def_templates_matrix_constructors.h	145;"	d
constructor_mm_NN1C_Matrix_T	containers/def_templates_matrix_constructors.h	73;"	d
constructor_mm_NN1C_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_mm_NN1C_Matrix_T$/;"	f
constructor_mm_NN1C_Matrix_T	containers/undef_templates_matrix_constructors.h	69;"	d
constructor_mm_NN1C_Multiarray_T	containers/def_templates_multiarray_constructors.h	135;"	d
constructor_mm_NN1C_Multiarray_T	containers/def_templates_multiarray_constructors.h	68;"	d
constructor_mm_NN1C_Multiarray_T	containers/multiarray_constructors_T.cpp	/^struct Multiarray_T* constructor_mm_NN1C_Multiarray_T$/;"	f
constructor_mm_NN1C_Multiarray_T	containers/undef_templates_multiarray_constructors.h	64;"	d
constructor_mm_NN1C_Multiarray_TT	containers/def_templates_multiarray_constructors.h	137;"	d
constructor_mm_NN1C_Multiarray_TT	containers/def_templates_multiarray_constructors.h	70;"	d
constructor_mm_NN1C_Multiarray_TT	containers/multiarray_constructors_T.cpp	/^struct Multiarray_T* constructor_mm_NN1C_Multiarray_TT$/;"	f
constructor_mm_NN1C_Multiarray_TT	containers/undef_templates_multiarray_constructors.h	66;"	d
constructor_mm_NN1C_const_Matrix_T	containers/def_templates_matrix_constructors.h	146;"	d
constructor_mm_NN1C_const_Matrix_T	containers/def_templates_matrix_constructors.h	74;"	d
constructor_mm_NN1C_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_mm_NN1C_const_Matrix_T$/;"	f
constructor_mm_NN1C_const_Matrix_T	containers/undef_templates_matrix_constructors.h	70;"	d
constructor_mm_NN1C_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	136;"	d
constructor_mm_NN1C_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	69;"	d
constructor_mm_NN1C_const_Multiarray_T	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_T* constructor_mm_NN1C_const_Multiarray_T$/;"	f
constructor_mm_NN1C_const_Multiarray_T	containers/undef_templates_multiarray_constructors.h	65;"	d
constructor_mm_NN1C_const_Multiarray_TT	containers/def_templates_multiarray_constructors.h	138;"	d
constructor_mm_NN1C_const_Multiarray_TT	containers/def_templates_multiarray_constructors.h	71;"	d
constructor_mm_NN1C_const_Multiarray_TT	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_T* constructor_mm_NN1C_const_Multiarray_TT$/;"	f
constructor_mm_NN1C_const_Multiarray_TT	containers/undef_templates_multiarray_constructors.h	67;"	d
constructor_mm_NN1R_Matrix_T	containers/def_templates_matrix_constructors.h	143;"	d
constructor_mm_NN1R_Matrix_T	containers/def_templates_matrix_constructors.h	71;"	d
constructor_mm_NN1R_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_mm_NN1R_Matrix_T$/;"	f
constructor_mm_NN1R_Matrix_T	containers/undef_templates_matrix_constructors.h	67;"	d
constructor_mm_NN1R_const_Matrix_T	containers/def_templates_matrix_constructors.h	144;"	d
constructor_mm_NN1R_const_Matrix_T	containers/def_templates_matrix_constructors.h	72;"	d
constructor_mm_NN1R_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_mm_NN1R_const_Matrix_T$/;"	f
constructor_mm_NN1R_const_Matrix_T	containers/undef_templates_matrix_constructors.h	68;"	d
constructor_mm_NN1_Operator_Multiarray_R	simulation/operators/def_templates_operators.h	53;"	d
constructor_mm_NN1_Operator_Multiarray_R	simulation/operators/undef_templates_operators.h	31;"	d
constructor_mm_NN1_Operator_Multiarray_T	simulation/operators/def_templates_operators.h	22;"	d
constructor_mm_NN1_Operator_Multiarray_T	simulation/operators/def_templates_operators.h	37;"	d
constructor_mm_NN1_Operator_Multiarray_T	simulation/operators/operator_T.cpp	/^struct Multiarray_T* constructor_mm_NN1_Operator_Multiarray_T$/;"	f
constructor_mm_NN1_Operator_Multiarray_T	simulation/operators/undef_templates_operators.h	19;"	d
constructor_mm_NN1_Operator_Multiarray_T_Multiarray_R	simulation/operators/def_templates_operators.h	24;"	d
constructor_mm_NN1_Operator_Multiarray_T_Multiarray_R	simulation/operators/def_templates_operators.h	39;"	d
constructor_mm_NN1_Operator_Multiarray_T_Multiarray_R	simulation/operators/operator_T.cpp	/^struct Multiarray_T* constructor_mm_NN1_Operator_Multiarray_T_Multiarray_R$/;"	f
constructor_mm_NN1_Operator_Multiarray_T_Multiarray_R	simulation/operators/undef_templates_operators.h	21;"	d
constructor_mm_NN1_Operator_const_Multiarray_R	simulation/operators/def_templates_operators.h	54;"	d
constructor_mm_NN1_Operator_const_Multiarray_R	simulation/operators/undef_templates_operators.h	32;"	d
constructor_mm_NN1_Operator_const_Multiarray_T	simulation/operators/def_templates_operators.h	23;"	d
constructor_mm_NN1_Operator_const_Multiarray_T	simulation/operators/def_templates_operators.h	38;"	d
constructor_mm_NN1_Operator_const_Multiarray_T	simulation/operators/operator_T.cpp	/^const struct const_Multiarray_T* constructor_mm_NN1_Operator_const_Multiarray_T$/;"	f
constructor_mm_NN1_Operator_const_Multiarray_T	simulation/operators/undef_templates_operators.h	20;"	d
constructor_mm_NN1_Operator_const_Multiarray_T_Multiarray_R	simulation/operators/def_templates_operators.h	25;"	d
constructor_mm_NN1_Operator_const_Multiarray_T_Multiarray_R	simulation/operators/def_templates_operators.h	40;"	d
constructor_mm_NN1_Operator_const_Multiarray_T_Multiarray_R	simulation/operators/operator_T.cpp	/^const struct const_Multiarray_T* constructor_mm_NN1_Operator_const_Multiarray_T_Multiarray_R$/;"	f
constructor_mm_NN1_Operator_const_Multiarray_T_Multiarray_R	simulation/operators/undef_templates_operators.h	22;"	d
constructor_mm_RT_Matrix_T	containers/def_templates_matrix_constructors.h	139;"	d
constructor_mm_RT_Matrix_T	containers/def_templates_matrix_constructors.h	67;"	d
constructor_mm_RT_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_mm_RT_Matrix_T$/;"	f
constructor_mm_RT_Matrix_T	containers/undef_templates_matrix_constructors.h	63;"	d
constructor_mm_RT_const_Matrix_T	containers/def_templates_matrix_constructors.h	140;"	d
constructor_mm_RT_const_Matrix_T	containers/def_templates_matrix_constructors.h	68;"	d
constructor_mm_RT_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_mm_RT_const_Matrix_T$/;"	f
constructor_mm_RT_const_Matrix_T	containers/undef_templates_matrix_constructors.h	64;"	d
constructor_mm_TR_Matrix_T	containers/def_templates_matrix_constructors.h	141;"	d
constructor_mm_TR_Matrix_T	containers/def_templates_matrix_constructors.h	69;"	d
constructor_mm_TR_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_mm_TR_Matrix_T$/;"	f
constructor_mm_TR_Matrix_T	containers/undef_templates_matrix_constructors.h	65;"	d
constructor_mm_TR_const_Matrix_T	containers/def_templates_matrix_constructors.h	142;"	d
constructor_mm_TR_const_Matrix_T	containers/def_templates_matrix_constructors.h	70;"	d
constructor_mm_TR_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_mm_TR_const_Matrix_T$/;"	f
constructor_mm_TR_const_Matrix_T	containers/undef_templates_matrix_constructors.h	66;"	d
constructor_mm_const_Matrix_R	containers/def_templates_matrix_constructors.h	184;"	d
constructor_mm_const_Matrix_R	containers/undef_templates_matrix_constructors.h	105;"	d
constructor_mm_const_Matrix_T	containers/def_templates_matrix_constructors.h	138;"	d
constructor_mm_const_Matrix_T	containers/def_templates_matrix_constructors.h	66;"	d
constructor_mm_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_mm_const_Matrix_T$/;"	f
constructor_mm_const_Matrix_T	containers/undef_templates_matrix_constructors.h	62;"	d
constructor_mm_diag_Matrix_R	containers/def_templates_matrix_constructors.h	185;"	d
constructor_mm_diag_Matrix_R	containers/undef_templates_matrix_constructors.h	106;"	d
constructor_mm_diag_Matrix_R_T	containers/def_templates_matrix_constructors.h	149;"	d
constructor_mm_diag_Matrix_R_T	containers/def_templates_matrix_constructors.h	77;"	d
constructor_mm_diag_Matrix_R_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_mm_diag_Matrix_R_T$/;"	f
constructor_mm_diag_Matrix_R_T	containers/undef_templates_matrix_constructors.h	73;"	d
constructor_mm_diag_Matrix_T	containers/def_templates_matrix_constructors.h	151;"	d
constructor_mm_diag_Matrix_T	containers/def_templates_matrix_constructors.h	79;"	d
constructor_mm_diag_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_mm_diag_Matrix_T$/;"	f
constructor_mm_diag_Matrix_T	containers/undef_templates_matrix_constructors.h	75;"	d
constructor_mm_diag_Matrix_T_R	containers/def_templates_matrix_constructors.h	147;"	d
constructor_mm_diag_Matrix_T_R	containers/def_templates_matrix_constructors.h	75;"	d
constructor_mm_diag_Matrix_T_R	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_mm_diag_Matrix_T_R$/;"	f
constructor_mm_diag_Matrix_T_R	containers/undef_templates_matrix_constructors.h	71;"	d
constructor_mm_diag_const_Matrix_R	containers/def_templates_matrix_constructors.h	186;"	d
constructor_mm_diag_const_Matrix_R	containers/undef_templates_matrix_constructors.h	107;"	d
constructor_mm_diag_const_Matrix_R_T	containers/def_templates_matrix_constructors.h	150;"	d
constructor_mm_diag_const_Matrix_R_T	containers/def_templates_matrix_constructors.h	78;"	d
constructor_mm_diag_const_Matrix_R_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_mm_diag_const_Matrix_R_T$/;"	f
constructor_mm_diag_const_Matrix_R_T	containers/undef_templates_matrix_constructors.h	74;"	d
constructor_mm_diag_const_Matrix_T	containers/def_templates_matrix_constructors.h	152;"	d
constructor_mm_diag_const_Matrix_T	containers/def_templates_matrix_constructors.h	80;"	d
constructor_mm_diag_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_mm_diag_const_Matrix_T$/;"	f
constructor_mm_diag_const_Matrix_T	containers/undef_templates_matrix_constructors.h	76;"	d
constructor_mm_diag_const_Matrix_T_R	containers/def_templates_matrix_constructors.h	148;"	d
constructor_mm_diag_const_Matrix_T_R	containers/def_templates_matrix_constructors.h	76;"	d
constructor_mm_diag_const_Matrix_T_R	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_mm_diag_const_Matrix_T_R$/;"	f
constructor_mm_diag_const_Matrix_T_R	containers/undef_templates_matrix_constructors.h	72;"	d
constructor_mm_tp_NN1C_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	139;"	d
constructor_mm_tp_NN1C_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	72;"	d
constructor_mm_tp_NN1C_const_Multiarray_T	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_T* constructor_mm_tp_NN1C_const_Multiarray_T$/;"	f
constructor_mm_tp_NN1C_const_Multiarray_T	containers/undef_templates_multiarray_constructors.h	68;"	d
constructor_move_Matrix_R_R	containers/def_templates_matrix_constructors.h	179;"	d
constructor_move_Matrix_R_R	containers/def_templates_matrix_constructors.h	228;"	d
constructor_move_Matrix_R_R	containers/undef_templates_matrix_constructors.h	100;"	d
constructor_move_Matrix_T_T	containers/def_templates_matrix_constructors.h	119;"	d
constructor_move_Matrix_T_T	containers/def_templates_matrix_constructors.h	214;"	d
constructor_move_Matrix_T_T	containers/def_templates_matrix_constructors.h	47;"	d
constructor_move_Matrix_T_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_move_Matrix_T_T$/;"	f
constructor_move_Matrix_T_T	containers/undef_templates_matrix_constructors.h	43;"	d
constructor_move_Multiarray_Matrix_T_dyn_extents	containers/def_templates_multiarray_constructors.h	122;"	d
constructor_move_Multiarray_Matrix_T_dyn_extents	containers/def_templates_multiarray_constructors.h	213;"	d
constructor_move_Multiarray_Matrix_T_dyn_extents	containers/def_templates_multiarray_constructors.h	55;"	d
constructor_move_Multiarray_Matrix_T_dyn_extents	containers/multiarray_constructors_T.cpp	/^struct Multiarray_Matrix_T* constructor_move_Multiarray_Matrix_T_dyn_extents$/;"	f
constructor_move_Multiarray_Matrix_T_dyn_extents	containers/undef_templates_multiarray_constructors.h	51;"	d
constructor_move_Multiarray_Operator_dyn_extents	simulation/operators/multiarray_operator.cpp	/^static const struct Multiarray_Operator* constructor_move_Multiarray_Operator_dyn_extents$/;"	f	file:
constructor_move_Multiarray_T_Matrix_T	containers/def_templates_multiarray_constructors.h	123;"	d
constructor_move_Multiarray_T_Matrix_T	containers/def_templates_multiarray_constructors.h	214;"	d
constructor_move_Multiarray_T_Matrix_T	containers/def_templates_multiarray_constructors.h	56;"	d
constructor_move_Multiarray_T_Matrix_T	containers/multiarray_constructors_T.cpp	/^struct Multiarray_T* constructor_move_Multiarray_T_Matrix_T (struct Matrix_T* src)$/;"	f
constructor_move_Multiarray_T_Matrix_T	containers/undef_templates_multiarray_constructors.h	52;"	d
constructor_move_Multiarray_T_T	containers/def_templates_multiarray_constructors.h	117;"	d
constructor_move_Multiarray_T_T	containers/def_templates_multiarray_constructors.h	208;"	d
constructor_move_Multiarray_T_T	containers/def_templates_multiarray_constructors.h	50;"	d
constructor_move_Multiarray_T_T	containers/multiarray_constructors_T.cpp	/^struct Multiarray_T* constructor_move_Multiarray_T_T$/;"	f
constructor_move_Multiarray_T_T	containers/undef_templates_multiarray_constructors.h	46;"	d
constructor_move_Multiarray_T_dyn_extents	containers/def_templates_multiarray_constructors.h	119;"	d
constructor_move_Multiarray_T_dyn_extents	containers/def_templates_multiarray_constructors.h	210;"	d
constructor_move_Multiarray_T_dyn_extents	containers/def_templates_multiarray_constructors.h	52;"	d
constructor_move_Multiarray_T_dyn_extents	containers/multiarray_constructors_T.cpp	/^struct Multiarray_T* constructor_move_Multiarray_T_dyn_extents$/;"	f
constructor_move_Multiarray_T_dyn_extents	containers/undef_templates_multiarray_constructors.h	48;"	d
constructor_move_Multiarray_Vector_T_dyn_extents	containers/def_templates_multiarray_constructors.h	121;"	d
constructor_move_Multiarray_Vector_T_dyn_extents	containers/def_templates_multiarray_constructors.h	212;"	d
constructor_move_Multiarray_Vector_T_dyn_extents	containers/def_templates_multiarray_constructors.h	54;"	d
constructor_move_Multiarray_Vector_T_dyn_extents	containers/multiarray_constructors_T.cpp	/^struct Multiarray_Vector_T* constructor_move_Multiarray_Vector_T_dyn_extents$/;"	f
constructor_move_Multiarray_Vector_T_dyn_extents	containers/undef_templates_multiarray_constructors.h	50;"	d
constructor_move_Vector_T_Matrix_T	containers/def_templates_vector_constructors.h	168;"	d
constructor_move_Vector_T_Matrix_T	containers/def_templates_vector_constructors.h	41;"	d
constructor_move_Vector_T_Matrix_T	containers/def_templates_vector_constructors.h	99;"	d
constructor_move_Vector_T_Matrix_T	containers/undef_templates_vector_constructors.h	38;"	d
constructor_move_Vector_T_Matrix_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_move_Vector_T_Matrix_T (struct Matrix_T* src)$/;"	f
constructor_move_Vector_T_T	containers/def_templates_vector_constructors.h	165;"	d
constructor_move_Vector_T_T	containers/def_templates_vector_constructors.h	38;"	d
constructor_move_Vector_T_T	containers/def_templates_vector_constructors.h	96;"	d
constructor_move_Vector_T_T	containers/undef_templates_vector_constructors.h	35;"	d
constructor_move_Vector_T_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_move_Vector_T_T (const ptrdiff_t ext_0, const bool owns_data, Type*const data)$/;"	f
constructor_move_Vector_T_indexed	containers/def_templates_multiarray.h	166;"	d
constructor_move_Vector_T_indexed	containers/def_templates_multiarray.h	39;"	d
constructor_move_Vector_T_indexed	containers/def_templates_multiarray.h	90;"	d
constructor_move_Vector_T_indexed	containers/multiarray_T.cpp	/^static struct Vector_T_indexed** constructor_move_Vector_T_indexed (const ptrdiff_t size, struct Vector_T** data)$/;"	f	file:
constructor_move_Vector_T_indexed	containers/undef_templates_multiarray.h	35;"	d
constructor_move_const_Matrix_R_R	containers/def_templates_matrix_constructors.h	180;"	d
constructor_move_const_Matrix_R_R	containers/undef_templates_matrix_constructors.h	101;"	d
constructor_move_const_Matrix_T_T	containers/def_templates_matrix_constructors.h	120;"	d
constructor_move_const_Matrix_T_T	containers/def_templates_matrix_constructors.h	215;"	d
constructor_move_const_Matrix_T_T	containers/def_templates_matrix_constructors.h	48;"	d
constructor_move_const_Matrix_T_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_move_const_Matrix_T_T$/;"	f
constructor_move_const_Matrix_T_T	containers/undef_templates_matrix_constructors.h	44;"	d
constructor_move_const_Multiarray_T_Matrix_T	containers/def_templates_multiarray_constructors.h	124;"	d
constructor_move_const_Multiarray_T_Matrix_T	containers/def_templates_multiarray_constructors.h	215;"	d
constructor_move_const_Multiarray_T_Matrix_T	containers/def_templates_multiarray_constructors.h	57;"	d
constructor_move_const_Multiarray_T_Matrix_T	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_T* constructor_move_const_Multiarray_T_Matrix_T (const struct const_Matrix_T* src)$/;"	f
constructor_move_const_Multiarray_T_Matrix_T	containers/undef_templates_multiarray_constructors.h	53;"	d
constructor_move_const_Multiarray_T_T	containers/def_templates_multiarray_constructors.h	118;"	d
constructor_move_const_Multiarray_T_T	containers/def_templates_multiarray_constructors.h	209;"	d
constructor_move_const_Multiarray_T_T	containers/def_templates_multiarray_constructors.h	51;"	d
constructor_move_const_Multiarray_T_T	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_T* constructor_move_const_Multiarray_T_T$/;"	f
constructor_move_const_Multiarray_T_T	containers/undef_templates_multiarray_constructors.h	47;"	d
constructor_move_const_Multiarray_T_dyn_extents	containers/def_templates_multiarray_constructors.h	120;"	d
constructor_move_const_Multiarray_T_dyn_extents	containers/def_templates_multiarray_constructors.h	211;"	d
constructor_move_const_Multiarray_T_dyn_extents	containers/def_templates_multiarray_constructors.h	53;"	d
constructor_move_const_Multiarray_T_dyn_extents	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_T* constructor_move_const_Multiarray_T_dyn_extents$/;"	f
constructor_move_const_Multiarray_T_dyn_extents	containers/undef_templates_multiarray_constructors.h	49;"	d
constructor_move_const_Vector_Matrix_row_T	containers/def_templates_vector_constructors.h	167;"	d
constructor_move_const_Vector_Matrix_row_T	containers/def_templates_vector_constructors.h	40;"	d
constructor_move_const_Vector_Matrix_row_T	containers/def_templates_vector_constructors.h	98;"	d
constructor_move_const_Vector_Matrix_row_T	containers/undef_templates_vector_constructors.h	37;"	d
constructor_move_const_Vector_Matrix_row_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_move_const_Vector_Matrix_row_T$/;"	f
constructor_move_const_Vector_T_T	containers/def_templates_vector_constructors.h	166;"	d
constructor_move_const_Vector_T_T	containers/def_templates_vector_constructors.h	39;"	d
constructor_move_const_Vector_T_T	containers/def_templates_vector_constructors.h	97;"	d
constructor_move_const_Vector_T_T	containers/undef_templates_vector_constructors.h	36;"	d
constructor_move_const_Vector_T_T	containers/vector_constructors_T.cpp	/^struct const_Vector_T* constructor_move_const_Vector_T_T$/;"	f
constructor_mv_Vector_T	containers/def_templates_vector_constructors.h	116;"	d
constructor_mv_Vector_T	containers/def_templates_vector_constructors.h	58;"	d
constructor_mv_Vector_T	containers/undef_templates_vector_constructors.h	55;"	d
constructor_mv_Vector_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_mv_Vector_T$/;"	f
constructor_mv_const_Vector_T	containers/def_templates_vector_constructors.h	117;"	d
constructor_mv_const_Vector_T	containers/def_templates_vector_constructors.h	59;"	d
constructor_mv_const_Vector_T	containers/undef_templates_vector_constructors.h	56;"	d
constructor_mv_const_Vector_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_mv_const_Vector_T$/;"	f
constructor_n_dot_f	simulation/test_case/solution/def_templates_solution.h	123;"	d
constructor_n_dot_f	simulation/test_case/solution/def_templates_solution.h	64;"	d
constructor_n_dot_f	simulation/test_case/solution/solution_T.cpp	/^static const struct const_Multiarray_T* constructor_n_dot_f$/;"	f	file:
constructor_n_dot_f	simulation/test_case/solution/undef_templates_solution.h	66;"	d
constructor_nf	simulation/test_case/solution/def_templates_solution.h	120;"	d
constructor_nf	simulation/test_case/solution/def_templates_solution.h	61;"	d
constructor_nf	simulation/test_case/solution/solution_T.cpp	/^static const struct const_Multiarray_T* constructor_nf$/;"	f	file:
constructor_nf	simulation/test_case/solution/undef_templates_solution.h	63;"	d
constructor_nnz	simulation/solvers/def_templates_solve.h	32;"	d
constructor_nnz	simulation/solvers/def_templates_solve.h	53;"	d
constructor_nnz	simulation/solvers/solve_T.cpp	/^static struct Vector_i* constructor_nnz (const struct Simulation*const sim)$/;"	f	file:
constructor_nnz	simulation/solvers/undef_templates_solve.h	27;"	d
constructor_nnz_dg_T	simulation/solvers/dg/def_templates_solve_dg.h	22;"	d
constructor_nnz_dg_T	simulation/solvers/dg/def_templates_solve_dg.h	28;"	d
constructor_nnz_dg_T	simulation/solvers/dg/solve_dg_T.cpp	/^struct Vector_i* constructor_nnz_dg_T (const bool diag_only, const struct Simulation* sim)$/;"	f
constructor_nnz_dg_T	simulation/solvers/dg/undef_templates_solve_dg.h	19;"	d
constructor_nnz_dpg_T	simulation/solvers/dpg/def_templates_solve_dpg.h	22;"	d
constructor_nnz_dpg_T	simulation/solvers/dpg/def_templates_solve_dpg.h	35;"	d
constructor_nnz_dpg_T	simulation/solvers/dpg/solve_dpg_T.cpp	/^struct Vector_i* constructor_nnz_dpg_T (const bool diag_only, const struct Simulation* sim)$/;"	f
constructor_nnz_dpg_T	simulation/solvers/dpg/undef_templates_solve_dpg.h	19;"	d
constructor_nnz_opg_T	simulation/solvers/opg/def_templates_solve_opg.h	22;"	d
constructor_nnz_opg_T	simulation/solvers/opg/def_templates_solve_opg.h	33;"	d
constructor_nnz_opg_T	simulation/solvers/opg/solve_opg_T.cpp	/^struct Vector_i* constructor_nnz_opg_T (const struct Simulation* sim)$/;"	f
constructor_nnz_opg_T	simulation/solvers/opg/undef_templates_solve_opg.h	19;"	d
constructor_nodes_face_corr	element/nodes_correspondence.cpp	/^const struct const_Multiarray_Vector_i* constructor_nodes_face_corr$/;"	f
constructor_nodes_face_corr_op	element/nodes_operators.cpp	/^const struct const_Multiarray_Vector_i* constructor_nodes_face_corr_op$/;"	f
constructor_norm_DPG	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^	constructor_norm_DPG_fptr constructor_norm_DPG; \/\/\/< Pointer to the appropriate function.$/;"	m	struct:S_Params_DPG	file:
constructor_norm_DPG__adjoint	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static const struct Norm_DPG* constructor_norm_DPG__adjoint$/;"	f	file:
constructor_norm_DPG__adjoint	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	49;"	d
constructor_norm_DPG__adjoint	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	91;"	d
constructor_norm_DPG__adjoint	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	44;"	d
constructor_norm_DPG__h0	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static const struct Norm_DPG* constructor_norm_DPG__h0$/;"	f	file:
constructor_norm_DPG__h0	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	46;"	d
constructor_norm_DPG__h0	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	88;"	d
constructor_norm_DPG__h0	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	41;"	d
constructor_norm_DPG__h0	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	42;"	d
constructor_norm_DPG__h1	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static const struct Norm_DPG* constructor_norm_DPG__h1$/;"	f	file:
constructor_norm_DPG__h1	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	47;"	d
constructor_norm_DPG__h1	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	89;"	d
constructor_norm_DPG__h1	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	42;"	d
constructor_norm_DPG__h1	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	43;"	d
constructor_norm_DPG__h1_upwind	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static const struct Norm_DPG* constructor_norm_DPG__h1_upwind$/;"	f	file:
constructor_norm_DPG__h1_upwind	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	48;"	d
constructor_norm_DPG__h1_upwind	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	90;"	d
constructor_norm_DPG__h1_upwind	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	43;"	d
constructor_norm_DPG__h1_upwind	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	44;"	d
constructor_norm_DPG_dN_ds__adjoint	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static const struct const_Matrix_d* constructor_norm_DPG_dN_ds__adjoint$/;"	f	file:
constructor_norm_DPG_dN_ds__h1_upwind	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static const struct const_Matrix_d* constructor_norm_DPG_dN_ds__h1_upwind$/;"	f	file:
constructor_norm_DPG_fptr	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^typedef const struct Norm_DPG* (*constructor_norm_DPG_fptr)$/;"	t	typeref:struct:constructor_norm_DPG_fptr	file:
constructor_norm_DPG_fptr	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	32;"	d
constructor_norm_DPG_fptr	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	74;"	d
constructor_norm_DPG_fptr	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	27;"	d
constructor_norm_DPG_fptr	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	29;"	d
constructor_norm_op_H0	simulation/solvers/dpg/def_templates_volume_solver_dpg.h	32;"	d
constructor_norm_op_H0	simulation/solvers/dpg/def_templates_volume_solver_dpg.h	49;"	d
constructor_norm_op_H0	simulation/solvers/dpg/undef_templates_volume_solver_dpg.h	29;"	d
constructor_norm_op_H0	simulation/solvers/dpg/volume_solver_dpg_T.cpp	/^static const struct const_Matrix_T* constructor_norm_op_H0 (const struct DPG_Solver_Volume_T* dpg_s_vol)$/;"	f	file:
constructor_norm_op_H1	simulation/solvers/dpg/def_templates_volume_solver_dpg.h	33;"	d
constructor_norm_op_H1	simulation/solvers/dpg/def_templates_volume_solver_dpg.h	48;"	d
constructor_norm_op_H1	simulation/solvers/dpg/undef_templates_volume_solver_dpg.h	30;"	d
constructor_norm_op_H1	simulation/solvers/dpg/volume_solver_dpg_T.cpp	/^static const struct const_Matrix_T* constructor_norm_op_H1 (const struct DPG_Solver_Volume_T* dpg_s_vol)$/;"	f	file:
constructor_normals	testing/integration/test_integration_fluxes.cpp	/^const struct const_Multiarray_d* constructor_normals ()$/;"	f
constructor_normals_ff	simulation/test_case/solution/def_templates_solution.h	122;"	d
constructor_normals_ff	simulation/test_case/solution/def_templates_solution.h	63;"	d
constructor_normals_ff	simulation/test_case/solution/solution_T.cpp	/^static const struct const_Multiarray_T* constructor_normals_ff (const struct Solver_Face_T* s_face)$/;"	f	file:
constructor_normals_ff	simulation/test_case/solution/undef_templates_solution.h	65;"	d
constructor_offset_derived_Element	simulation/computational_elements/computational_elements.cpp	/^void constructor_offset_derived_Element$/;"	f
constructor_op_MMd	element/element_operators.cpp	/^static const struct const_Multiarray_Matrix_d* constructor_op_MMd (const bool owns_data, const ptrdiff_t ext_0)$/;"	f	file:
constructor_op_Xc_ce_io	element/element_operators.cpp	/^static const struct const_Multiarray_Matrix_d* constructor_op_Xc_ce_io$/;"	f	file:
constructor_op_std	element/element_operators_tp.cpp	/^const struct const_Matrix_d* constructor_op_std (const struct const_Multiarray_Matrix_d* ops_tp)$/;"	f
constructor_operator__test_s_coef_to_sol_coef_T	simulation/solvers/opg/compute_volume_rlhs_opg_T.cpp	/^const struct const_Matrix_T* constructor_operator__test_s_coef_to_sol_coef_T$/;"	f
constructor_operator__test_s_coef_to_sol_coef_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	24;"	d
constructor_operator__test_s_coef_to_sol_coef_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	43;"	d
constructor_operator__test_s_coef_to_sol_coef_T	simulation/solvers/opg/undef_templates_compute_volume_rlhs_opg.h	21;"	d
constructor_operators	element/element_operators.cpp	/^const struct Multiarray_Operator* constructor_operators$/;"	f
constructor_operators_bt	element/element_operators.cpp	/^const struct Multiarray_Operator* constructor_operators_bt$/;"	f
constructor_operators_nc	element/element_operators.cpp	/^const struct const_Multiarray_Vector_i* constructor_operators_nc$/;"	f
constructor_operators_ones_coef	element/element_operators.cpp	/^const struct const_Multiarray_Vector_d* constructor_operators_ones_coef$/;"	f
constructor_operators_tens3	element/element_operators.cpp	/^const struct Multiarray_Operator* constructor_operators_tens3$/;"	f
constructor_operators_tp	element/element_operators_tp.cpp	/^const struct Multiarray_Operator* constructor_operators_tp$/;"	f
constructor_operators_w	element/element_operators.cpp	/^const struct const_Multiarray_Vector_d* constructor_operators_w$/;"	f
constructor_part_unity	testing/support/element/test_support_bases.cpp	/^const struct const_Vector_d* constructor_part_unity (const struct const_Matrix_d* phi_rst)$/;"	f
constructor_part_unity_def	testing/support/element/test_support_bases.cpp	/^const struct const_Vector_d* constructor_part_unity_def (const ptrdiff_t n_n)$/;"	f
constructor_partial_grad_fc_interp	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^static struct Multiarray_T* constructor_partial_grad_fc_interp$/;"	f	file:
constructor_partial_grad_fc_interp	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	37;"	d
constructor_partial_grad_fc_interp	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	56;"	d
constructor_partial_grad_fc_interp	simulation/solvers/dg/undef_templates_compute_face_rlhs_dg.h	31;"	d
constructor_petsc_idxm_dpg_T	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^const struct const_Vector_i* constructor_petsc_idxm_dpg_T$/;"	f
constructor_petsc_idxm_dpg_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	25;"	d
constructor_petsc_idxm_dpg_T	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	67;"	d
constructor_petsc_idxm_dpg_T	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	22;"	d
constructor_petsc_ksp	simulation/solvers/solve_implicit.cpp	/^static PetscErrorCode constructor_petsc_ksp (KSP*const ksp, Mat A, const struct Simulation* sim)$/;"	f	file:
constructor_petsc_x	simulation/solvers/solve_implicit.cpp	/^static Vec constructor_petsc_x (Vec b)$/;"	f	file:
constructor_reference_normals	element/element.cpp	/^struct Multiarray_d* constructor_reference_normals (const int e_type, const struct Elem_info* e_info)$/;"	f
constructor_repeated_const_Vector_R	containers/def_templates_vector_constructors.h	140;"	d
constructor_repeated_const_Vector_R	containers/undef_templates_vector_constructors.h	82;"	d
constructor_repeated_const_Vector_T	containers/def_templates_vector_constructors.h	111;"	d
constructor_repeated_const_Vector_T	containers/def_templates_vector_constructors.h	53;"	d
constructor_repeated_const_Vector_T	containers/undef_templates_vector_constructors.h	50;"	d
constructor_repeated_const_Vector_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_repeated_const_Vector_T$/;"	f
constructor_rhs_opt_neg	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static const struct const_Vector_T* constructor_rhs_opt_neg$/;"	f	file:
constructor_rhs_opt_neg	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	53;"	d
constructor_rhs_opt_neg	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	95;"	d
constructor_rhs_opt_neg	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	48;"	d
constructor_rhs_opt_neg	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	48;"	d
constructor_rhs_v	simulation/test_case/solution/solution.cpp	/^struct Multiarray_d* constructor_rhs_v (const struct Simulation* sim, struct Solver_Volume* s_vol, const char node_kind)$/;"	f
constructor_rhs_v_1	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static struct Vector_T* constructor_rhs_v_1$/;"	f	file:
constructor_rhs_v_1	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	51;"	d
constructor_rhs_v_1	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	93;"	d
constructor_rhs_v_1	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	46;"	d
constructor_rhs_v_1	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	46;"	d
constructor_rlhs_f_b_test_penalty_T	simulation/solvers/opg/def_templates_face_solver_opg.h	29;"	d
constructor_rlhs_f_b_test_penalty_T	simulation/solvers/opg/def_templates_face_solver_opg.h	53;"	d
constructor_rlhs_f_b_test_penalty_T	simulation/solvers/opg/face_solver_opg_T.h	/^typedef void (*constructor_rlhs_f_b_test_penalty_T)$/;"	t
constructor_rlhs_f_b_test_penalty_T	simulation/solvers/opg/undef_templates_face_solver_opg.h	26;"	d
constructor_rlhs_f_test_penalty_advection_upwind_T	simulation/solvers/opg/def_templates_penalty_opg_advection.h	22;"	d
constructor_rlhs_f_test_penalty_advection_upwind_T	simulation/solvers/opg/def_templates_penalty_opg_advection.h	28;"	d
constructor_rlhs_f_test_penalty_advection_upwind_T	simulation/solvers/opg/penalty_opg_advection_T.cpp	/^void constructor_rlhs_f_test_penalty_advection_upwind_T$/;"	f
constructor_rlhs_f_test_penalty_advection_upwind_T	simulation/solvers/opg/undef_templates_penalty_opg_advection.h	19;"	d
constructor_rlhs_f_test_penalty_do_nothing_T	simulation/solvers/opg/def_templates_penalty_opg.h	26;"	d
constructor_rlhs_f_test_penalty_do_nothing_T	simulation/solvers/opg/def_templates_penalty_opg.h	34;"	d
constructor_rlhs_f_test_penalty_do_nothing_T	simulation/solvers/opg/penalty_opg_T.cpp	/^void constructor_rlhs_f_test_penalty_do_nothing_T$/;"	f
constructor_rlhs_f_test_penalty_do_nothing_T	simulation/solvers/opg/undef_templates_penalty_opg.h	23;"	d
constructor_rlhs_f_test_penalty_unsupported_T	simulation/solvers/opg/def_templates_penalty_opg.h	25;"	d
constructor_rlhs_f_test_penalty_unsupported_T	simulation/solvers/opg/def_templates_penalty_opg.h	33;"	d
constructor_rlhs_f_test_penalty_unsupported_T	simulation/solvers/opg/penalty_opg_T.cpp	/^void constructor_rlhs_f_test_penalty_unsupported_T$/;"	f
constructor_rlhs_f_test_penalty_unsupported_T	simulation/solvers/opg/undef_templates_penalty_opg.h	22;"	d
constructor_rlhs_penalty	simulation/solvers/opg/face_solver_opg_T.h	/^	constructor_rlhs_f_b_test_penalty_T constructor_rlhs_penalty;$/;"	m	struct:OPG_Solver_Face_T
constructor_rst_proj	element/nodes_operators.cpp	/^static struct Matrix_d* constructor_rst_proj$/;"	f	file:
constructor_rst_ref_from_rst_std	simulation/test_case/solution/restart/inverse_mapping.cpp	/^static const struct const_Matrix_d* constructor_rst_ref_from_rst_std$/;"	f	file:
constructor_rst_ve	element/nodes_operators.cpp	/^static const struct const_Matrix_d* constructor_rst_ve$/;"	f	file:
constructor_s	testing/integration/test_integration_fluxes.cpp	/^static const struct const_Multiarray_d* constructor_s (const int index, const struct Simulation*const sim)$/;"	f	file:
constructor_s_coef_bezier	simulation/test_case/solution/solution.cpp	/^struct Multiarray_d* constructor_s_coef_bezier$/;"	f
constructor_s_fc_interp	simulation/test_case/boundary/undef_templates_boundary.h	63;"	d
constructor_s_fc_interp_T	simulation/test_case/boundary/boundary_T.cpp	/^const struct const_Multiarray_T* constructor_s_fc_interp_T (const int side_index, const struct Solver_Face_T*const s_face)$/;"	f
constructor_s_fc_interp_T	simulation/test_case/boundary/def_templates_boundary.h	108;"	d
constructor_s_fc_interp_T	simulation/test_case/boundary/def_templates_boundary.h	41;"	d
constructor_s_fc_interp_T	simulation/test_case/boundary/undef_templates_boundary.h	30;"	d
constructor_s_fc_interp_T	simulation/test_case/boundary/undef_templates_boundary.h	41;"	d
constructor_set_Vector_T_Multiarray_T	containers/def_templates_vector_constructors.h	103;"	d
constructor_set_Vector_T_Multiarray_T	containers/def_templates_vector_constructors.h	45;"	d
constructor_set_Vector_T_Multiarray_T	containers/undef_templates_vector_constructors.h	42;"	d
constructor_set_Vector_T_Multiarray_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_set_Vector_T_Multiarray_T (struct Multiarray_T* src, const ptrdiff_t* sub_indices)$/;"	f
constructor_set_const_Vector_T_Multiarray_T	containers/def_templates_vector_constructors.h	104;"	d
constructor_set_const_Vector_T_Multiarray_T	containers/def_templates_vector_constructors.h	46;"	d
constructor_set_const_Vector_T_Multiarray_T	containers/undef_templates_vector_constructors.h	43;"	d
constructor_set_const_Vector_T_Multiarray_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_set_const_Vector_T_Multiarray_T$/;"	f
constructor_sgesv_Matrix_T	containers/def_templates_matrix_constructors.h	133;"	d
constructor_sgesv_Matrix_T	containers/def_templates_matrix_constructors.h	61;"	d
constructor_sgesv_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_sgesv_Matrix_T (struct Matrix_T* A_i, struct Matrix_T* B_i)$/;"	f
constructor_sgesv_Matrix_T	containers/undef_templates_matrix_constructors.h	57;"	d
constructor_sgesv_Vector_T	containers/def_templates_vector_constructors.h	118;"	d
constructor_sgesv_Vector_T	containers/def_templates_vector_constructors.h	60;"	d
constructor_sgesv_Vector_T	containers/undef_templates_vector_constructors.h	57;"	d
constructor_sgesv_Vector_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_sgesv_Vector_T (struct Matrix_T* A_i, struct Vector_T* B_i)$/;"	f
constructor_sgesv_const_Matrix_T	containers/def_templates_matrix_constructors.h	134;"	d
constructor_sgesv_const_Matrix_T	containers/def_templates_matrix_constructors.h	62;"	d
constructor_sgesv_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_sgesv_const_Matrix_T$/;"	f
constructor_sgesv_const_Matrix_T	containers/undef_templates_matrix_constructors.h	58;"	d
constructor_sgesv_const_Vector_T	containers/def_templates_vector_constructors.h	119;"	d
constructor_sgesv_const_Vector_T	containers/def_templates_vector_constructors.h	61;"	d
constructor_sgesv_const_Vector_T	containers/undef_templates_vector_constructors.h	58;"	d
constructor_sgesv_const_Vector_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_sgesv_const_Vector_T$/;"	f
constructor_sol	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^	mutable_constructor_sol_fs_fptr_T constructor_sol; \/\/\/< Pointer to the function used to construct the solution.$/;"	m	struct:Sol_Data__fs	file:
constructor_sol	simulation/test_case/test_case_T.h	/^	constructor_sol_fptr_T constructor_sol;  \/\/\/< Pointer to the function used to construct the solution.$/;"	m	struct:Test_Case_T
constructor_sol_advection_default_1d_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	32;"	d
constructor_sol_advection_default_1d_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	50;"	d
constructor_sol_advection_default_1d_T	simulation/test_case/solution/advection/solution_advection_default_T.cpp	/^static struct Multiarray_T* constructor_sol_advection_default_1d_T$/;"	f	file:
constructor_sol_advection_default_1d_T	simulation/test_case/solution/advection/undef_templates_solution_advection_default.h	28;"	d
constructor_sol_advection_default_2d_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	33;"	d
constructor_sol_advection_default_2d_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	51;"	d
constructor_sol_advection_default_2d_T	simulation/test_case/solution/advection/solution_advection_default_T.cpp	/^static struct Multiarray_T* constructor_sol_advection_default_2d_T$/;"	f	file:
constructor_sol_advection_default_2d_T	simulation/test_case/solution/advection/undef_templates_solution_advection_default.h	29;"	d
constructor_sol_advection_default_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	30;"	d
constructor_sol_advection_default_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	48;"	d
constructor_sol_advection_default_T	simulation/test_case/solution/advection/solution_advection_default_T.cpp	/^static struct Multiarray_T* constructor_sol_advection_default_T$/;"	f	file:
constructor_sol_advection_default_T	simulation/test_case/solution/advection/undef_templates_solution_advection_default.h	26;"	d
constructor_sol_bv	simulation/test_case/boundary/boundary_pde_T.cpp	/^static const struct const_Multiarray_T* constructor_sol_bv$/;"	f	file:
constructor_sol_bv	simulation/test_case/boundary/def_templates_boundary.h	101;"	d
constructor_sol_bv	simulation/test_case/boundary/def_templates_boundary.h	34;"	d
constructor_sol_bv	simulation/test_case/boundary/undef_templates_boundary.h	34;"	d
constructor_sol_diffusion_default_steady	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	32;"	d
constructor_sol_diffusion_default_steady	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	58;"	d
constructor_sol_diffusion_default_steady	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^static struct Multiarray_T* constructor_sol_diffusion_default_steady$/;"	f	file:
constructor_sol_diffusion_default_steady	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	27;"	d
constructor_sol_diffusion_default_steady_1d	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	35;"	d
constructor_sol_diffusion_default_steady_1d	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	61;"	d
constructor_sol_diffusion_default_steady_1d	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^static struct Multiarray_T* constructor_sol_diffusion_default_steady_1d$/;"	f	file:
constructor_sol_diffusion_default_steady_1d	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	30;"	d
constructor_sol_diffusion_default_steady_2d	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	38;"	d
constructor_sol_diffusion_default_steady_2d	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	64;"	d
constructor_sol_diffusion_default_steady_2d	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^static struct Multiarray_T* constructor_sol_diffusion_default_steady_2d$/;"	f	file:
constructor_sol_diffusion_default_steady_2d	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	33;"	d
constructor_sol_fptr_T	simulation/test_case/solution/def_templates_solution.h	26;"	d
constructor_sol_fptr_T	simulation/test_case/solution/def_templates_solution.h	81;"	d
constructor_sol_fptr_T	simulation/test_case/solution/solution_T.h	/^typedef const struct const_Multiarray_T* (*constructor_sol_fptr_T)$/;"	t	typeref:struct:constructor_sol_fptr_T
constructor_sol_fptr_T	simulation/test_case/solution/undef_templates_solution.h	25;"	d
constructor_sol_free_stream	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	28;"	d
constructor_sol_free_stream	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	45;"	d
constructor_sol_free_stream	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^static struct Multiarray_T* constructor_sol_free_stream$/;"	f	file:
constructor_sol_free_stream	simulation/test_case/solution/euler/free_stream/undef_templates_solution_free_stream.h	23;"	d
constructor_sol_free_stream_advection	simulation/test_case/solution/advection/free_stream_advection/def_templates_solution_free_stream_advection.h	28;"	d
constructor_sol_free_stream_advection	simulation/test_case/solution/advection/free_stream_advection/def_templates_solution_free_stream_advection.h	39;"	d
constructor_sol_free_stream_advection	simulation/test_case/solution/advection/free_stream_advection/solution_free_stream_advection_T.cpp	/^static struct Multiarray_T* constructor_sol_free_stream_advection$/;"	f	file:
constructor_sol_free_stream_advection	simulation/test_case/solution/advection/free_stream_advection/undef_templates_solution_free_stream_advection.h	23;"	d
constructor_sol_free_stream_const	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	33;"	d
constructor_sol_free_stream_const	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	50;"	d
constructor_sol_free_stream_const	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^static struct Multiarray_T* constructor_sol_free_stream_const$/;"	f	file:
constructor_sol_free_stream_const	simulation/test_case/solution/euler/free_stream/undef_templates_solution_free_stream.h	28;"	d
constructor_sol_free_stream_trig_x	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	34;"	d
constructor_sol_free_stream_trig_x	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	51;"	d
constructor_sol_free_stream_trig_x	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^static struct Multiarray_T* constructor_sol_free_stream_trig_x$/;"	f	file:
constructor_sol_free_stream_trig_x	simulation/test_case/solution/euler/free_stream/undef_templates_solution_free_stream.h	29;"	d
constructor_sol_hyperbolic_tan	simulation/test_case/solution/advection/hyperbolic_tan/def_templates_solution_hyperbolic_tan.h	28;"	d
constructor_sol_hyperbolic_tan	simulation/test_case/solution/advection/hyperbolic_tan/def_templates_solution_hyperbolic_tan.h	39;"	d
constructor_sol_hyperbolic_tan	simulation/test_case/solution/advection/hyperbolic_tan/solution_hyperbolic_tan_T.cpp	/^static struct Multiarray_T* constructor_sol_hyperbolic_tan$/;"	f	file:
constructor_sol_hyperbolic_tan	simulation/test_case/solution/advection/hyperbolic_tan/undef_templates_solution_hyperbolic_tan.h	23;"	d
constructor_sol_periodic_vortex_T	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	28;"	d
constructor_sol_periodic_vortex_T	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	44;"	d
constructor_sol_periodic_vortex_T	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^static struct Multiarray_T* constructor_sol_periodic_vortex_T$/;"	f	file:
constructor_sol_periodic_vortex_T	simulation/test_case/solution/euler/periodic_vortex/undef_templates_solution_periodic_vortex.h	24;"	d
constructor_sol_peterson	simulation/test_case/solution/advection/peterson/def_templates_solution_advection_peterson.h	28;"	d
constructor_sol_peterson	simulation/test_case/solution/advection/peterson/def_templates_solution_advection_peterson.h	39;"	d
constructor_sol_peterson	simulation/test_case/solution/advection/peterson/solution_peterson_T.cpp	/^static struct Multiarray_T* constructor_sol_peterson$/;"	f	file:
constructor_sol_peterson	simulation/test_case/solution/advection/peterson/undef_templates_solution_advection_peterson.h	24;"	d
constructor_sol_restart	simulation/test_case/solution/restart/def_templates_restart.h	31;"	d
constructor_sol_restart	simulation/test_case/solution/restart/def_templates_restart.h	58;"	d
constructor_sol_restart	simulation/test_case/solution/restart/restart_T.cpp	/^static struct Multiarray_T* constructor_sol_restart$/;"	f	file:
constructor_sol_restart	simulation/test_case/solution/restart/undef_templates_restart.h	28;"	d
constructor_sol_restart_from_background	simulation/test_case/solution/restart/def_templates_restart.h	35;"	d
constructor_sol_restart_from_background	simulation/test_case/solution/restart/def_templates_restart.h	62;"	d
constructor_sol_restart_from_background	simulation/test_case/solution/restart/restart_T.cpp	/^static struct Multiarray_T* constructor_sol_restart_from_background$/;"	f	file:
constructor_sol_restart_from_background	simulation/test_case/solution/restart/undef_templates_restart.h	32;"	d
constructor_sol_start	simulation/test_case/test_case_T.h	/^	constructor_sol_fptr_T constructor_sol_start; \/\/\/< Pointer to function used to construct the starting solution data.$/;"	m	struct:Test_Case_T
constructor_sol_supersonic_vortex	simulation/test_case/solution/euler/supersonic_vortex/def_templates_solution_supersonic_vortex.h	28;"	d
constructor_sol_supersonic_vortex	simulation/test_case/solution/euler/supersonic_vortex/def_templates_solution_supersonic_vortex.h	42;"	d
constructor_sol_supersonic_vortex	simulation/test_case/solution/euler/supersonic_vortex/solution_supersonic_vortex_T.cpp	/^static struct Multiarray_T* constructor_sol_supersonic_vortex$/;"	f	file:
constructor_sol_supersonic_vortex	simulation/test_case/solution/euler/supersonic_vortex/undef_templates_solution_supersonic_vortex.h	23;"	d
constructor_sol_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	30;"	d
constructor_sol_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	48;"	d
constructor_sol_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^static struct Multiarray_T* constructor_sol_taylor_couette$/;"	f	file:
constructor_sol_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/undef_templates_solution_taylor_couette.h	25;"	d
constructor_sol_trigonometric	simulation/test_case/solution/burgers_inviscid/trigonometric/def_templates_solution_trigonometric.h	28;"	d
constructor_sol_trigonometric	simulation/test_case/solution/burgers_inviscid/trigonometric/def_templates_solution_trigonometric.h	39;"	d
constructor_sol_trigonometric	simulation/test_case/solution/burgers_inviscid/trigonometric/solution_trigonometric_T.cpp	/^static struct Multiarray_T* constructor_sol_trigonometric$/;"	f	file:
constructor_sol_trigonometric	simulation/test_case/solution/burgers_inviscid/trigonometric/undef_templates_solution_trigonometric.h	23;"	d
constructor_sol_v_T	simulation/test_case/solution/def_templates_solution.h	39;"	d
constructor_sol_v_T	simulation/test_case/solution/def_templates_solution.h	94;"	d
constructor_sol_v_T	simulation/test_case/solution/solution_T.cpp	/^struct Multiarray_T* constructor_sol_v_T$/;"	f
constructor_sol_v_T	simulation/test_case/solution/undef_templates_solution.h	38;"	d
constructor_sol_vc	simulation/solvers/compute_volume_rlhs_T.h	/^	constructor_sol_vc_fptr_T constructor_sol_vc;  \/\/\/< Pointer to the appropriate function.$/;"	m	struct:S_Params_Volume_Structor_T
constructor_sol_vc_col	simulation/solvers/compute_volume_rlhs_T.cpp	/^static const struct const_Multiarray_T* constructor_sol_vc_col (const struct Solver_Volume_T*const s_vol)$/;"	f	file:
constructor_sol_vc_col	simulation/solvers/def_templates_compute_volume_rlhs.h	45;"	d
constructor_sol_vc_col	simulation/solvers/def_templates_compute_volume_rlhs.h	81;"	d
constructor_sol_vc_col	simulation/solvers/undef_templates_compute_volume_rlhs.h	43;"	d
constructor_sol_vc_fptr_T	simulation/solvers/compute_volume_rlhs_T.h	/^typedef const struct const_Multiarray_T* (*constructor_sol_vc_fptr_T)$/;"	t	typeref:struct:constructor_sol_vc_fptr_T
constructor_sol_vc_fptr_T	simulation/solvers/def_templates_compute_volume_rlhs.h	27;"	d
constructor_sol_vc_fptr_T	simulation/solvers/def_templates_compute_volume_rlhs.h	63;"	d
constructor_sol_vc_fptr_T	simulation/solvers/undef_templates_compute_volume_rlhs.h	26;"	d
constructor_sol_vc_interp	simulation/solvers/compute_volume_rlhs_T.cpp	/^static const struct const_Multiarray_T* constructor_sol_vc_interp (const struct Solver_Volume_T*const s_vol)$/;"	f	file:
constructor_sol_vc_interp	simulation/solvers/def_templates_compute_volume_rlhs.h	43;"	d
constructor_sol_vc_interp	simulation/solvers/def_templates_compute_volume_rlhs.h	79;"	d
constructor_sol_vc_interp	simulation/solvers/undef_templates_compute_volume_rlhs.h	41;"	d
constructor_sol_vortex_advection	simulation/test_case/solution/advection/vortex_advection/def_templates_solution_vortex_advection.h	28;"	d
constructor_sol_vortex_advection	simulation/test_case/solution/advection/vortex_advection/def_templates_solution_vortex_advection.h	39;"	d
constructor_sol_vortex_advection	simulation/test_case/solution/advection/vortex_advection/solution_vortex_advection_T.cpp	/^static struct Multiarray_T* constructor_sol_vortex_advection$/;"	f	file:
constructor_sol_vortex_advection	simulation/test_case/solution/advection/vortex_advection/undef_templates_solution_vortex_advection.h	23;"	d
constructor_sol_vs_T	simulation/solvers/opg/compute_volume_rlhs_opg_T.cpp	/^static const struct const_Multiarray_T* constructor_sol_vs_T (const struct Solver_Volume_T*const s_vol)$/;"	f	file:
constructor_sol_vs_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	33;"	d
constructor_sol_vs_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	52;"	d
constructor_sol_vs_T	simulation/solvers/opg/undef_templates_compute_volume_rlhs_opg.h	29;"	d
constructor_source_advection_default_1d_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	34;"	d
constructor_source_advection_default_1d_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	52;"	d
constructor_source_advection_default_1d_T	simulation/test_case/solution/advection/solution_advection_default_T.cpp	/^static const struct const_Multiarray_T* constructor_source_advection_default_1d_T$/;"	f	file:
constructor_source_advection_default_1d_T	simulation/test_case/solution/advection/undef_templates_solution_advection_default.h	30;"	d
constructor_source_advection_default_2d_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	35;"	d
constructor_source_advection_default_2d_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	53;"	d
constructor_source_advection_default_2d_T	simulation/test_case/solution/advection/solution_advection_default_T.cpp	/^static const struct const_Multiarray_T* constructor_source_advection_default_2d_T$/;"	f	file:
constructor_source_advection_default_2d_T	simulation/test_case/solution/advection/undef_templates_solution_advection_default.h	31;"	d
constructor_source_advection_default_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	31;"	d
constructor_source_advection_default_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	49;"	d
constructor_source_advection_default_T	simulation/test_case/solution/advection/solution_advection_default_T.cpp	/^static const struct const_Multiarray_T* constructor_source_advection_default_T$/;"	f	file:
constructor_source_advection_default_T	simulation/test_case/solution/advection/undef_templates_solution_advection_default.h	27;"	d
constructor_source_diffusion_default_steady	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	34;"	d
constructor_source_diffusion_default_steady	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	60;"	d
constructor_source_diffusion_default_steady	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^static const struct const_Multiarray_T* constructor_source_diffusion_default_steady$/;"	f	file:
constructor_source_diffusion_default_steady	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	29;"	d
constructor_source_diffusion_default_steady_1d	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	37;"	d
constructor_source_diffusion_default_steady_1d	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	63;"	d
constructor_source_diffusion_default_steady_1d	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^static const struct const_Multiarray_T* constructor_source_diffusion_default_steady_1d$/;"	f	file:
constructor_source_diffusion_default_steady_1d	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	32;"	d
constructor_source_diffusion_default_steady_2d	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	40;"	d
constructor_source_diffusion_default_steady_2d	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	66;"	d
constructor_source_diffusion_default_steady_2d	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^static const struct const_Multiarray_T* constructor_source_diffusion_default_steady_2d$/;"	f	file:
constructor_source_diffusion_default_steady_2d	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	35;"	d
constructor_static_Boundary_Comp_Elem_Data_T	simulation/geometry/def_templates_geometry_blended.h	28;"	d
constructor_static_Boundary_Comp_Elem_Data_T	simulation/geometry/def_templates_geometry_blended.h	51;"	d
constructor_static_Boundary_Comp_Elem_Data_T	simulation/geometry/geometry_blended_T.cpp	/^struct Boundary_Comp_Elem_Data_T constructor_static_Boundary_Comp_Elem_Data_T$/;"	f
constructor_static_Boundary_Comp_Elem_Data_T	simulation/geometry/undef_templates_geometry_blended.h	23;"	d
constructor_sub_block_Matrix_T	containers/def_templates_matrix_constructors.h	124;"	d
constructor_sub_block_Matrix_T	containers/def_templates_matrix_constructors.h	52;"	d
constructor_sub_block_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_sub_block_Matrix_T$/;"	f
constructor_sub_block_Matrix_T	containers/undef_templates_matrix_constructors.h	48;"	d
constructor_sub_indices_Vector_i	element/element_operators_tp.cpp	/^static const struct const_Vector_i* constructor_sub_indices_Vector_i$/;"	f	file:
constructor_subset_const_Matrix_T	containers/def_templates_matrix_constructors.h	125;"	d
constructor_subset_const_Matrix_T	containers/def_templates_matrix_constructors.h	53;"	d
constructor_subset_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_subset_const_Matrix_T$/;"	f
constructor_subset_const_Matrix_T	containers/undef_templates_matrix_constructors.h	49;"	d
constructor_sum_Multiarrays_Multiarray_T	containers/def_templates_multiarray_constructors.h	130;"	d
constructor_sum_Multiarrays_Multiarray_T	containers/def_templates_multiarray_constructors.h	63;"	d
constructor_sum_Multiarrays_Multiarray_T	containers/multiarray_constructors_T.cpp	/^struct Multiarray_T* constructor_sum_Multiarrays_Multiarray_T$/;"	f
constructor_sum_Multiarrays_Multiarray_T	containers/undef_templates_multiarray_constructors.h	59;"	d
constructor_sum_Multiarrays_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	131;"	d
constructor_sum_Multiarrays_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	64;"	d
constructor_sum_Multiarrays_const_Multiarray_T	containers/multiarray_constructors_T.cpp	/^const struct const_Multiarray_T* constructor_sum_Multiarrays_const_Multiarray_T$/;"	f
constructor_sum_Multiarrays_const_Multiarray_T	containers/undef_templates_multiarray_constructors.h	60;"	d
constructor_sum_Vector_T_const_Matrix_T	containers/def_templates_vector_constructors.h	114;"	d
constructor_sum_Vector_T_const_Matrix_T	containers/def_templates_vector_constructors.h	56;"	d
constructor_sum_Vector_T_const_Matrix_T	containers/undef_templates_vector_constructors.h	53;"	d
constructor_sum_Vector_T_const_Matrix_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_sum_Vector_T_const_Matrix_T (const char sum_dir, const struct const_Matrix_T*const src)$/;"	f
constructor_sum_Vectors_Vector_T	containers/def_templates_vector_constructors.h	112;"	d
constructor_sum_Vectors_Vector_T	containers/def_templates_vector_constructors.h	54;"	d
constructor_sum_Vectors_Vector_T	containers/undef_templates_vector_constructors.h	51;"	d
constructor_sum_Vectors_Vector_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_sum_Vectors_Vector_T$/;"	f
constructor_sum_Vectors_const_Vector_T	containers/def_templates_vector_constructors.h	113;"	d
constructor_sum_Vectors_const_Vector_T	containers/def_templates_vector_constructors.h	55;"	d
constructor_sum_Vectors_const_Vector_T	containers/undef_templates_vector_constructors.h	52;"	d
constructor_sum_Vectors_const_Vector_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_sum_Vectors_const_Vector_T$/;"	f
constructor_sum_const_Vector_T_const_Matrix_T	containers/def_templates_vector_constructors.h	115;"	d
constructor_sum_const_Vector_T_const_Matrix_T	containers/def_templates_vector_constructors.h	57;"	d
constructor_sum_const_Vector_T_const_Matrix_T	containers/undef_templates_vector_constructors.h	54;"	d
constructor_sum_const_Vector_T_const_Matrix_T	containers/vector_constructors_T.cpp	/^const struct const_Vector_T* constructor_sum_const_Vector_T_const_Matrix_T$/;"	f
constructor_sysv_Matrix_T	containers/def_templates_matrix_constructors.h	135;"	d
constructor_sysv_Matrix_T	containers/def_templates_matrix_constructors.h	63;"	d
constructor_sysv_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_sysv_Matrix_T (struct Matrix_T* A_i, struct Matrix_T* B_i)$/;"	f
constructor_sysv_Matrix_T	containers/undef_templates_matrix_constructors.h	59;"	d
constructor_sysv_const_Matrix_T	containers/def_templates_matrix_constructors.h	136;"	d
constructor_sysv_const_Matrix_T	containers/def_templates_matrix_constructors.h	64;"	d
constructor_sysv_const_Matrix_T	containers/matrix_constructors_T.cpp	/^const struct const_Matrix_T* constructor_sysv_const_Matrix_T$/;"	f
constructor_sysv_const_Matrix_T	containers/undef_templates_matrix_constructors.h	60;"	d
constructor_test_diff_op_1v_opg_T	simulation/solvers/opg/compute_volume_rlhs_opg_T.cpp	/^static const struct const_Matrix_T* constructor_test_diff_op_1v_opg_T$/;"	f	file:
constructor_test_diff_op_1v_opg_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	26;"	d
constructor_test_diff_op_1v_opg_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	45;"	d
constructor_test_diff_op_1v_opg_T	simulation/solvers/opg/undef_templates_compute_volume_rlhs_opg.h	23;"	d
constructor_volume_centroids	simulation/computational_elements/volume.cpp	/^const struct const_Matrix_d* constructor_volume_centroids (const struct Simulation*const sim)$/;"	f
constructor_volume_list	simulation/test_case/solution/restart/def_templates_restart.h	36;"	d
constructor_volume_list	simulation/test_case/solution/restart/def_templates_restart.h	63;"	d
constructor_volume_list	simulation/test_case/solution/restart/restart_T.cpp	/^static void constructor_volume_list (struct Restart_Info*const ri)$/;"	f	file:
constructor_volume_list	simulation/test_case/solution/restart/undef_templates_restart.h	33;"	d
constructor_volume_metric_terms_T	simulation/geometry/def_templates_geometry.h	107;"	d
constructor_volume_metric_terms_T	simulation/geometry/def_templates_geometry.h	64;"	d
constructor_volume_metric_terms_T	simulation/geometry/geometry_T.cpp	/^static void constructor_volume_metric_terms_T (const char node_type, struct Solver_Volume_T*const s_vol)$/;"	f	file:
constructor_volume_metric_terms_T	simulation/geometry/undef_templates_geometry.h	58;"	d
constructor_volume_vertices	simulation/computational_elements/volume.cpp	/^static struct Multiarray_d* constructor_volume_vertices$/;"	f	file:
constructor_volume_xyz_min_max	simulation/computational_elements/volume.cpp	/^const struct const_Matrix_d* constructor_volume_xyz_min_max (const struct Simulation*const sim)$/;"	f
constructor_volumes_h_refine	simulation/solvers/adaptation/adaptation.cpp	/^static void constructor_volumes_h_refine$/;"	f	file:
constructor_w_detJ	simulation/test_case/compute_error/compute_error.cpp	/^static const struct const_Vector_d* constructor_w_detJ (const struct Solver_Volume* s_vol)$/;"	f	file:
constructor_w_detJ_face	simulation/test_case/compute_error/compute_error.cpp	/^static const struct const_Vector_d* constructor_w_detJ_face (const struct Solver_Face*const s_face)$/;"	f	file:
constructor_weights	element/nodes_operators.cpp	/^const struct const_Vector_d* constructor_weights$/;"	f
constructor_xyz	simulation/geometry/geometry_blended_T.h	/^	constructor_xyz_fptr_T constructor_xyz; \/\/\/< \\ref Test_Case_T::constructor_xyz.$/;"	m	struct:Blended_Parametric_Data_T
constructor_xyz	simulation/test_case/test_case_T.h	/^	constructor_xyz_fptr_T constructor_xyz;$/;"	m	struct:Test_Case_T
constructor_xyz	testing/integration/test_integration_fluxes.cpp	/^static const struct const_Multiarray_d* constructor_xyz ()$/;"	f	file:
constructor_xyz_blended_T	simulation/geometry/def_templates_geometry_blended.h	27;"	d
constructor_xyz_blended_T	simulation/geometry/def_templates_geometry_blended.h	50;"	d
constructor_xyz_blended_T	simulation/geometry/geometry_blended_T.cpp	/^const struct const_Multiarray_T* constructor_xyz_blended_T$/;"	f
constructor_xyz_blended_T	simulation/geometry/undef_templates_geometry_blended.h	22;"	d
constructor_xyz_blended_ce	simulation/geometry/def_templates_geometry_blended.h	36;"	d
constructor_xyz_blended_ce	simulation/geometry/def_templates_geometry_blended.h	59;"	d
constructor_xyz_blended_ce	simulation/geometry/geometry_blended_T.cpp	/^static const struct const_Multiarray_T* constructor_xyz_blended_ce$/;"	f	file:
constructor_xyz_blended_ce	simulation/geometry/undef_templates_geometry_blended.h	29;"	d
constructor_xyz_cylinder_parametric_T	simulation/geometry/def_templates_geometry_parametric.h	23;"	d
constructor_xyz_cylinder_parametric_T	simulation/geometry/def_templates_geometry_parametric.h	45;"	d
constructor_xyz_cylinder_parametric_T	simulation/geometry/geometry_parametric_T.cpp	/^const struct const_Multiarray_T* constructor_xyz_cylinder_parametric_T$/;"	f
constructor_xyz_cylinder_parametric_T	simulation/geometry/undef_templates_geometry_parametric.h	20;"	d
constructor_xyz_diff_T	simulation/geometry/def_templates_geometry_blended.h	39;"	d
constructor_xyz_diff_T	simulation/geometry/def_templates_geometry_blended.h	62;"	d
constructor_xyz_diff_T	simulation/geometry/geometry_blended_T.cpp	/^static const struct const_Matrix_T* constructor_xyz_diff_T$/;"	f	file:
constructor_xyz_diff_T	simulation/geometry/undef_templates_geometry_blended.h	32;"	d
constructor_xyz_f	simulation/test_case/solution/def_templates_solution.h	117;"	d
constructor_xyz_f	simulation/test_case/solution/def_templates_solution.h	58;"	d
constructor_xyz_f	simulation/test_case/solution/solution_T.cpp	/^static const struct const_Multiarray_T* constructor_xyz_f$/;"	f	file:
constructor_xyz_f	simulation/test_case/solution/undef_templates_solution.h	60;"	d
constructor_xyz_fc	simulation/geometry/def_templates_geometry.h	49;"	d
constructor_xyz_fc	simulation/geometry/def_templates_geometry.h	92;"	d
constructor_xyz_fc	simulation/geometry/geometry_T.cpp	/^static const struct const_Multiarray_T* constructor_xyz_fc$/;"	f	file:
constructor_xyz_fc	simulation/geometry/undef_templates_geometry.h	43;"	d
constructor_xyz_fc_on_exact_boundary	simulation/geometry/def_templates_geometry.h	50;"	d
constructor_xyz_fc_on_exact_boundary	simulation/geometry/def_templates_geometry.h	93;"	d
constructor_xyz_fc_on_exact_boundary	simulation/geometry/geometry_T.cpp	/^static const struct const_Multiarray_T* constructor_xyz_fc_on_exact_boundary$/;"	f	file:
constructor_xyz_fc_on_exact_boundary	simulation/geometry/undef_templates_geometry.h	44;"	d
constructor_xyz_fixed_cube_parametric_T	simulation/geometry/def_templates_geometry_parametric.h	22;"	d
constructor_xyz_fixed_cube_parametric_T	simulation/geometry/def_templates_geometry_parametric.h	44;"	d
constructor_xyz_fixed_cube_parametric_T	simulation/geometry/geometry_parametric_T.cpp	/^const struct const_Multiarray_T* constructor_xyz_fixed_cube_parametric_T$/;"	f
constructor_xyz_fixed_cube_parametric_T	simulation/geometry/undef_templates_geometry_parametric.h	19;"	d
constructor_xyz_fptr_T	simulation/geometry/def_templates_geometry.h	27;"	d
constructor_xyz_fptr_T	simulation/geometry/def_templates_geometry.h	70;"	d
constructor_xyz_fptr_T	simulation/geometry/geometry_T.h	/^typedef const struct const_Multiarray_T* (*constructor_xyz_fptr_T)$/;"	t	typeref:struct:constructor_xyz_fptr_T
constructor_xyz_fptr_T	simulation/geometry/undef_templates_geometry.h	24;"	d
constructor_xyz_from_rst_std	testing/unit/test_unit_inverse_mapping.cpp	/^static const struct const_Matrix_d* constructor_xyz_from_rst_std$/;"	f	file:
constructor_xyz_gaussian_bump_parametric_T	simulation/geometry/def_templates_geometry_parametric.h	28;"	d
constructor_xyz_gaussian_bump_parametric_T	simulation/geometry/def_templates_geometry_parametric.h	50;"	d
constructor_xyz_gaussian_bump_parametric_T	simulation/geometry/geometry_parametric_T.cpp	/^const struct const_Multiarray_T* constructor_xyz_gaussian_bump_parametric_T$/;"	f
constructor_xyz_gaussian_bump_parametric_T	simulation/geometry/undef_templates_geometry_parametric.h	25;"	d
constructor_xyz_joukowski_parametric_T	simulation/geometry/def_templates_geometry_parametric.h	27;"	d
constructor_xyz_joukowski_parametric_T	simulation/geometry/def_templates_geometry_parametric.h	49;"	d
constructor_xyz_joukowski_parametric_T	simulation/geometry/geometry_parametric_T.cpp	/^const struct const_Multiarray_T* constructor_xyz_joukowski_parametric_T$/;"	f
constructor_xyz_joukowski_parametric_T	simulation/geometry/undef_templates_geometry_parametric.h	24;"	d
constructor_xyz_p_ind_L2	simulation/solvers/opg/solve_opg.cpp	/^static const struct const_Multiarray_Vector_d* constructor_xyz_p_ind_L2 (const struct Simulation*const sim)$/;"	f	file:
constructor_xyz_s_ho_T	simulation/geometry/def_templates_geometry.h	36;"	d
constructor_xyz_s_ho_T	simulation/geometry/def_templates_geometry.h	79;"	d
constructor_xyz_s_ho_T	simulation/geometry/geometry_T.cpp	/^const struct const_Multiarray_T* constructor_xyz_s_ho_T$/;"	f
constructor_xyz_s_ho_T	simulation/geometry/undef_templates_geometry.h	32;"	d
constructor_xyz_sol_T	simulation/test_case/solution/def_templates_solution.h	37;"	d
constructor_xyz_sol_T	simulation/test_case/solution/def_templates_solution.h	92;"	d
constructor_xyz_sol_T	simulation/test_case/solution/solution_T.cpp	/^const struct const_Multiarray_T* constructor_xyz_sol_T$/;"	f
constructor_xyz_sol_T	simulation/test_case/solution/undef_templates_solution.h	36;"	d
constructor_xyz_surf_diff_T	simulation/geometry/def_templates_geometry_blended.h	31;"	d
constructor_xyz_surf_diff_T	simulation/geometry/def_templates_geometry_blended.h	54;"	d
constructor_xyz_surf_diff_T	simulation/geometry/geometry_blended_T.cpp	/^const struct const_Matrix_T* constructor_xyz_surf_diff_T$/;"	f
constructor_xyz_surf_diff_T	simulation/geometry/undef_templates_geometry_blended.h	26;"	d
constructor_xyz_surface	simulation/solvers/volume_solver_T.h	/^	constructor_xyz_surface_fptr_T constructor_xyz_surface;$/;"	m	struct:Solver_Volume_T
constructor_xyz_surface_cylinder_arc_length_T	simulation/geometry/def_templates_geometry_surface.h	29;"	d
constructor_xyz_surface_cylinder_arc_length_T	simulation/geometry/def_templates_geometry_surface.h	48;"	d
constructor_xyz_surface_cylinder_arc_length_T	simulation/geometry/geometry_surface_T.cpp	/^const struct const_Matrix_T* constructor_xyz_surface_cylinder_arc_length_T$/;"	f
constructor_xyz_surface_cylinder_arc_length_T	simulation/geometry/undef_templates_geometry_surface.h	24;"	d
constructor_xyz_surface_cylinder_normal_proj_T	simulation/geometry/def_templates_geometry_surface.h	30;"	d
constructor_xyz_surface_cylinder_normal_proj_T	simulation/geometry/def_templates_geometry_surface.h	49;"	d
constructor_xyz_surface_cylinder_normal_proj_T	simulation/geometry/geometry_surface_T.cpp	/^const struct const_Matrix_T* constructor_xyz_surface_cylinder_normal_proj_T$/;"	f
constructor_xyz_surface_cylinder_normal_proj_T	simulation/geometry/undef_templates_geometry_surface.h	25;"	d
constructor_xyz_surface_cylinder_radial_proj_T	simulation/geometry/def_templates_geometry_surface.h	28;"	d
constructor_xyz_surface_cylinder_radial_proj_T	simulation/geometry/def_templates_geometry_surface.h	47;"	d
constructor_xyz_surface_cylinder_radial_proj_T	simulation/geometry/geometry_surface_T.cpp	/^const struct const_Matrix_T* constructor_xyz_surface_cylinder_radial_proj_T$/;"	f
constructor_xyz_surface_cylinder_radial_proj_T	simulation/geometry/undef_templates_geometry_surface.h	23;"	d
constructor_xyz_surface_fptr_T	simulation/geometry/def_templates_geometry_surface.h	22;"	d
constructor_xyz_surface_fptr_T	simulation/geometry/def_templates_geometry_surface.h	41;"	d
constructor_xyz_surface_fptr_T	simulation/geometry/geometry_surface_T.h	/^typedef const struct const_Matrix_T* (*constructor_xyz_surface_fptr_T)$/;"	t	typeref:struct:constructor_xyz_surface_fptr_T
constructor_xyz_surface_fptr_T	simulation/geometry/undef_templates_geometry_surface.h	19;"	d
constructor_xyz_surface_mapped_T	simulation/geometry/def_templates_geometry_surface.h	27;"	d
constructor_xyz_surface_mapped_T	simulation/geometry/def_templates_geometry_surface.h	46;"	d
constructor_xyz_surface_mapped_T	simulation/geometry/geometry_surface_T.cpp	/^const struct const_Matrix_T* constructor_xyz_surface_mapped_T$/;"	f
constructor_xyz_surface_mapped_T	simulation/geometry/undef_templates_geometry_surface.h	22;"	d
constructor_xyz_trigonometric_cube_parametric_T	simulation/geometry/def_templates_geometry_parametric.h	24;"	d
constructor_xyz_trigonometric_cube_parametric_T	simulation/geometry/def_templates_geometry_parametric.h	46;"	d
constructor_xyz_trigonometric_cube_parametric_T	simulation/geometry/geometry_parametric_T.cpp	/^const struct const_Multiarray_T* constructor_xyz_trigonometric_cube_parametric_T$/;"	f
constructor_xyz_trigonometric_cube_parametric_T	simulation/geometry/undef_templates_geometry_parametric.h	21;"	d
constructor_xyz_trigonometric_cube_parametric_xl_T	simulation/geometry/def_templates_geometry_parametric.h	25;"	d
constructor_xyz_trigonometric_cube_parametric_xl_T	simulation/geometry/def_templates_geometry_parametric.h	47;"	d
constructor_xyz_trigonometric_cube_parametric_xl_T	simulation/geometry/geometry_parametric_T.cpp	/^const struct const_Multiarray_T* constructor_xyz_trigonometric_cube_parametric_xl_T$/;"	f
constructor_xyz_trigonometric_cube_parametric_xl_T	simulation/geometry/undef_templates_geometry_parametric.h	22;"	d
constructor_xyz_trigonometric_cube_parametric_xl_oct1_T	simulation/geometry/def_templates_geometry_parametric.h	26;"	d
constructor_xyz_trigonometric_cube_parametric_xl_oct1_T	simulation/geometry/def_templates_geometry_parametric.h	48;"	d
constructor_xyz_trigonometric_cube_parametric_xl_oct1_T	simulation/geometry/geometry_parametric_T.cpp	/^const struct const_Multiarray_T* constructor_xyz_trigonometric_cube_parametric_xl_oct1_T$/;"	f
constructor_xyz_trigonometric_cube_parametric_xl_oct1_T	simulation/geometry/undef_templates_geometry_parametric.h	23;"	d
constructor_xyz_v	simulation/test_case/solution/def_templates_solution.h	116;"	d
constructor_xyz_v	simulation/test_case/solution/def_templates_solution.h	57;"	d
constructor_xyz_v	simulation/test_case/solution/solution_T.cpp	/^const struct const_Multiarray_T* constructor_xyz_v$/;"	f
constructor_xyz_v	simulation/test_case/solution/undef_templates_solution.h	59;"	d
constructor_xyz_vc	simulation/solvers/compute_volume_rlhs_T.cpp	/^static const struct const_Multiarray_T* constructor_xyz_vc (const struct Solver_Volume_T*const s_vol)$/;"	f	file:
constructor_xyz_vc	simulation/solvers/def_templates_compute_volume_rlhs.h	47;"	d
constructor_xyz_vc	simulation/solvers/def_templates_compute_volume_rlhs.h	83;"	d
constructor_xyz_vc	simulation/solvers/undef_templates_compute_volume_rlhs.h	45;"	d
constructor_xyz_vc_interp_T	simulation/test_case/solution/def_templates_solution.h	44;"	d
constructor_xyz_vc_interp_T	simulation/test_case/solution/def_templates_solution.h	99;"	d
constructor_xyz_vc_interp_T	simulation/test_case/solution/solution_T.cpp	/^const struct const_Multiarray_T* constructor_xyz_vc_interp_T$/;"	f
constructor_xyz_vc_interp_T	simulation/test_case/solution/undef_templates_solution.h	43;"	d
constructor_xyz_vs_T	simulation/solvers/opg/compute_volume_rlhs_opg_T.cpp	/^static const struct const_Multiarray_T* constructor_xyz_vs_T (const struct Solver_Volume_T*const s_vol)$/;"	f	file:
constructor_xyz_vs_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	35;"	d
constructor_xyz_vs_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	54;"	d
constructor_xyz_vs_T	simulation/solvers/opg/undef_templates_compute_volume_rlhs_opg.h	31;"	d
constructor_zero_Matrix_R	containers/def_templates_matrix_constructors.h	172;"	d
constructor_zero_Matrix_R	containers/undef_templates_matrix_constructors.h	93;"	d
constructor_zero_Matrix_T	containers/def_templates_matrix_constructors.h	100;"	d
constructor_zero_Matrix_T	containers/def_templates_matrix_constructors.h	28;"	d
constructor_zero_Matrix_T	containers/matrix_constructors_T.cpp	/^struct Matrix_T* constructor_zero_Matrix_T (const char layout, const ptrdiff_t ext_0, const ptrdiff_t ext_1)$/;"	f
constructor_zero_Matrix_T	containers/undef_templates_matrix_constructors.h	24;"	d
constructor_zero_Multiarray_T	containers/def_templates_multiarray_constructors.h	106;"	d
constructor_zero_Multiarray_T	containers/def_templates_multiarray_constructors.h	199;"	d
constructor_zero_Multiarray_T	containers/def_templates_multiarray_constructors.h	39;"	d
constructor_zero_Multiarray_T	containers/multiarray_constructors_T.cpp	/^struct Multiarray_T* constructor_zero_Multiarray_T$/;"	f
constructor_zero_Multiarray_T	containers/undef_templates_multiarray_constructors.h	35;"	d
constructor_zero_Multiarray_T_dyn_extents	containers/def_templates_multiarray_constructors.h	107;"	d
constructor_zero_Multiarray_T_dyn_extents	containers/def_templates_multiarray_constructors.h	200;"	d
constructor_zero_Multiarray_T_dyn_extents	containers/def_templates_multiarray_constructors.h	40;"	d
constructor_zero_Multiarray_T_dyn_extents	containers/multiarray_constructors_T.cpp	/^struct Multiarray_T* constructor_zero_Multiarray_T_dyn_extents$/;"	f
constructor_zero_Multiarray_T_dyn_extents	containers/undef_templates_multiarray_constructors.h	36;"	d
constructor_zero_Vector_R	containers/def_templates_vector_constructors.h	134;"	d
constructor_zero_Vector_R	containers/undef_templates_vector_constructors.h	76;"	d
constructor_zero_Vector_T	containers/def_templates_vector_constructors.h	158;"	d
constructor_zero_Vector_T	containers/def_templates_vector_constructors.h	29;"	d
constructor_zero_Vector_T	containers/def_templates_vector_constructors.h	87;"	d
constructor_zero_Vector_T	containers/undef_templates_vector_constructors.h	26;"	d
constructor_zero_Vector_T	containers/vector_constructors_T.cpp	/^struct Vector_T* constructor_zero_Vector_T (const ptrdiff_t ext_0)$/;"	f
conv_order_discount	testing/integration/test_integration.h	/^	const double conv_order_discount; \/\/\/< The allowed convergence order discount.$/;"	m	struct:Integration_Test_Info
conv_order_inf_sup_accept	testing/integration/test_integration.h	/^	double conv_order_inf_sup_accept;$/;"	m	struct:Integration_Test_Info
conv_orders	testing/integration/test_integration_convergence_support.cpp	/^	                               * conv_orders; \/\/\/< The multiarray of convergence orders.$/;"	m	struct:Conv_Order_Data	typeref:struct:Conv_Order_Data::	file:
conv_study_extension	testing/integration/test_integration.h	/^	const char* conv_study_extension;$/;"	m	struct:Integration_Test_Info
convert_data	processing/post/convert_data.py	/^def convert_data (input_i,output_i):$/;"	f
convert_petsc_to_c0_opg	simulation/solvers/opg/solve_opg.cpp	/^static PetscErrorCode convert_petsc_to_c0_opg$/;"	f	file:
convert_to_Test_Case_rc	simulation/test_case/test_case_c.cpp	/^void convert_to_Test_Case_rc (struct Simulation* sim, const char type_rc_o)$/;"	f
convert_to_range	element/element_operators.cpp	/^static int convert_to_range (const char type_range, const char*const name_range)$/;"	f	file:
convert_to_range_ce	element/element_operators.cpp	/^static int convert_to_range_ce (const char ce_i, const char ce_o)$/;"	f	file:
convert_to_range_d	element/element_operators.cpp	/^static int convert_to_range_d (const char* name_type)$/;"	f	file:
convert_to_type	element/element_operators.cpp	/^static int convert_to_type (const char* name_type)$/;"	f	file:
convert_variables_T	simulation/test_case/solution/def_templates_solution.h	108;"	d
convert_variables_T	simulation/test_case/solution/def_templates_solution.h	71;"	d
convert_variables_T	simulation/test_case/solution/euler/def_templates_solution_euler.h	28;"	d
convert_variables_T	simulation/test_case/solution/euler/def_templates_solution_euler.h	35;"	d
convert_variables_T	simulation/test_case/solution/euler/solution_euler_T.cpp	/^void convert_variables_T (struct Multiarray_T* vars, const char type_i, const char type_o)$/;"	f
convert_variables_T	simulation/test_case/solution/euler/undef_templates_solution_euler.h	25;"	d
convert_variables_T	simulation/test_case/solution/undef_templates_solution.h	52;"	d
convert_variables_gradients_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	30;"	d
convert_variables_gradients_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	49;"	d
convert_variables_gradients_T	simulation/test_case/solution/navier_stokes/solution_navier_stokes_T.cpp	/^void convert_variables_gradients_T$/;"	f
convert_variables_gradients_T	simulation/test_case/solution/navier_stokes/undef_templates_solution_navier_stokes.h	25;"	d
convert_x_to_L2	simulation/solvers/solve_implicit.cpp	/^static PetscErrorCode convert_x_to_L2 (Vec* x, const struct Solver_Storage_Implicit*const ssi)$/;"	f	file:
copy_Node_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^static void copy_Node_ANN (const struct Node_ANN*const src, struct Node_ANN*const dest)$/;"	f	file:
copy_data_Vector_T_Vector_T	containers/def_templates_vector.h	121;"	d
copy_data_Vector_T_Vector_T	containers/def_templates_vector.h	48;"	d
copy_data_Vector_T_Vector_T	containers/def_templates_vector.h	79;"	d
copy_data_Vector_T_Vector_T	containers/undef_templates_vector.h	42;"	d
copy_data_Vector_T_Vector_T	containers/vector_T.cpp	/^void copy_data_Vector_T_Vector_T (const struct Vector_T*const src, struct Vector_T*const dest)$/;"	f
copy_error_files_for_conv_study	testing/integration/test_integration_convergence_support.cpp	/^static void copy_error_files_for_conv_study$/;"	f	file:
copy_initial_rhs	simulation/test_case/test_case_T.h	/^	const bool copy_initial_rhs;$/;"	m	struct:Test_Case_T
copy_into_Multiarray_T	containers/def_templates_multiarray.h	119;"	d
copy_into_Multiarray_T	containers/def_templates_multiarray.h	68;"	d
copy_into_Multiarray_T	containers/multiarray_T.cpp	/^void copy_into_Multiarray_T (struct Multiarray_T*const dest, const struct const_Multiarray_T*const src)$/;"	f
copy_into_Multiarray_T	containers/undef_templates_multiarray.h	64;"	d
copy_into_Multiarray_T_from_R	containers/def_templates_multiarray.h	120;"	d
copy_into_Multiarray_T_from_R	containers/def_templates_multiarray.h	69;"	d
copy_into_Multiarray_T_from_R	containers/multiarray_T.cpp	/^void copy_into_Multiarray_T_from_R (struct Multiarray_T*const dest, const struct const_Multiarray_R*const src)$/;"	f
copy_into_Multiarray_T_from_R	containers/undef_templates_multiarray.h	65;"	d
copy_members_computational_elements_dpg	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static void copy_members_computational_elements_dpg$/;"	f	file:
copy_members_r_to_c_DPG_Solver_Face	simulation/solvers/dpg/face_solver_dpg.cpp	/^void copy_members_r_to_c_DPG_Solver_Face$/;"	f
copy_members_r_to_c_DPG_Solver_Volume	simulation/solvers/dpg/volume_solver_dpg.cpp	/^void copy_members_r_to_c_DPG_Solver_Volume$/;"	f
copy_members_r_to_c_Solver_Face	simulation/solvers/face_solver.cpp	/^void copy_members_r_to_c_Solver_Face$/;"	f
copy_members_r_to_c_Solver_Volume	simulation/solvers/volume_solver.cpp	/^void copy_members_r_to_c_Solver_Volume$/;"	f
copy_rhs	simulation/solvers/solve.cpp	/^void copy_rhs (const struct Simulation*const sim, struct Solver_Storage_Implicit*const ssi)$/;"	f
corr_l2_c0	simulation/solvers/solve.h	/^	const struct const_Vector_i* corr_l2_c0;$/;"	m	struct:Solver_Storage_Implicit	typeref:struct:Solver_Storage_Implicit::const_Vector_i
correct_additional_non_conforming_face_geometry	simulation/solvers/adaptation/adaptation.cpp	/^static void correct_additional_non_conforming_face_geometry (const struct Simulation*const sim)$/;"	f	file:
correct_coef	simulation/solvers/solve.cpp	/^static void correct_coef (struct Multiarray_d*const coef, const double p_ho)$/;"	f	file:
correct_f_ve_for_periodic	simulation/mesh/mesh_periodic.cpp	/^void correct_f_ve_for_periodic (const struct Mesh_Data*const mesh_data, struct Conn_info*const conn_info)$/;"	f
correct_face_xyz_straight_T	simulation/geometry/def_templates_geometry.h	101;"	d
correct_face_xyz_straight_T	simulation/geometry/def_templates_geometry.h	58;"	d
correct_face_xyz_straight_T	simulation/geometry/geometry_T.cpp	/^static void correct_face_xyz_straight_T (struct Solver_Volume_T*const s_vol, const struct Simulation*const sim)$/;"	f	file:
correct_face_xyz_straight_T	simulation/geometry/undef_templates_geometry.h	52;"	d
correct_file_name_ml_p	simulation/test_case/compute_error/compute_error.cpp	/^void correct_file_name_ml_p (const int ml, const int p, char*const file_name)$/;"	f
correct_for_exact_normal_cylinder_T	simulation/geometry/def_templates_geometry_normals.h	27;"	d
correct_for_exact_normal_cylinder_T	simulation/geometry/def_templates_geometry_normals.h	43;"	d
correct_for_exact_normal_cylinder_T	simulation/geometry/geometry_normals_T.cpp	/^void correct_for_exact_normal_cylinder_T (struct Solver_Face_T*const s_face)$/;"	f
correct_for_exact_normal_cylinder_T	simulation/geometry/undef_templates_geometry_normals.h	22;"	d
correct_for_exact_normal_fptr_T	simulation/geometry/def_templates_geometry_normals.h	22;"	d
correct_for_exact_normal_fptr_T	simulation/geometry/def_templates_geometry_normals.h	38;"	d
correct_for_exact_normal_fptr_T	simulation/geometry/geometry_normals_T.h	/^typedef void (*correct_for_exact_normal_fptr_T)$/;"	t
correct_for_exact_normal_fptr_T	simulation/geometry/undef_templates_geometry_normals.h	19;"	d
correct_for_exact_normal_gaussian_bump_T	simulation/geometry/def_templates_geometry_normals.h	28;"	d
correct_for_exact_normal_gaussian_bump_T	simulation/geometry/def_templates_geometry_normals.h	44;"	d
correct_for_exact_normal_gaussian_bump_T	simulation/geometry/geometry_normals_T.cpp	/^void correct_for_exact_normal_gaussian_bump_T (struct Solver_Face_T*const s_face)$/;"	f
correct_for_exact_normal_gaussian_bump_T	simulation/geometry/undef_templates_geometry_normals.h	23;"	d
correct_for_exact_normals_T	simulation/geometry/def_templates_geometry.h	38;"	d
correct_for_exact_normals_T	simulation/geometry/def_templates_geometry.h	81;"	d
correct_for_exact_normals_T	simulation/geometry/geometry_T.cpp	/^void correct_for_exact_normals_T (const struct Simulation*const sim)$/;"	f
correct_for_exact_normals_T	simulation/geometry/undef_templates_geometry.h	34;"	d
correct_internal_xyz_blended_T	simulation/geometry/def_templates_geometry_blended.h	32;"	d
correct_internal_xyz_blended_T	simulation/geometry/def_templates_geometry_blended.h	55;"	d
correct_internal_xyz_blended_T	simulation/geometry/geometry_blended_T.cpp	/^void correct_internal_xyz_blended_T (struct Solver_Volume_T*const s_vol, const struct Simulation*const sim)$/;"	f
correct_internal_xyz_blended_T	simulation/geometry/undef_templates_geometry_blended.h	27;"	d
correct_invalid_test_case_parameters	simulation/test_case/def_templates_test_case.h	37;"	d
correct_invalid_test_case_parameters	simulation/test_case/def_templates_test_case.h	61;"	d
correct_invalid_test_case_parameters	simulation/test_case/test_case_T.cpp	/^static void correct_invalid_test_case_parameters (struct Test_Case_T* test_case, const struct Simulation* sim)$/;"	f	file:
correct_invalid_test_case_parameters	simulation/test_case/undef_templates_test_case.h	35;"	d
correct_mesh_vertices	simulation/mesh/mesh_vertices.cpp	/^static void correct_mesh_vertices$/;"	f	file:
correct_non_conforming_face_geometry	simulation/solvers/adaptation/adaptation.cpp	/^static void correct_non_conforming_face_geometry (const struct Solver_Face*const s_face, const int ml)$/;"	f	file:
correct_non_conforming_geometry	simulation/solvers/adaptation/adaptation.cpp	/^static void correct_non_conforming_geometry (const struct Simulation*const sim)$/;"	f	file:
correct_normals_fc	simulation/geometry/def_templates_geometry_normals.h	32;"	d
correct_normals_fc	simulation/geometry/def_templates_geometry_normals.h	48;"	d
correct_normals_fc	simulation/geometry/geometry_normals_T.cpp	/^static void correct_normals_fc (struct Solver_Face_T*const s_face)$/;"	f	file:
correct_normals_fc	simulation/geometry/undef_templates_geometry_normals.h	25;"	d
count_boundary_faces	simulation/mesh/mesh_connectivity.cpp	/^static ptrdiff_t count_boundary_faces$/;"	f	file:
count_elements_per_dim	simulation/mesh/mesh_readers.cpp	/^static struct Vector_i* count_elements_per_dim (const struct const_Vector_i*const elem_types)$/;"	f	file:
count_periodic_faces	simulation/mesh/mesh_periodic.cpp	/^static ptrdiff_t count_periodic_faces$/;"	f	file:
ctrl_name	simulation/simulation.h	/^	const char*const ctrl_name;            \/\/\/< Name of the control file.$/;"	m	struct:Simulation
ctrl_name	testing/integration/test_integration.h	/^	const char* ctrl_name; \/\/\/< The name of the control file used for the current test.$/;"	m	struct:Integration_Test_Info
ctrl_name_full	simulation/simulation.h	/^	const char* ctrl_name_full;            \/\/\/< Name of the control file (including full path and file extension).$/;"	m	struct:Simulation
cub_type	simulation/solvers/face_solver_T.h	/^	const char cub_type;$/;"	m	struct:Solver_Face_T
curved	simulation/computational_elements/face.h	/^	const bool curved;   \/\/\/< Flag for whether the face is curved.$/;"	m	struct:Face
curved	simulation/computational_elements/volume.h	/^	           curved;   \/\/\/< Flag for whether the volume is curved.$/;"	m	struct:Volume
cv0_ff_fc	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv0_ff_fc[2];   \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv0_vg_ev	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv0_vg_ev[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv0_vg_fc	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* cv0_vg_fc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
cv0_vg_ff	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* cv0_vg_ff[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
cv0_vg_vc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv0_vg_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv0_vg_vc	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv0_vg_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv0_vg_vc	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* cv0_vg_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
cv0_vg_vf	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* cv0_vg_vf[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
cv0_vg_vm	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv0_vg_vm[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv0_vg_vr	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* cv0_vg_vr[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
cv0_vg_vs	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv0_vg_vs[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv0_vg_vs	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv0_vg_vs[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv0_vg_vs	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* cv0_vg_vs[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
cv0_vg_vt	simulation/solvers/opg/element_solver_opg.h	/^	const struct Multiarray_Operator* cv0_vg_vt[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:OPG_Solver_Element	typeref:struct:OPG_Solver_Element::Multiarray_Operator
cv0_vg_vv	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv0_vg_vv[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv0_vg_vv	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv0_vg_vv[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv0_vgc_bgc	simulation/geometry/geometry_blended_T.h	/^	const struct Operator* cv0_vgc_bgc; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Boundary_Comp_Elem_Data_T	typeref:struct:Boundary_Comp_Elem_Data_T::Operator
cv0_vgc_fc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv0_vgc_fc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv0_vgc_fgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv0_vgc_fgc;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv0_vgc_fis	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv0_vgc_fis;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv0_vgc_vcs	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv0_vgc_vcs; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv0_vgc_vgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv0_vgc_vgc; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv0_vgc_vis	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv0_vgc_vis; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv0_vgc_vp	simulation/visualization/element_plotting.h	/^	const struct Multiarray_Operator* cv0_vgc_vp; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Plotting_Element	typeref:struct:Plotting_Element::Multiarray_Operator
cv0_vgs_fc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv0_vgs_fc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv0_vgs_vcc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv0_vgs_vcc; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv0_vgs_vp	simulation/visualization/element_plotting.h	/^	const struct Multiarray_Operator* cv0_vgs_vp; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Plotting_Element	typeref:struct:Plotting_Element::Multiarray_Operator
cv0_vr_fc	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv0_vr_fc[2];   \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv0_vr_vc	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv0_vr_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv0_vr_vp	simulation/visualization/element_plotting.h	/^	const struct Multiarray_Operator* cv0_vr_vp;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Plotting_Element	typeref:struct:Plotting_Element::Multiarray_Operator
cv0_vr_vs	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv0_vr_vs;    \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv0_vs_fc	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv0_vs_fc[2];   \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv0_vs_ff	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* cv0_vs_ff; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
cv0_vs_vc	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv0_vs_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv0_vs_vc	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* cv0_vs_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
cv0_vs_vf	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* cv0_vs_vf;    \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
cv0_vs_vp	simulation/visualization/element_plotting.h	/^	const struct Multiarray_Operator* cv0_vs_vp;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Plotting_Element	typeref:struct:Plotting_Element::Multiarray_Operator
cv0_vs_vs	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv0_vs_vs;    \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv0_vs_vs	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* cv0_vs_vs;    \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
cv0_vt_fc	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv0_vt_fc[2];   \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv0_vt_fc	simulation/solvers/opg/compute_face_rlhs_opg_T.h	/^	const struct const_Matrix_R* cv0_vt_fc[2];$/;"	m	struct:Lhs_Operators_OPG_T	typeref:struct:Lhs_Operators_OPG_T::const_Matrix_R
cv0_vt_vc	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv0_vt_vc[2];   \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv0_vt_vc	simulation/solvers/opg/element_solver_opg.h	/^	const struct Multiarray_Operator* cv0_vt_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:OPG_Solver_Element	typeref:struct:OPG_Solver_Element::Multiarray_Operator
cv0_vt_vp	simulation/visualization/element_plotting.h	/^	const struct Multiarray_Operator* cv0_vt_vp;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Plotting_Element	typeref:struct:Plotting_Element::Multiarray_Operator
cv0_vt_vs	simulation/solvers/opg/element_solver_opg.h	/^	const struct Multiarray_Operator* cv0_vt_vs;    \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:OPG_Solver_Element	typeref:struct:OPG_Solver_Element::Multiarray_Operator
cv1_vg_vc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv1_vg_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv1_vg_vm	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv1_vg_vm[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv1_vg_vs	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv1_vg_vs[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv1_vgc_fc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv1_vgc_fc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv1_vgs_fc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* cv1_vgs_fc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
cv1_vs_vc	simulation/solvers/dg/element_solver_dg.h	/^	const struct Multiarray_Operator* cv1_vs_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:DG_Solver_Element	typeref:struct:DG_Solver_Element::Multiarray_Operator
cv1_vt_fc	simulation/solvers/opg/element_solver_opg.h	/^	const struct Multiarray_Operator* cv1_vt_fc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:OPG_Solver_Element	typeref:struct:OPG_Solver_Element::Multiarray_Operator
cv1_vt_vc	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* cv1_vt_vc[2];   \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
cv1_vt_vc	simulation/solvers/opg/element_solver_opg.h	/^	const struct Multiarray_Operator* cv1_vt_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:OPG_Solver_Element	typeref:struct:OPG_Solver_Element::Multiarray_Operator
cv1_vt_vs	simulation/solvers/opg/element_solver_opg.h	/^	const struct Multiarray_Operator* cv1_vt_vs;    \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:OPG_Solver_Element	typeref:struct:OPG_Solver_Element::Multiarray_Operator
cv_type	simulation/test_case/solution/solution_T.h	/^	     cv_type,   \/\/\/< The format in which to return the solution. Options: 'c'oefficients, 'v'alues.$/;"	m	struct:Solution_Container_T
cvcv0_vs_vc	simulation/solvers/dpg/element_solver_dpg.h	/^	const struct Multiarray_Operator* cvcv0_vs_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:DPG_Solver_Element	typeref:struct:DPG_Solver_Element::Multiarray_Operator
cvcv1_vt_vc	simulation/solvers/dpg/element_solver_dpg.h	/^	const struct Multiarray_Operator* cvcv1_vt_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:DPG_Solver_Element	typeref:struct:DPG_Solver_Element::Multiarray_Operator
d	element/element.cpp	/^	    d,       \/\/\/< Defined in \\ref Element.$/;"	m	struct:Elem_info	file:
d	element/element.h	/^	          d,      \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
d	element/element.h	/^	    d,      \/\/\/< The dimension.$/;"	m	struct:Element
d	element/element_operators_tp.cpp	/^	const int d;      \/\/\/< The dimension of the input.$/;"	m	struct:Sub_Operator_Info	file:
d	simulation/geometry/geometry_parametric_T.cpp	/^	     d,     \/\/\/< Geometry parameter.$/;"	m	struct:Geo_Data	file:
d	simulation/mesh/mesh.h	/^	const int d,           \/\/\/< The dimension.$/;"	m	struct:Mesh_Input
d	simulation/mesh/mesh_connectivity.h	/^	const int d;                                    \/\/\/< The dimension.$/;"	m	struct:Conn_info
d	simulation/mesh/mesh_readers.h	/^	const int d;           \/\/\/< The dimension.$/;"	m	struct:Mesh_Data
d0	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	Type d0;               \/\/\/< 0th order derivative (i.e. the scalar value).$/;"	m	struct:Partials_Scalar	file:
d0	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	const Type* d0;              \/\/\/< 0th order derivative (i.e. the vector values).$/;"	m	struct:Partials_Vector	file:
d0	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	const Type*const* d0;              \/\/\/< 0th order derivative (i.e. the tensor values).$/;"	m	struct:Partials_Tensor	file:
d1_p3_EQ	testing/unit/test_unit_nodes.cpp	/^	const struct const_Nodes* d1_p3_EQ,  \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_TP	typeref:struct:Nodes_Data_TP::const_Nodes	file:
d1_p3_GL	testing/unit/test_unit_nodes.cpp	/^	                        * d1_p3_GL,  \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_TP	typeref:struct:Nodes_Data_TP::	file:
d1_p3_GLL	testing/unit/test_unit_nodes.cpp	/^	                        * d1_p3_GLL, \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_TP	typeref:struct:Nodes_Data_TP::	file:
d1g	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	const Type*const* d1g; \/\/\/< 1st order derivative wrt the 'g'radients.$/;"	m	struct:Partials_Scalar	file:
d1g	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	const Type*const*const* d1g; \/\/\/< 1st order derivative wrt the 'g'radients.$/;"	m	struct:Partials_Vector	file:
d1g	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	const Type*const*const*const* d1g; \/\/\/< 1st order derivative wrt the 'g'radients.$/;"	m	struct:Partials_Tensor	file:
d1s	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	const Type* d1s;       \/\/\/< 1st order derivative wrt the 's'olution.$/;"	m	struct:Partials_Scalar	file:
d1s	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	const Type*const* d1s;       \/\/\/< 1st order derivative wrt the 's'olution.$/;"	m	struct:Partials_Vector	file:
d1s	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	const Type*const*const* d1s;       \/\/\/< 1st order derivative wrt the 's'olution.$/;"	m	struct:Partials_Tensor	file:
d2_p3_AO	testing/unit/test_unit_nodes.cpp	/^	const struct const_Nodes* d2_p3_AO,  \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_SI	typeref:struct:Nodes_Data_SI::const_Nodes	file:
d2_p3_EQ	testing/unit/test_unit_nodes.cpp	/^	                        * d2_p3_EQ,  \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_SI	typeref:struct:Nodes_Data_SI::	file:
d2_p3_WSH	testing/unit/test_unit_nodes.cpp	/^	                        * d2_p3_WSH, \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_SI	typeref:struct:Nodes_Data_SI::	file:
d2_p4_EQ	testing/unit/test_unit_nodes.cpp	/^	                        * d2_p4_EQ,  \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_TP	typeref:struct:Nodes_Data_TP::	file:
d2_p4_GL	testing/unit/test_unit_nodes.cpp	/^	                        * d2_p4_GL,  \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_TP	typeref:struct:Nodes_Data_TP::	file:
d2_p4_GLL	testing/unit/test_unit_nodes.cpp	/^	                        * d2_p4_GLL, \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_TP	typeref:struct:Nodes_Data_TP::	file:
d2_p6_WV	testing/unit/test_unit_nodes.cpp	/^	                        * d2_p6_WV,  \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_SI	typeref:struct:Nodes_Data_SI::	file:
d2f_ds2	simulation/test_case/flux/flux_T.h	/^	const struct const_Multiarray_T* d2f_ds2; \/\/\/< The Hessian of the fluxes wrt the solution variables.$/;"	m	struct:Flux_T	typeref:struct:Flux_T::const_Multiarray_T
d2f_ds2	simulation/test_case/flux/flux_T.h	/^	struct Multiarray_T* d2f_ds2; \/\/\/< See brief.$/;"	m	struct:mutable_Flux_T	typeref:struct:mutable_Flux_T::Multiarray_T
d2fr_ds2	simulation/solvers/compute_rlhs_T.h	/^	const struct const_Multiarray_T* d2fr_ds2; \/\/\/< The reference flux Hessians  with respect to the solution.$/;"	m	struct:Flux_Ref_T	typeref:struct:Flux_Ref_T::const_Multiarray_T
d3_p2_AO	testing/unit/test_unit_nodes.cpp	/^	                        * d3_p2_AO,  \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_SI	typeref:struct:Nodes_Data_SI::	file:
d3_p2_GL	testing/unit/test_unit_nodes.cpp	/^	const struct const_Nodes* d3_p2_GL,  \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_PYR	typeref:struct:Nodes_Data_PYR::const_Nodes	file:
d3_p2_WSH	testing/unit/test_unit_nodes.cpp	/^	                        * d3_p2_WSH, \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_SI	typeref:struct:Nodes_Data_SI::	file:
d3_p3_EQ	testing/unit/test_unit_nodes.cpp	/^	                        * d3_p3_EQ,  \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_TP	typeref:struct:Nodes_Data_TP::	file:
d3_p3_GL	testing/unit/test_unit_nodes.cpp	/^	                        * d3_p3_GL;  \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_TP	typeref:struct:Nodes_Data_TP::	file:
d3_p3_GLL	testing/unit/test_unit_nodes.cpp	/^	                        * d3_p3_GLL, \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_PYR	typeref:struct:Nodes_Data_PYR::	file:
d3_p3_GLL	testing/unit/test_unit_nodes.cpp	/^	                        * d3_p3_GLL, \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_TP	typeref:struct:Nodes_Data_TP::	file:
d3_p4_WV	testing/unit/test_unit_nodes.cpp	/^	                        * d3_p4_WV;  \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_PYR	typeref:struct:Nodes_Data_PYR::	file:
d3_p4_WV	testing/unit/test_unit_nodes.cpp	/^	                        * d3_p4_WV;  \/\/\/< See \\ref definitions_nodes.h.$/;"	m	struct:Nodes_Data_SI	typeref:struct:Nodes_Data_SI::	file:
dN_ds	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^	const struct const_Matrix_T* dN_ds; \/\/\/< The Jacobian of the DPG norm operator wrt the solution coefficients.$/;"	m	struct:Norm_DPG	typeref:struct:Norm_DPG::const_Matrix_T	file:
dTdr_o	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^	     dTdr_o, \/\/\/< The gradient of the temperature in the radial direction at the 'o'uter cylinder boundary.$/;"	m	struct:Sol_Data__tc	file:
dTs_p	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	                            * dTs_p; \/\/\/< Partial derivatives for the scaled temperature gradients.$/;"	m	struct:Flux_Data_Navier_Stokes	typeref:struct:Flux_Data_Navier_Stokes::	file:
d_g_coef_f__d_s_coef	simulation/solvers/dg/face_solver_dg_T.h	/^		const struct const_Matrix_T* d_g_coef_f__d_s_coef[2][DIM];$/;"	m	struct:DG_Solver_Face_T::Neigh_Info_DG	typeref:struct:DG_Solver_Face_T::Neigh_Info_DG::const_Matrix_T
d_g_coef_v__d_s_coef	simulation/solvers/dg/volume_solver_dg_T.h	/^	const struct const_Matrix_T* d_g_coef_v__d_s_coef[DIM];$/;"	m	struct:DG_Solver_Volume_T	typeref:struct:DG_Solver_Volume_T::const_Matrix_T
data	containers/matrix_T.h	/^	Type* data;     \/\/\/< Defined in \\ref Matrix_T.$/;"	m	struct:Matrix_CSR_T
data	containers/matrix_T.h	/^	Type* data;     \/\/\/< The data.$/;"	m	struct:Matrix_T
data	containers/matrix_T.h	/^	const Type*const data;$/;"	m	struct:const_Matrix_CSR_T
data	containers/matrix_T.h	/^	const Type*const data;$/;"	m	struct:const_Matrix_T
data	containers/multiarray_T.h	/^	Type* data; \/\/\/< The data.$/;"	m	struct:Multiarray_T
data	containers/multiarray_T.h	/^	const Type*const data;$/;"	m	struct:const_Multiarray_T
data	containers/multiarray_T.h	/^	const struct const_Matrix_T*const*const data;$/;"	m	struct:const_Multiarray_Matrix_T
data	containers/multiarray_T.h	/^	const struct const_Vector_T*const*const data;$/;"	m	struct:const_Multiarray_Vector_T
data	containers/multiarray_T.h	/^	struct Matrix_T** data; \/\/\/< Defined in \\ref Multiarray_T.$/;"	m	struct:Multiarray_Matrix_T	typeref:struct:Multiarray_Matrix_T::Matrix_T
data	containers/multiarray_T.h	/^	struct Vector_T** data; \/\/\/< Defined in \\ref Multiarray_T.$/;"	m	struct:Multiarray_Vector_T	typeref:struct:Multiarray_Vector_T::Vector_T
data	containers/vector_T.h	/^	Type* data;     \/\/\/< Defined in \\ref Matrix_T.$/;"	m	struct:Vector_T
data	containers/vector_T.h	/^	const Type*const data;$/;"	m	struct:const_Vector_T
data	simulation/operators/multiarray_operator.cpp	/^	struct mutable_Operator** data; \/\/\/< Defined in \\ref Multiarray_Operator.$/;"	m	struct:mutable_Multiarray_Operator	typeref:struct:mutable_Multiarray_Operator::mutable_Operator	file:
data	simulation/operators/multiarray_operator.h	/^	const struct Operator*const*const data; \/\/\/< The array of pointers to \\ref Operator containers.$/;"	m	struct:Multiarray_Operator
delete_Node_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^static void delete_Node_ANN (const ptrdiff_t ext_0, struct Node_ANN*const src, const ptrdiff_t ind_d)$/;"	f	file:
derived	element/element.h	/^	const void*const derived; \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
derived	element/element.h	/^	void* derived; \/\/\/< Pointer to the element currently derived from the base element.$/;"	m	struct:Element
derived	intrusive/intrusive.h	/^	const struct const_Intrusive_Link*const derived; \/\/\/< Defined in \\ref Intrusive_Link.$/;"	m	struct:const_Intrusive_Link
derived	intrusive/intrusive.h	/^	struct Intrusive_Link* derived; \/\/\/< Pointer to the derived \\ref Intrusive_Link\\* if applicable.$/;"	m	struct:Intrusive_Link	typeref:struct:Intrusive_Link::Intrusive_Link
derived_comp_elem_method	testing/integration/test_integration_linearization.cpp	/^	const int derived_comp_elem_method;$/;"	m	struct:F_Ptrs_and_Data	file:
derived_elem_method	testing/integration/test_integration_linearization.cpp	/^	const int derived_elem_method;$/;"	m	struct:F_Ptrs_and_Data	file:
destruct_fully_Adaptive_Solver_Faces	simulation/solvers/adaptation/adaptation.cpp	/^static void destruct_fully_Adaptive_Solver_Faces$/;"	f	file:
destruct_fully_Adaptive_Solver_Volumes	simulation/solvers/adaptation/adaptation.cpp	/^static void destruct_fully_Adaptive_Solver_Volumes$/;"	f	file:
destruct_unused_computational_elements	simulation/solvers/adaptation/adaptation.cpp	/^static void destruct_unused_computational_elements (struct Simulation* sim)$/;"	f	file:
destructor_Basis_Data_PYR_Bezier	testing/unit/test_unit_bases.cpp	/^static void destructor_Basis_Data_PYR_Bezier (struct Basis_Data_PYR_Bezier* b_data)$/;"	f	file:
destructor_Basis_Data_PYR_Ortho	testing/unit/test_unit_bases.cpp	/^static void destructor_Basis_Data_PYR_Ortho (struct Basis_Data_PYR_Ortho* b_data)$/;"	f	file:
destructor_Basis_Data_SI_Bezier	testing/unit/test_unit_bases.cpp	/^static void destructor_Basis_Data_SI_Bezier (struct Basis_Data_SI_Bezier* b_data)$/;"	f	file:
destructor_Basis_Data_SI_Ortho	testing/unit/test_unit_bases.cpp	/^static void destructor_Basis_Data_SI_Ortho (struct Basis_Data_SI_Ortho* b_data)$/;"	f	file:
destructor_Basis_Data_TP_Bezier	testing/unit/test_unit_bases.cpp	/^static void destructor_Basis_Data_TP_Bezier (struct Basis_Data_TP_Bezier* b_data)$/;"	f	file:
destructor_Basis_Data_TP_Ortho	testing/unit/test_unit_bases.cpp	/^static void destructor_Basis_Data_TP_Ortho (struct Basis_Data_TP_Ortho* b_data)$/;"	f	file:
destructor_Boundary_Face	simulation/mesh/mesh_connectivity.cpp	/^static void destructor_Boundary_Face (struct Boundary_Face* bf)$/;"	f	file:
destructor_Boundary_Face_Info	simulation/mesh/mesh_connectivity.cpp	/^static void destructor_Boundary_Face_Info (struct Boundary_Face_Info* bf_info)$/;"	f	file:
destructor_Boundary_Value_Input_T	simulation/test_case/boundary/boundary_T.cpp	/^void destructor_Boundary_Value_Input_T (struct Boundary_Value_Input_T* bv_i)$/;"	f
destructor_Boundary_Value_Input_T	simulation/test_case/boundary/def_templates_boundary.h	104;"	d
destructor_Boundary_Value_Input_T	simulation/test_case/boundary/def_templates_boundary.h	37;"	d
destructor_Boundary_Value_Input_T	simulation/test_case/boundary/undef_templates_boundary.h	37;"	d
destructor_Boundary_Value_T	simulation/test_case/boundary/boundary_T.cpp	/^void destructor_Boundary_Value_T (struct Boundary_Value_T* bv)$/;"	f
destructor_Boundary_Value_T	simulation/test_case/boundary/def_templates_boundary.h	106;"	d
destructor_Boundary_Value_T	simulation/test_case/boundary/def_templates_boundary.h	39;"	d
destructor_Boundary_Value_T	simulation/test_case/boundary/undef_templates_boundary.h	39;"	d
destructor_Boundary_Value_c_data	testing/integration/test_integration_support_face.cpp	/^void destructor_Boundary_Value_c_data (struct Numerical_Flux_Input_c* num_flux_i)$/;"	f
destructor_Conn_info	simulation/mesh/mesh_connectivity.cpp	/^static void destructor_Conn_info (struct Conn_info* conn_info)$/;"	f	file:
destructor_Conv_Order_Data	testing/integration/test_integration_convergence_support.cpp	/^static void destructor_Conv_Order_Data (const struct Conv_Order_Data*const cod)$/;"	f	file:
destructor_Element	element/element.cpp	/^void destructor_Element (struct Element* element)$/;"	f
destructor_Elementary_Entity	simulation/mesh/mesh_readers.cpp	/^void destructor_Elementary_Entity (struct Elementary_Entity* elementary_entities)$/;"	f
destructor_Elements	element/element.cpp	/^void destructor_Elements (struct Intrusive_List* elements)$/;"	f
destructor_Elements_Info	simulation/test_case/solution/restart/restart_writers.cpp	/^static void destructor_Elements_Info (const struct Elements_Info*const elements_info)$/;"	f	file:
destructor_Error_CE	simulation/test_case/compute_error/compute_error.cpp	/^static void destructor_Error_CE (struct Error_CE* error_ce)$/;"	f	file:
destructor_Error_CE_Data	simulation/test_case/compute_error/compute_error.cpp	/^void destructor_Error_CE_Data (struct Error_CE_Data* e_ce_d)$/;"	f
destructor_Error_CE_Helper	simulation/test_case/compute_error/compute_error.cpp	/^void destructor_Error_CE_Helper (struct Error_CE_Helper* e_ce_h)$/;"	f
destructor_FE_Test_Data	testing/support/test_support_fe_init.cpp	/^static void destructor_FE_Test_Data (struct FE_Test_Data* fe_test_data)$/;"	f	file:
destructor_F_Ptrs_and_Data	testing/integration/test_integration_linearization.cpp	/^static void destructor_F_Ptrs_and_Data (struct F_Ptrs_and_Data* f_ptrs_data)$/;"	f	file:
destructor_Face	simulation/computational_elements/face.cpp	/^void destructor_Face (struct Face* face)$/;"	f
destructor_Face_link	simulation/computational_elements/face.cpp	/^static void destructor_Face_link (struct Face* face)$/;"	f	file:
destructor_Faces	simulation/computational_elements/face.cpp	/^void destructor_Faces (struct Intrusive_List* faces)$/;"	f
destructor_Flux_Input_T	simulation/test_case/flux/def_templates_flux.h	136;"	d
destructor_Flux_Input_T	simulation/test_case/flux/def_templates_flux.h	34;"	d
destructor_Flux_Input_T	simulation/test_case/flux/flux_T.cpp	/^void destructor_Flux_Input_T (struct Flux_Input_T* flux_i)$/;"	f
destructor_Flux_Input_T	simulation/test_case/flux/undef_templates_flux.h	33;"	d
destructor_Flux_Input_c_data_members	testing/integration/test_integration_fluxes.cpp	/^static void destructor_Flux_Input_c_data_members (struct Flux_Input_c*const flux_c_i)$/;"	f	file:
destructor_Flux_Input_data_f_T	simulation/solvers/compute_face_rlhs_T.cpp	/^void destructor_Flux_Input_data_f_T (struct Flux_Input_T*const flux_i)$/;"	f
destructor_Flux_Input_data_f_T	simulation/solvers/def_templates_compute_face_rlhs.h	42;"	d
destructor_Flux_Input_data_f_T	simulation/solvers/def_templates_compute_face_rlhs.h	73;"	d
destructor_Flux_Input_data_f_T	simulation/solvers/undef_templates_compute_face_rlhs.h	39;"	d
destructor_Flux_Input_data_members	testing/integration/test_integration_fluxes.cpp	/^static void destructor_Flux_Input_data_members (struct Flux_Input*const flux_i)$/;"	f	file:
destructor_Flux_Ref_T	simulation/solvers/compute_rlhs_T.cpp	/^void destructor_Flux_Ref_T (struct Flux_Ref_T*const flux_ref)$/;"	f
destructor_Flux_Ref_T	simulation/solvers/def_templates_compute_rlhs.h	27;"	d
destructor_Flux_Ref_T	simulation/solvers/def_templates_compute_rlhs.h	42;"	d
destructor_Flux_Ref_T	simulation/solvers/def_templates_compute_volume_rlhs.h	35;"	d
destructor_Flux_Ref_T	simulation/solvers/def_templates_compute_volume_rlhs.h	71;"	d
destructor_Flux_Ref_T	simulation/solvers/undef_templates_compute_rlhs.h	23;"	d
destructor_Flux_Ref_T	simulation/solvers/undef_templates_compute_volume_rlhs.h	34;"	d
destructor_Flux_T	simulation/test_case/flux/def_templates_flux.h	138;"	d
destructor_Flux_T	simulation/test_case/flux/def_templates_flux.h	36;"	d
destructor_Flux_T	simulation/test_case/flux/flux_T.cpp	/^void destructor_Flux_T (struct Flux_T* flux)$/;"	f
destructor_Flux_T	simulation/test_case/flux/undef_templates_flux.h	35;"	d
destructor_Fluxes_LR	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	137;"	d
destructor_Fluxes_LR	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	73;"	d
destructor_Fluxes_LR	simulation/solvers/numerical_flux/numerical_flux_central_T.cpp	/^static void destructor_Fluxes_LR (struct Fluxes_LR*const fluxes_lr)$/;"	f	file:
destructor_Fluxes_LR	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	70;"	d
destructor_Gen_Eig_Data	testing/support/simulation/solvers/test_support_solve.cpp	/^void destructor_Gen_Eig_Data (const struct Gen_Eig_Data*const ged)$/;"	f
destructor_Geom_Test_Data	testing/integration/test_integration_geometry.cpp	/^static void destructor_Geom_Test_Data (struct Geom_Test_Data* geom_test_data)$/;"	f	file:
destructor_IL	intrusive/intrusive.cpp	/^void destructor_IL (struct Intrusive_List* lst, const bool destruct_links)$/;"	f
destructor_IL_base	intrusive/intrusive.cpp	/^void destructor_IL_base (struct Intrusive_List* lst)$/;"	f
destructor_Input_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^void destructor_Input_ANN (struct Input_ANN*const ann_info)$/;"	f
destructor_Integration_Test_Info	testing/integration/test_integration.cpp	/^void destructor_Integration_Test_Info (struct Integration_Test_Info* int_test_info)$/;"	f
destructor_Inv_Map	simulation/test_case/solution/restart/inverse_mapping.cpp	/^static void destructor_Inv_Map (const struct Inv_Map*const im)$/;"	f	file:
destructor_Inv_Map_Data	testing/unit/test_unit_inverse_mapping.cpp	/^static void destructor_Inv_Map_Data (const struct Inv_Map_Data*const imd)$/;"	f	file:
destructor_Lhs_Operators_OPG_T	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^void destructor_Lhs_Operators_OPG_T (const struct Solver_Face_T*const s_face, const struct Lhs_Operators_OPG_T* ops)$/;"	f
destructor_Lhs_Operators_OPG_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	35;"	d
destructor_Lhs_Operators_OPG_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	64;"	d
destructor_Lhs_Operators_OPG_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	27;"	d
destructor_Matrix_R	containers/def_templates_matrix_constructors.h	188;"	d
destructor_Matrix_R	containers/undef_templates_matrix_constructors.h	109;"	d
destructor_Matrix_T	containers/def_templates_matrix_constructors.h	158;"	d
destructor_Matrix_T	containers/def_templates_matrix_constructors.h	224;"	d
destructor_Matrix_T	containers/def_templates_matrix_constructors.h	86;"	d
destructor_Matrix_T	containers/matrix_constructors_T.cpp	/^void destructor_Matrix_T (struct Matrix_T* a)$/;"	f
destructor_Matrix_T	containers/undef_templates_matrix_constructors.h	82;"	d
destructor_Mesh	simulation/mesh/mesh.cpp	/^void destructor_Mesh (struct Mesh* mesh)$/;"	f
destructor_Mesh_Connectivity	simulation/mesh/mesh_connectivity.cpp	/^void destructor_Mesh_Connectivity (struct Mesh_Connectivity* mesh_conn)$/;"	f
destructor_Mesh_Data	simulation/mesh/mesh_readers.cpp	/^void destructor_Mesh_Data (struct Mesh_Data* mesh_data)$/;"	f
destructor_Mesh_Input	testing/integration/test_integration_mesh.cpp	/^static void destructor_Mesh_Input (struct Mesh_Input* mesh_input)$/;"	f	file:
destructor_Mesh_Test_Data	testing/integration/test_integration_mesh.cpp	/^static void destructor_Mesh_Test_Data (struct Mesh_Test_Data* mesh_test_data)$/;"	f	file:
destructor_Mesh_Vertices	simulation/mesh/mesh_vertices.cpp	/^void destructor_Mesh_Vertices (struct Mesh_Vertices* mesh_vert)$/;"	f
destructor_Multiarray2_Operator	simulation/operators/multiarray_operator.cpp	/^void destructor_Multiarray2_Operator (const struct Multiarray_Operator* a[2])$/;"	f
destructor_Multiarray2_Operator_conditional	simulation/operators/multiarray_operator.cpp	/^void destructor_Multiarray2_Operator_conditional (const struct Multiarray_Operator* a[2])$/;"	f
destructor_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	149;"	d
destructor_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	227;"	d
destructor_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	82;"	d
destructor_Multiarray_Matrix_T	containers/multiarray_constructors_T.cpp	/^void destructor_Multiarray_Matrix_T (struct Multiarray_Matrix_T* a)$/;"	f
destructor_Multiarray_Matrix_T	containers/undef_templates_multiarray_constructors.h	78;"	d
destructor_Multiarray_Operator	simulation/operators/multiarray_operator.cpp	/^void destructor_Multiarray_Operator (const struct Multiarray_Operator* a)$/;"	f
destructor_Multiarray_Operator_conditional	simulation/operators/multiarray_operator.cpp	/^void destructor_Multiarray_Operator_conditional (const struct Multiarray_Operator* a)$/;"	f
destructor_Multiarray_R	containers/def_templates_multiarray_constructors.h	169;"	d
destructor_Multiarray_R	containers/undef_templates_multiarray_constructors.h	94;"	d
destructor_Multiarray_T	containers/def_templates_multiarray_constructors.h	141;"	d
destructor_Multiarray_T	containers/def_templates_multiarray_constructors.h	221;"	d
destructor_Multiarray_T	containers/def_templates_multiarray_constructors.h	74;"	d
destructor_Multiarray_T	containers/multiarray_constructors_T.cpp	/^void destructor_Multiarray_T (const struct Multiarray_T* a)$/;"	f
destructor_Multiarray_T	containers/undef_templates_multiarray_constructors.h	70;"	d
destructor_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	145;"	d
destructor_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	223;"	d
destructor_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	78;"	d
destructor_Multiarray_Vector_T	containers/multiarray_constructors_T.cpp	/^void destructor_Multiarray_Vector_T (struct Multiarray_Vector_T* a)$/;"	f
destructor_Multiarray_Vector_T	containers/undef_templates_multiarray_constructors.h	74;"	d
destructor_NULL	simulation/solvers/compute_volume_rlhs_T.cpp	/^static void destructor_NULL (const struct const_Multiarray_T* sol_vc)$/;"	f	file:
destructor_NULL	simulation/solvers/def_templates_compute_volume_rlhs.h	48;"	d
destructor_NULL	simulation/solvers/def_templates_compute_volume_rlhs.h	84;"	d
destructor_NULL	simulation/solvers/undef_templates_compute_volume_rlhs.h	46;"	d
destructor_Nodes	element/nodes.cpp	/^void destructor_Nodes (struct Nodes* nodes)$/;"	f
destructor_Nodes_Data_PYR	testing/unit/test_unit_nodes.cpp	/^static void destructor_Nodes_Data_PYR (struct Nodes_Data_PYR* nodes_data)$/;"	f	file:
destructor_Nodes_Data_SI	testing/unit/test_unit_nodes.cpp	/^static void destructor_Nodes_Data_SI (struct Nodes_Data_SI* nodes_data)$/;"	f	file:
destructor_Nodes_Data_TP	testing/unit/test_unit_nodes.cpp	/^static void destructor_Nodes_Data_TP (struct Nodes_Data_TP* nodes_data)$/;"	f	file:
destructor_Nodes_FC_Data	testing/unit/test_unit_nodes.cpp	/^static void destructor_Nodes_FC_Data (struct Nodes_FC_Data* nodes_fc_data)$/;"	f	file:
destructor_Nodes_Info	simulation/test_case/solution/restart/restart_writers.cpp	/^static void destructor_Nodes_Info (const struct Nodes_Info*const nodes_info)$/;"	f	file:
destructor_Nodes_Sorted_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^void destructor_Nodes_Sorted_ANN (const struct Nodes_Sorted_ANN*const nsa)$/;"	f
destructor_Norm_DPG	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static void destructor_Norm_DPG (const struct Norm_DPG* norm)$/;"	f	file:
destructor_Norm_DPG	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	54;"	d
destructor_Norm_DPG	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	96;"	d
destructor_Norm_DPG	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	49;"	d
destructor_Norm_DPG	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	49;"	d
destructor_Numerical_Flux_Input_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	100;"	d
destructor_Numerical_Flux_Input_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	36;"	d
destructor_Numerical_Flux_Input_T	simulation/solvers/numerical_flux/numerical_flux_T.cpp	/^void destructor_Numerical_Flux_Input_T (struct Numerical_Flux_Input_T* num_flux_i)$/;"	f
destructor_Numerical_Flux_Input_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	34;"	d
destructor_Numerical_Flux_Input_c_data_members	testing/integration/test_integration_support_face.cpp	/^void destructor_Numerical_Flux_Input_c_data_members (struct Numerical_Flux_Input_c*const num_flux_c_i, const char side)$/;"	f
destructor_Numerical_Flux_Input_data_T	simulation/solvers/compute_face_rlhs_T.cpp	/^void destructor_Numerical_Flux_Input_data_T (struct Numerical_Flux_Input_T* num_flux_i)$/;"	f
destructor_Numerical_Flux_Input_data_T	simulation/solvers/def_templates_compute_face_rlhs.h	35;"	d
destructor_Numerical_Flux_Input_data_T	simulation/solvers/def_templates_compute_face_rlhs.h	66;"	d
destructor_Numerical_Flux_Input_data_T	simulation/solvers/undef_templates_compute_face_rlhs.h	32;"	d
destructor_Numerical_Flux_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	103;"	d
destructor_Numerical_Flux_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	39;"	d
destructor_Numerical_Flux_T	simulation/solvers/numerical_flux/numerical_flux_T.cpp	/^void destructor_Numerical_Flux_T (struct Numerical_Flux_T* num_flux)$/;"	f
destructor_Numerical_Flux_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	37;"	d
destructor_Operator	simulation/operators/operator.cpp	/^void destructor_Operator (const struct Operator* op)$/;"	f
destructor_Operator_Info	element/element_operators.cpp	/^void destructor_Operator_Info (struct Operator_Info* op_info)$/;"	f
destructor_Periodic_Face	simulation/mesh/mesh_periodic.cpp	/^void destructor_Periodic_Face (struct Periodic_Face* pf)$/;"	f
destructor_Periodic_Face_Info	simulation/mesh/mesh_periodic.cpp	/^static void destructor_Periodic_Face_Info (struct Periodic_Face_Info* pf_info)$/;"	f	file:
destructor_Plotting_Nodes	element/nodes_plotting.cpp	/^static void destructor_Plotting_Nodes (struct Plotting_Nodes* p_nodes)$/;"	f	file:
destructor_Plotting_Nodes_Data	testing/unit/test_unit_nodes.cpp	/^static void destructor_Plotting_Nodes_Data (struct Plotting_Nodes_Data* p_nodes_data)$/;"	f	file:
destructor_Plotting_Nodes_part	element/nodes_plotting.cpp	/^static void destructor_Plotting_Nodes_part (struct Plotting_Nodes* p_nodes)$/;"	f	file:
destructor_SSS_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^static void destructor_SSS_ANN (const struct SSS_ANN*const sss)$/;"	f	file:
destructor_SSS_ANN_b	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^void destructor_SSS_ANN_b (const struct SSS_ANN*const sss)$/;"	f
destructor_SSS_ANN_s	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^void destructor_SSS_ANN_s (const struct SSS_ANN*const sss)$/;"	f
destructor_SSS_ANN_xyz	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^void destructor_SSS_ANN_xyz (const struct SSS_ANN*const sss)$/;"	f
destructor_Schur_Data	simulation/solvers/solve_implicit.cpp	/^static void destructor_Schur_Data (Vec b, struct Schur_Data* schur_data)$/;"	f	file:
destructor_Semi_Norm_DPG	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static void destructor_Semi_Norm_DPG (const struct Semi_Norm_DPG* sn)$/;"	f	file:
destructor_Semi_Norm_DPG	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	57;"	d
destructor_Semi_Norm_DPG	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	99;"	d
destructor_Semi_Norm_DPG	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	52;"	d
destructor_Simulation	simulation/simulation.cpp	/^void destructor_Simulation (struct Simulation* sim)$/;"	f
destructor_Simulation_c_comp_elems	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static void destructor_Simulation_c_comp_elems (struct Simulation*const sim_c)$/;"	f	file:
destructor_Solver_Storage_Implicit	simulation/solvers/solve.cpp	/^void destructor_Solver_Storage_Implicit (struct Solver_Storage_Implicit* ssi)$/;"	f
destructor_Solver_Volume_exact	simulation/test_case/compute_error/compute_error.cpp	/^static void destructor_Solver_Volume_exact (struct Solver_Volume* s_vol_ex)$/;"	f	file:
destructor_Test_Case_T	simulation/test_case/def_templates_test_case.h	27;"	d
destructor_Test_Case_T	simulation/test_case/def_templates_test_case.h	51;"	d
destructor_Test_Case_T	simulation/test_case/test_case_T.cpp	/^void destructor_Test_Case_T (const struct Test_Case_T* test_case)$/;"	f
destructor_Test_Case_T	simulation/test_case/undef_templates_test_case.h	26;"	d
destructor_Test_Case_rc_real	simulation/test_case/test_case.cpp	/^void destructor_Test_Case_rc_real (struct Test_Case_rc* test_case_rc)$/;"	f
destructor_VDV	simulation/visualization/visualization.cpp	/^static void destructor_VDV (const struct Volume_Data_Vis* vdv)$/;"	f	file:
destructor_Vector_R	containers/def_templates_vector_constructors.h	142;"	d
destructor_Vector_R	containers/undef_templates_vector_constructors.h	84;"	d
destructor_Vector_T	containers/def_templates_vector_constructors.h	125;"	d
destructor_Vector_T	containers/def_templates_vector_constructors.h	177;"	d
destructor_Vector_T	containers/def_templates_vector_constructors.h	72;"	d
destructor_Vector_T	containers/undef_templates_vector_constructors.h	69;"	d
destructor_Vector_T	containers/vector_constructors_T.cpp	/^void destructor_Vector_T (struct Vector_T* a)$/;"	f
destructor_Vector_T_indexed	containers/def_templates_multiarray.h	167;"	d
destructor_Vector_T_indexed	containers/def_templates_multiarray.h	40;"	d
destructor_Vector_T_indexed	containers/def_templates_multiarray.h	91;"	d
destructor_Vector_T_indexed	containers/multiarray_T.cpp	/^static void destructor_Vector_T_indexed (struct Vector_T_indexed** src, const ptrdiff_t size)$/;"	f	file:
destructor_Vector_T_indexed	containers/undef_templates_multiarray.h	36;"	d
destructor_Vertex_Correspondence	simulation/computational_elements/face.cpp	/^static void destructor_Vertex_Correspondence (struct Vertex_Correspondence* vert_corr)$/;"	f	file:
destructor_Volume	simulation/computational_elements/volume.cpp	/^void destructor_Volume (struct Volume* vol)$/;"	f
destructor_Volume_link	simulation/computational_elements/volume.cpp	/^static void destructor_Volume_link (struct Volume* volume)$/;"	f	file:
destructor_Volumes	simulation/computational_elements/volume.cpp	/^void destructor_Volumes (struct Intrusive_List* volumes)$/;"	f
destructor_b_faces	simulation/mesh/mesh_connectivity.cpp	/^static void destructor_b_faces (const ptrdiff_t n_bf, struct Boundary_Face** src)$/;"	f	file:
destructor_conditional_Flux_T	simulation/test_case/flux/def_templates_flux.h	139;"	d
destructor_conditional_Flux_T	simulation/test_case/flux/def_templates_flux.h	37;"	d
destructor_conditional_Flux_T	simulation/test_case/flux/flux_T.cpp	/^void destructor_conditional_Flux_T (struct Flux_T* flux)$/;"	f
destructor_conditional_Flux_T	simulation/test_case/flux/undef_templates_flux.h	36;"	d
destructor_conditional_Matrix_T	containers/def_templates_matrix_constructors.h	160;"	d
destructor_conditional_Matrix_T	containers/def_templates_matrix_constructors.h	88;"	d
destructor_conditional_Matrix_T	containers/matrix_constructors_T.cpp	/^void destructor_conditional_Matrix_T (struct Matrix_T* a)$/;"	f
destructor_conditional_Matrix_T	containers/undef_templates_matrix_constructors.h	84;"	d
destructor_conditional_Multiarray_R	containers/def_templates_multiarray_constructors.h	171;"	d
destructor_conditional_Multiarray_R	containers/undef_templates_multiarray_constructors.h	96;"	d
destructor_conditional_Multiarray_T	containers/def_templates_multiarray_constructors.h	143;"	d
destructor_conditional_Multiarray_T	containers/def_templates_multiarray_constructors.h	76;"	d
destructor_conditional_Multiarray_T	containers/multiarray_constructors_T.cpp	/^void destructor_conditional_Multiarray_T (struct Multiarray_T* a)$/;"	f
destructor_conditional_Multiarray_T	containers/undef_templates_multiarray_constructors.h	72;"	d
destructor_conditional_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	147;"	d
destructor_conditional_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	225;"	d
destructor_conditional_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	80;"	d
destructor_conditional_Multiarray_Vector_T	containers/multiarray_constructors_T.cpp	/^void destructor_conditional_Multiarray_Vector_T (struct Multiarray_Vector_T*const a)$/;"	f
destructor_conditional_Multiarray_Vector_T	containers/undef_templates_multiarray_constructors.h	76;"	d
destructor_conditional_Vector_T	containers/def_templates_vector_constructors.h	127;"	d
destructor_conditional_Vector_T	containers/def_templates_vector_constructors.h	179;"	d
destructor_conditional_Vector_T	containers/def_templates_vector_constructors.h	74;"	d
destructor_conditional_Vector_T	containers/undef_templates_vector_constructors.h	71;"	d
destructor_conditional_Vector_T	containers/vector_constructors_T.cpp	/^void destructor_conditional_Vector_T (struct Vector_T* a)$/;"	f
destructor_conditional_const_Matrix_R	containers/def_templates_matrix_constructors.h	190;"	d
destructor_conditional_const_Matrix_R	containers/undef_templates_matrix_constructors.h	111;"	d
destructor_conditional_const_Matrix_T	containers/def_templates_matrix_constructors.h	161;"	d
destructor_conditional_const_Matrix_T	containers/def_templates_matrix_constructors.h	89;"	d
destructor_conditional_const_Matrix_T	containers/matrix_constructors_T.cpp	/^void destructor_conditional_const_Matrix_T (const struct const_Matrix_T* a)$/;"	f
destructor_conditional_const_Matrix_T	containers/undef_templates_matrix_constructors.h	85;"	d
destructor_conditional_const_Multiarray_R	containers/def_templates_multiarray_constructors.h	172;"	d
destructor_conditional_const_Multiarray_R	containers/undef_templates_multiarray_constructors.h	97;"	d
destructor_conditional_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	144;"	d
destructor_conditional_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	77;"	d
destructor_conditional_const_Multiarray_T	containers/multiarray_constructors_T.cpp	/^void destructor_conditional_const_Multiarray_T (const struct const_Multiarray_T* a)$/;"	f
destructor_conditional_const_Multiarray_T	containers/undef_templates_multiarray_constructors.h	73;"	d
destructor_conditional_const_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	148;"	d
destructor_conditional_const_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	226;"	d
destructor_conditional_const_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	81;"	d
destructor_conditional_const_Multiarray_Vector_T	containers/multiarray_constructors_T.cpp	/^void destructor_conditional_const_Multiarray_Vector_T (const struct const_Multiarray_Vector_T*const a)$/;"	f
destructor_conditional_const_Multiarray_Vector_T	containers/undef_templates_multiarray_constructors.h	77;"	d
destructor_conditional_const_Vector_T	containers/def_templates_vector_constructors.h	128;"	d
destructor_conditional_const_Vector_T	containers/def_templates_vector_constructors.h	180;"	d
destructor_conditional_const_Vector_T	containers/def_templates_vector_constructors.h	75;"	d
destructor_conditional_const_Vector_T	containers/undef_templates_vector_constructors.h	72;"	d
destructor_conditional_const_Vector_T	containers/vector_constructors_T.cpp	/^void destructor_conditional_const_Vector_T (const struct const_Vector_T* a)$/;"	f
destructor_const_Elements	element/element.cpp	/^void destructor_const_Elements (const struct const_Intrusive_List* elements)$/;"	f
destructor_const_IL	intrusive/intrusive.cpp	/^void destructor_const_IL (const struct const_Intrusive_List* lst, const bool destruct_links)$/;"	f
destructor_const_IL_base	intrusive/intrusive.cpp	/^void destructor_const_IL_base (const struct const_Intrusive_List* lst)$/;"	f
destructor_const_Matrix_R	containers/def_templates_matrix_constructors.h	189;"	d
destructor_const_Matrix_R	containers/undef_templates_matrix_constructors.h	110;"	d
destructor_const_Matrix_T	containers/def_templates_matrix_constructors.h	159;"	d
destructor_const_Matrix_T	containers/def_templates_matrix_constructors.h	225;"	d
destructor_const_Matrix_T	containers/def_templates_matrix_constructors.h	87;"	d
destructor_const_Matrix_T	containers/matrix_constructors_T.cpp	/^void destructor_const_Matrix_T (const struct const_Matrix_T* a)$/;"	f
destructor_const_Matrix_T	containers/undef_templates_matrix_constructors.h	83;"	d
destructor_const_Multiarray2_Matrix_T	containers/def_templates_multiarray_constructors.h	151;"	d
destructor_const_Multiarray2_Matrix_T	containers/def_templates_multiarray_constructors.h	229;"	d
destructor_const_Multiarray2_Matrix_T	containers/def_templates_multiarray_constructors.h	84;"	d
destructor_const_Multiarray2_Matrix_T	containers/multiarray_constructors_T.cpp	/^void destructor_const_Multiarray2_Matrix_T (const struct const_Multiarray_Matrix_T* a[2])$/;"	f
destructor_const_Multiarray2_Matrix_T	containers/undef_templates_multiarray_constructors.h	80;"	d
destructor_const_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	150;"	d
destructor_const_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	228;"	d
destructor_const_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	83;"	d
destructor_const_Multiarray_Matrix_T	containers/multiarray_constructors_T.cpp	/^void destructor_const_Multiarray_Matrix_T (const struct const_Multiarray_Matrix_T* a)$/;"	f
destructor_const_Multiarray_Matrix_T	containers/undef_templates_multiarray_constructors.h	79;"	d
destructor_const_Multiarray_R	containers/def_templates_multiarray_constructors.h	170;"	d
destructor_const_Multiarray_R	containers/undef_templates_multiarray_constructors.h	95;"	d
destructor_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	142;"	d
destructor_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	222;"	d
destructor_const_Multiarray_T	containers/def_templates_multiarray_constructors.h	75;"	d
destructor_const_Multiarray_T	containers/multiarray_constructors_T.cpp	/^void destructor_const_Multiarray_T (const struct const_Multiarray_T* a)$/;"	f
destructor_const_Multiarray_T	containers/undef_templates_multiarray_constructors.h	71;"	d
destructor_const_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	146;"	d
destructor_const_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	224;"	d
destructor_const_Multiarray_Vector_T	containers/def_templates_multiarray_constructors.h	79;"	d
destructor_const_Multiarray_Vector_T	containers/multiarray_constructors_T.cpp	/^void destructor_const_Multiarray_Vector_T (const struct const_Multiarray_Vector_T* a)$/;"	f
destructor_const_Multiarray_Vector_T	containers/undef_templates_multiarray_constructors.h	75;"	d
destructor_const_Nodes	element/nodes.cpp	/^void destructor_const_Nodes (const struct const_Nodes*const nodes)$/;"	f
destructor_const_Plotting_Nodes	element/nodes_plotting.cpp	/^void destructor_const_Plotting_Nodes (const struct const_Plotting_Nodes*const p_nodes)$/;"	f
destructor_const_Plotting_Nodes_part	element/nodes_plotting.cpp	/^void destructor_const_Plotting_Nodes_part (const struct const_Plotting_Nodes*const p_nodes)$/;"	f
destructor_const_Vector_R	containers/def_templates_vector_constructors.h	143;"	d
destructor_const_Vector_R	containers/undef_templates_vector_constructors.h	85;"	d
destructor_const_Vector_T	containers/def_templates_vector_constructors.h	126;"	d
destructor_const_Vector_T	containers/def_templates_vector_constructors.h	178;"	d
destructor_const_Vector_T	containers/def_templates_vector_constructors.h	73;"	d
destructor_const_Vector_T	containers/undef_templates_vector_constructors.h	70;"	d
destructor_const_Vector_T	containers/vector_constructors_T.cpp	/^void destructor_const_Vector_T (const struct const_Vector_T* a)$/;"	f
destructor_derived_Adaptation_Element	simulation/solvers/adaptation/element_adaptation.cpp	/^void destructor_derived_Adaptation_Element (struct Element* element_ptr)$/;"	f
destructor_derived_Adaptive_Solver_Face	simulation/solvers/adaptation/face_solver_adaptive.cpp	/^void destructor_derived_Adaptive_Solver_Face (struct Face* face_ptr)$/;"	f
destructor_derived_Adaptive_Solver_Volume	simulation/solvers/adaptation/volume_solver_adaptive.cpp	/^void destructor_derived_Adaptive_Solver_Volume (struct Volume* volume_ptr)$/;"	f
destructor_derived_DG_Solver_Element	simulation/solvers/dg/element_solver_dg.cpp	/^void destructor_derived_DG_Solver_Element (struct Element* element_ptr)$/;"	f
destructor_derived_DG_Solver_Face_T	simulation/solvers/dg/def_templates_face_solver_dg.h	29;"	d
destructor_derived_DG_Solver_Face_T	simulation/solvers/dg/def_templates_face_solver_dg.h	41;"	d
destructor_derived_DG_Solver_Face_T	simulation/solvers/dg/face_solver_dg_T.cpp	/^void destructor_derived_DG_Solver_Face_T (struct Face* face_ptr)$/;"	f
destructor_derived_DG_Solver_Face_T	simulation/solvers/dg/undef_templates_face_solver_dg.h	29;"	d
destructor_derived_DG_Solver_Volume_T	simulation/solvers/dg/def_templates_volume_solver_dg.h	28;"	d
destructor_derived_DG_Solver_Volume_T	simulation/solvers/dg/def_templates_volume_solver_dg.h	44;"	d
destructor_derived_DG_Solver_Volume_T	simulation/solvers/dg/undef_templates_volume_solver_dg.h	26;"	d
destructor_derived_DG_Solver_Volume_T	simulation/solvers/dg/volume_solver_dg_T.cpp	/^void destructor_derived_DG_Solver_Volume_T (struct Volume* volume_ptr)$/;"	f
destructor_derived_DPG_Solver_Element	simulation/solvers/dpg/element_solver_dpg.cpp	/^void destructor_derived_DPG_Solver_Element (struct Element* element_ptr)$/;"	f
destructor_derived_DPG_Solver_Face_T	simulation/solvers/dpg/def_templates_face_solver_dpg.h	28;"	d
destructor_derived_DPG_Solver_Face_T	simulation/solvers/dpg/def_templates_face_solver_dpg.h	39;"	d
destructor_derived_DPG_Solver_Face_T	simulation/solvers/dpg/face_solver_dpg_T.cpp	/^void destructor_derived_DPG_Solver_Face_T (struct Face* face_ptr)$/;"	f
destructor_derived_DPG_Solver_Face_T	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	26;"	d
destructor_derived_DPG_Solver_Volume_T	simulation/solvers/dpg/def_templates_volume_solver_dpg.h	28;"	d
destructor_derived_DPG_Solver_Volume_T	simulation/solvers/dpg/def_templates_volume_solver_dpg.h	44;"	d
destructor_derived_DPG_Solver_Volume_T	simulation/solvers/dpg/undef_templates_volume_solver_dpg.h	26;"	d
destructor_derived_DPG_Solver_Volume_T	simulation/solvers/dpg/volume_solver_dpg_T.cpp	/^void destructor_derived_DPG_Solver_Volume_T (struct Volume* volume_ptr)$/;"	f
destructor_derived_Element	simulation/computational_elements/computational_elements.cpp	/^	destructor_derived_Element_fptr  destructor_derived_Element;  \/\/\/< \\ref destructor_derived_Element_fptr.$/;"	m	struct:Derived_Elements_Info	file:
destructor_derived_Element_fptr	simulation/computational_elements/computational_elements.cpp	/^typedef void (*destructor_derived_Element_fptr)$/;"	t	file:
destructor_derived_Elements	simulation/computational_elements/computational_elements.cpp	/^void destructor_derived_Elements (struct Simulation* sim, const int base_name)$/;"	f
destructor_derived_Face	simulation/computational_elements/computational_elements_T.cpp	/^	destructor_derived_Face_fptr   destructor_derived_Face;   \/\/\/< \\ref destructor_derived_Face_fptr.$/;"	m	struct:Derived_Comp_Elements_Info	file:
destructor_derived_Face_fptr	simulation/computational_elements/computational_elements_T.cpp	/^typedef void (*destructor_derived_Face_fptr)$/;"	t	file:
destructor_derived_Geometry_Element	simulation/geometry/element_geometry.cpp	/^void destructor_derived_Geometry_Element (struct Element* element_ptr)$/;"	f
destructor_derived_OPG_Solver_Element	simulation/solvers/opg/element_solver_opg.cpp	/^void destructor_derived_OPG_Solver_Element (struct Element* element_ptr)$/;"	f
destructor_derived_OPG_Solver_Face_T	simulation/solvers/opg/def_templates_face_solver_opg.h	34;"	d
destructor_derived_OPG_Solver_Face_T	simulation/solvers/opg/def_templates_face_solver_opg.h	58;"	d
destructor_derived_OPG_Solver_Face_T	simulation/solvers/opg/face_solver_opg_T.cpp	/^void destructor_derived_OPG_Solver_Face_T (struct Face* face_ptr)$/;"	f
destructor_derived_OPG_Solver_Face_T	simulation/solvers/opg/undef_templates_face_solver_opg.h	30;"	d
destructor_derived_OPG_Solver_Volume_T	simulation/solvers/opg/def_templates_volume_solver_opg.h	30;"	d
destructor_derived_OPG_Solver_Volume_T	simulation/solvers/opg/def_templates_volume_solver_opg.h	44;"	d
destructor_derived_OPG_Solver_Volume_T	simulation/solvers/opg/undef_templates_volume_solver_opg.h	28;"	d
destructor_derived_OPG_Solver_Volume_T	simulation/solvers/opg/volume_solver_opg_T.cpp	/^void destructor_derived_OPG_Solver_Volume_T (struct Volume* volume_ptr)$/;"	f
destructor_derived_Plotting_Element	simulation/visualization/element_plotting.cpp	/^void destructor_derived_Plotting_Element (struct Element* element_ptr)$/;"	f
destructor_derived_Solution_Element	simulation/test_case/solution/element_solution.cpp	/^void destructor_derived_Solution_Element (struct Element* element_ptr)$/;"	f
destructor_derived_Solver_Element	simulation/solvers/element_solver.cpp	/^void destructor_derived_Solver_Element (struct Element* element_ptr)$/;"	f
destructor_derived_Solver_Face_T	simulation/solvers/def_templates_face_solver.h	28;"	d
destructor_derived_Solver_Face_T	simulation/solvers/def_templates_face_solver.h	51;"	d
destructor_derived_Solver_Face_T	simulation/solvers/face_solver_T.cpp	/^void destructor_derived_Solver_Face_T (struct Face* face_ptr)$/;"	f
destructor_derived_Solver_Face_T	simulation/solvers/undef_templates_face_solver.h	25;"	d
destructor_derived_Solver_Volume_T	simulation/solvers/def_templates_volume_solver.h	28;"	d
destructor_derived_Solver_Volume_T	simulation/solvers/def_templates_volume_solver.h	55;"	d
destructor_derived_Solver_Volume_T	simulation/solvers/undef_templates_solver.h	26;"	d
destructor_derived_Solver_Volume_T	simulation/solvers/undef_templates_volume_solver.h	26;"	d
destructor_derived_Solver_Volume_T	simulation/solvers/volume_solver_T.cpp	/^void destructor_derived_Solver_Volume_T (struct Volume* volume_ptr)$/;"	f
destructor_derived_Volume	simulation/computational_elements/computational_elements_T.cpp	/^	destructor_derived_Volume_fptr destructor_derived_Volume; \/\/\/< \\ref destructor_derived_Volume_fptr.$/;"	m	struct:Derived_Comp_Elements_Info	file:
destructor_derived_Volume_fptr	simulation/computational_elements/computational_elements_T.cpp	/^typedef void (*destructor_derived_Volume_fptr)$/;"	t	file:
destructor_derived_computational_elements_T	simulation/computational_elements/computational_elements_T.cpp	/^void destructor_derived_computational_elements_T (struct Simulation* sim, const int base_category)$/;"	f
destructor_derived_computational_elements_T	simulation/computational_elements/def_templates_computational_elements.h	23;"	d
destructor_derived_computational_elements_T	simulation/computational_elements/def_templates_computational_elements.h	43;"	d
destructor_derived_computational_elements_T	simulation/computational_elements/undef_templates_computational_elements.h	22;"	d
destructor_derived_elements_comp_elements	simulation/solvers/solve_implicit.cpp	/^static void destructor_derived_elements_comp_elements (struct Simulation* sim)$/;"	f	file:
destructor_grad_vc	simulation/solvers/compute_volume_rlhs_T.h	/^	destructor_sol_vc_fptr_T  destructor_grad_vc;  \/\/\/< Pointer to the appropriate function.$/;"	m	struct:S_Params_Volume_Structor_T
destructor_jdet_n_diff_fc	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static void destructor_jdet_n_diff_fc (const struct const_Matrix_T*const* jdet_n_diff_fc)$/;"	f	file:
destructor_jdet_n_diff_fc	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	34;"	d
destructor_jdet_n_diff_fc	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	59;"	d
destructor_jdet_n_diff_fc	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	31;"	d
destructor_mutable_Multiarray_Operator	simulation/operators/multiarray_operator.cpp	/^static void destructor_mutable_Multiarray_Operator (struct mutable_Multiarray_Operator* a)$/;"	f	file:
destructor_mutable_Operator	simulation/operators/operator.cpp	/^void destructor_mutable_Operator (struct mutable_Operator* op)$/;"	f
destructor_petsc_x	simulation/solvers/solve_implicit.cpp	/^static void destructor_petsc_x (Vec x)$/;"	f	file:
destructor_sol_vc	simulation/solvers/compute_volume_rlhs_T.h	/^	destructor_sol_vc_fptr_T  destructor_sol_vc;   \/\/\/< Pointer to the appropriate function.$/;"	m	struct:S_Params_Volume_Structor_T
destructor_sol_vc_col	simulation/solvers/compute_volume_rlhs_T.cpp	/^static void destructor_sol_vc_col (const struct const_Multiarray_T* sol_vc)$/;"	f	file:
destructor_sol_vc_col	simulation/solvers/def_templates_compute_volume_rlhs.h	50;"	d
destructor_sol_vc_col	simulation/solvers/def_templates_compute_volume_rlhs.h	86;"	d
destructor_sol_vc_col	simulation/solvers/undef_templates_compute_volume_rlhs.h	48;"	d
destructor_sol_vc_fptr_T	simulation/solvers/compute_volume_rlhs_T.h	/^typedef void (*destructor_sol_vc_fptr_T)$/;"	t
destructor_sol_vc_fptr_T	simulation/solvers/def_templates_compute_volume_rlhs.h	28;"	d
destructor_sol_vc_fptr_T	simulation/solvers/def_templates_compute_volume_rlhs.h	64;"	d
destructor_sol_vc_fptr_T	simulation/solvers/undef_templates_compute_volume_rlhs.h	27;"	d
destructor_sol_vc_interp	simulation/solvers/compute_volume_rlhs_T.cpp	/^static void destructor_sol_vc_interp (const struct const_Multiarray_T* sol_vc)$/;"	f	file:
destructor_sol_vc_interp	simulation/solvers/def_templates_compute_volume_rlhs.h	49;"	d
destructor_sol_vc_interp	simulation/solvers/def_templates_compute_volume_rlhs.h	85;"	d
destructor_sol_vc_interp	simulation/solvers/undef_templates_compute_volume_rlhs.h	47;"	d
destructor_static_Boundary_Comp_Elem_Data_T	simulation/geometry/def_templates_geometry_blended.h	29;"	d
destructor_static_Boundary_Comp_Elem_Data_T	simulation/geometry/def_templates_geometry_blended.h	52;"	d
destructor_static_Boundary_Comp_Elem_Data_T	simulation/geometry/geometry_blended_T.cpp	/^void destructor_static_Boundary_Comp_Elem_Data_T (struct Boundary_Comp_Elem_Data_T*const b_ce_d)$/;"	f
destructor_static_Boundary_Comp_Elem_Data_T	simulation/geometry/undef_templates_geometry_blended.h	24;"	d
df_dg	simulation/test_case/flux/flux_T.h	/^	const struct const_Multiarray_T* df_dg;   \/\/\/< The Jacobian of the fluxes wrt the solution gradient variables.$/;"	m	struct:Flux_T	typeref:struct:Flux_T::const_Multiarray_T
df_dg	simulation/test_case/flux/flux_T.h	/^	struct Multiarray_T* df_dg;   \/\/\/< See brief.$/;"	m	struct:mutable_Flux_T	typeref:struct:mutable_Flux_T::Multiarray_T
df_ds	simulation/test_case/flux/flux_T.h	/^	const struct const_Multiarray_T* df_ds;   \/\/\/< The Jacobian of the fluxes wrt the solution variables.$/;"	m	struct:Flux_T	typeref:struct:Flux_T::const_Multiarray_T
df_ds	simulation/test_case/flux/flux_T.h	/^	struct Multiarray_T* df_ds;   \/\/\/< See brief.$/;"	m	struct:mutable_Flux_T	typeref:struct:mutable_Flux_T::Multiarray_T
dfr_dg	simulation/solvers/compute_rlhs_T.h	/^	const struct const_Multiarray_T* dfr_dg;   \/\/\/< The reference flux Jacobians with respect to the solution gradients.$/;"	m	struct:Flux_Ref_T	typeref:struct:Flux_Ref_T::const_Multiarray_T
dfr_ds	simulation/solvers/compute_rlhs_T.h	/^	const struct const_Multiarray_T* dfr_ds;   \/\/\/< The reference flux Jacobians with respect to the solution.$/;"	m	struct:Flux_Ref_T	typeref:struct:Flux_Ref_T::const_Multiarray_T
dg_dg	simulation/test_case/boundary/boundary_T.h	/^	const struct const_Multiarray_T* dg_dg;$/;"	m	struct:Boundary_Value_T	typeref:struct:Boundary_Value_T::const_Multiarray_T
dg_dg	simulation/test_case/boundary/boundary_T.h	/^	struct Multiarray_T* dg_dg; \/\/\/< See brief.$/;"	m	struct:mutable_Boundary_Value_T	typeref:struct:mutable_Boundary_Value_T::Multiarray_T
dg_ds	simulation/test_case/boundary/boundary_T.h	/^	const struct const_Multiarray_T* dg_ds;$/;"	m	struct:Boundary_Value_T	typeref:struct:Boundary_Value_T::const_Multiarray_T
dg_ds	simulation/test_case/boundary/boundary_T.h	/^	struct Multiarray_T* dg_ds; \/\/\/< See brief.$/;"	m	struct:mutable_Boundary_Value_T	typeref:struct:mutable_Boundary_Value_T::Multiarray_T
diff_Matrix_d	testing/support/containers/test_support_matrix.cpp	/^bool diff_Matrix_d (const struct Matrix_d*const a, const struct Matrix_d*const b, const double tol)$/;"	f
diff_Matrix_i	testing/support/containers/test_support_matrix.cpp	/^bool diff_Matrix_i (const struct Matrix_i*const a, const struct Matrix_i*const b)$/;"	f
diff_Multiarray_Matrix_d	testing/support/containers/test_support_multiarray.cpp	/^bool diff_Multiarray_Matrix_d$/;"	f
diff_Multiarray_Vector_i	testing/support/containers/test_support_multiarray.cpp	/^bool diff_Multiarray_Vector_i (const struct Multiarray_Vector_i*const a, const struct Multiarray_Vector_i*const b)$/;"	f
diff_Multiarray_d	testing/support/containers/test_support_multiarray.cpp	/^bool diff_Multiarray_d (const struct Multiarray_d*const a, const struct Multiarray_d*const b, const double tol)$/;"	f
diff_Nodes	testing/support/element/test_support_nodes.cpp	/^static bool diff_Nodes (const struct Nodes* a, const struct Nodes* b, const double tol)$/;"	f	file:
diff_Plotting_Nodes	testing/support/element/test_support_nodes.cpp	/^static bool diff_Plotting_Nodes (const struct Plotting_Nodes* a, const struct Plotting_Nodes* b, const double tol)$/;"	f	file:
diff_Vector_d	testing/support/containers/test_support_vector.cpp	/^bool diff_Vector_d (const struct Vector_d*const a, const struct Vector_d*const b, const double tol)$/;"	f
diff_Vector_i	testing/support/containers/test_support_vector.cpp	/^bool diff_Vector_i (const struct Vector_i*const a, const struct Vector_i*const b)$/;"	f
diff_const_Matrix_d	testing/support/containers/test_support_matrix.cpp	/^bool diff_const_Matrix_d (const struct const_Matrix_d*const a, const struct const_Matrix_d*const b, const double tol)$/;"	f
diff_const_Multiarray_Matrix_d	testing/support/containers/test_support_multiarray.cpp	/^bool diff_const_Multiarray_Matrix_d$/;"	f
diff_const_Multiarray_Vector_i	testing/support/containers/test_support_multiarray.cpp	/^bool diff_const_Multiarray_Vector_i$/;"	f
diff_const_Multiarray_d	testing/support/containers/test_support_multiarray.cpp	/^bool diff_const_Multiarray_d$/;"	f
diff_const_Nodes	testing/support/element/test_support_nodes.cpp	/^bool diff_const_Nodes (const struct const_Nodes*const a, const struct const_Nodes*const b, const double tol)$/;"	f
diff_const_Plotting_Nodes	testing/support/element/test_support_nodes.cpp	/^bool diff_const_Plotting_Nodes$/;"	f
diff_const_Vector_d	testing/support/containers/test_support_vector.cpp	/^bool diff_const_Vector_d (const struct const_Vector_d*const a, const struct const_Vector_d*const b, const double tol)$/;"	f
diff_const_Vector_i	testing/support/containers/test_support_vector.cpp	/^bool diff_const_Vector_i (const struct const_Vector_i*const a, const struct const_Vector_i*const b)$/;"	f
diff_no_rel_Multiarray_d	testing/support/containers/test_support_multiarray.cpp	/^bool diff_no_rel_Multiarray_d (const struct Multiarray_d*const a, const struct Multiarray_d*const b, const double tol)$/;"	f
diff_no_rel_const_Multiarray_d	testing/support/containers/test_support_multiarray.cpp	/^bool diff_no_rel_const_Multiarray_d$/;"	f
dim	simulation/test_case/solution/restart/inverse_mapping.cpp	/^	int dim;    \/\/\/< The dimension of the nodes.$/;"	m	struct:Inv_Map	file:
dir	simulation/mesh/mesh_periodic.cpp	/^	char   dir;                 \/\/\/< The direction of the periodicity. Options: 'x', 'y', 'z'.$/;"	m	struct:Periodic_Face	file:
discard_line_values	general/file_processing.cpp	/^void discard_line_values (char**const line, int n_discard)$/;"	f
display_progress	simulation/solvers/solve_explicit.cpp	/^static void display_progress$/;"	f	file:
display_progress	simulation/solvers/solve_implicit.cpp	/^static void display_progress (const struct Test_Case* test_case, const int i_step, const double max_rhs, KSP ksp)$/;"	f	file:
display_progress	simulation/test_case/test_case_T.h	/^	const bool display_progress; \/\/\/< Flag for whether the solver progress should be displayed (in stdout).$/;"	m	struct:Test_Case_T
dnnf_dg	simulation/solvers/numerical_flux/numerical_flux_T.h	/^		const struct const_Multiarray_T* dnnf_dg;$/;"	m	struct:Numerical_Flux_T::Neigh_Info_NF_T	typeref:struct:Numerical_Flux_T::Neigh_Info_NF_T::const_Multiarray_T
dnnf_dg	simulation/solvers/numerical_flux/numerical_flux_T.h	/^		struct Multiarray_T* dnnf_dg; \/\/\/< Defined in \\ref Numerical_Flux_T.$/;"	m	struct:mutable_Numerical_Flux_T::m_Neigh_Info_NF_T	typeref:struct:mutable_Numerical_Flux_T::m_Neigh_Info_NF_T::Multiarray_T
dnnf_ds	simulation/solvers/numerical_flux/numerical_flux_T.h	/^		const struct const_Multiarray_T* dnnf_ds;$/;"	m	struct:Numerical_Flux_T::Neigh_Info_NF_T	typeref:struct:Numerical_Flux_T::Neigh_Info_NF_T::const_Multiarray_T
dnnf_ds	simulation/solvers/numerical_flux/numerical_flux_T.h	/^		struct Multiarray_T* dnnf_ds; \/\/\/< Defined in \\ref Numerical_Flux_T.$/;"	m	struct:mutable_Numerical_Flux_T::m_Neigh_Info_NF_T	typeref:struct:mutable_Numerical_Flux_T::m_Neigh_Info_NF_T::Multiarray_T
do_not_destruct_A	simulation/solvers/solve.h	/^	bool do_not_destruct_A; \/\/\/< Flag for whether the \\ref Solver_Storage_Implicit::A matrix should be destructed.$/;"	m	struct:Solver_Storage_Implicit
dof	simulation/test_case/compute_error/compute_error.h	/^	const ptrdiff_t dof;        \/\/\/< The number of degrees of freedom.$/;"	m	struct:Error_CE
domain_order	simulation/test_case/compute_error/compute_error.h	/^	int domain_order;     \/\/\/< Polynomial order of computational elements in the domain.$/;"	m	struct:Error_CE_Helper
domain_type	simulation/geometry/geometry_blended_T.h	/^	const int domain_type; \/\/\/< \\ref Simulation::domain_type.$/;"	m	struct:Blended_Parametric_Data_T
domain_type	simulation/mesh/mesh.h	/^	          domain_type; \/**< The type of domain. Vertex position correction is performed for$/;"	m	struct:Mesh_Input
domain_type	simulation/simulation.h	/^	const int domain_type;$/;"	m	struct:Simulation
domain_volume	simulation/test_case/compute_error/compute_error.h	/^	const double domain_volume; \/\/\/< The volume of the domain.$/;"	m	struct:Error_CE
domain_volume	simulation/test_case/compute_error/compute_error.h	/^	double domain_volume; \/\/\/< \\ref Error_CE::domain_volume.$/;"	m	struct:Error_CE_Helper
dot_R	general/def_templates_math_functions.h	95;"	d
dot_R	general/undef_templates_math_functions.h	53;"	d
dot_R_from_RT	general/def_templates_math_functions.h	47;"	d
dot_R_from_RT	general/def_templates_math_functions.h	79;"	d
dot_R_from_RT	general/math_functions_T.cpp	/^Real dot_R_from_RT (const ptrdiff_t n, const Real*const a, const Type*const b)$/;"	f
dot_R_from_RT	general/undef_templates_math_functions.h	41;"	d
dot_T	general/def_templates_math_functions.h	46;"	d
dot_T	general/def_templates_math_functions.h	78;"	d
dot_T	general/math_functions_T.cpp	/^Type dot_T (const ptrdiff_t n, const Type*const a, const Type*const b)$/;"	f
dot_T	general/undef_templates_math_functions.h	40;"	d
dot_mult_Vector_RT	containers/def_templates_vector_math.h	30;"	d
dot_mult_Vector_RT	containers/def_templates_vector_math.h	44;"	d
dot_mult_Vector_RT	containers/undef_templates_vector_math.h	26;"	d
dot_mult_Vector_RT	containers/vector_math_T.cpp	/^void dot_mult_Vector_RT$/;"	f
dot_mult_Vector_T	containers/def_templates_vector_math.h	29;"	d
dot_mult_Vector_T	containers/def_templates_vector_math.h	43;"	d
dot_mult_Vector_T	containers/undef_templates_vector_math.h	25;"	d
dot_mult_Vector_T	containers/vector_math_T.cpp	/^void dot_mult_Vector_T$/;"	f
dot_product_Vector_R	containers/def_templates_vector_math.h	52;"	d
dot_product_Vector_R	containers/undef_templates_vector_math.h	30;"	d
dot_product_Vector_RT	containers/def_templates_vector_math.h	28;"	d
dot_product_Vector_RT	containers/def_templates_vector_math.h	42;"	d
dot_product_Vector_RT	containers/undef_templates_vector_math.h	24;"	d
dot_product_Vector_RT	containers/vector_math_T.cpp	/^Type dot_product_Vector_RT (const Type alpha, const struct const_Vector_R*const a, const struct const_Vector_T*const b)$/;"	f
dot_product_Vector_T	containers/def_templates_vector_math.h	27;"	d
dot_product_Vector_T	containers/def_templates_vector_math.h	41;"	d
dot_product_Vector_T	containers/undef_templates_vector_math.h	23;"	d
dot_product_Vector_T	containers/vector_math_T.cpp	/^Type dot_product_Vector_T (const Type alpha, const struct const_Vector_T*const a, const struct const_Vector_T*const b)$/;"	f
ds_ds	simulation/test_case/boundary/boundary_T.h	/^	const struct const_Multiarray_T* ds_ds;$/;"	m	struct:Boundary_Value_T	typeref:struct:Boundary_Value_T::const_Multiarray_T
ds_ds	simulation/test_case/boundary/boundary_T.h	/^	struct Multiarray_T* ds_ds; \/\/\/< See brief.$/;"	m	struct:mutable_Boundary_Value_T	typeref:struct:mutable_Boundary_Value_T::Multiarray_T
dt	simulation/test_case/test_case_T.h	/^	const double dt;         \/\/\/< The time increment at each stage of the explicit solve.$/;"	m	struct:Test_Case_T
e_type	testing/unit/test_unit_inverse_mapping.cpp	/^	int e_type; \/\/\/< The element type.$/;"	m	struct:Inv_Map_Data	file:
e_ve	element/element.cpp	/^	    *e_ve;   \/\/\/< Defined in \\ref Element.$/;"	m	struct:Elem_info	file:
e_ve	element/element.h	/^	const struct const_Multiarray_Vector_i*const e_ve; \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
e_ve	element/element.h	/^	struct Multiarray_Vector_i* e_ve; \/\/\/< The correspondence between the (e)dges and (ve)rtices.$/;"	m	struct:Element	typeref:struct:Element::Multiarray_Vector_i
edge_element	element/element.h	/^	const struct const_Element*const edge_element;    \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
edge_element	element/element.h	/^	struct Element* edge_element;    \/\/\/< Element associated with the edges of the \\ref Element.$/;"	m	struct:Element	typeref:struct:Element::Element
efficient_resize_Vector_T	containers/def_templates_vector.h	110;"	d
efficient_resize_Vector_T	containers/def_templates_vector.h	36;"	d
efficient_resize_Vector_T	containers/def_templates_vector.h	67;"	d
efficient_resize_Vector_T	containers/undef_templates_vector.h	30;"	d
efficient_resize_Vector_T	containers/vector_T.cpp	/^void efficient_resize_Vector_T (struct Vector_T*const a, const ptrdiff_t ext_0)$/;"	f
elem_data	simulation/mesh/mesh_readers.cpp	/^	struct Element_Data* elem_data;     \/\/\/< \\ref Element_Data.$/;"	m	struct:Mesh_Data_l	typeref:struct:Mesh_Data_l::Element_Data	file:
elem_ghost_part	simulation/mesh/mesh_readers.cpp	/^	struct Multiarray_Vector_i* elem_ghost_part; \/\/\/< Defined in \\ref Mesh_Data$/;"	m	struct:Element_Data	typeref:struct:Element_Data::Multiarray_Vector_i	file:
elem_ghost_part	simulation/mesh/mesh_readers.h	/^	const struct const_Multiarray_Vector_i*const elem_ghost_part; \/\/\/< Partitions in which the element appears as a ghost element$/;"	m	struct:Mesh_Data
elem_global_id	simulation/mesh/mesh_readers.cpp	/^	struct Vector_i* elem_global_id;  \/\/\/< Defined in \\ref Mesh_Data$/;"	m	struct:Element_Data	typeref:struct:Element_Data::Vector_i	file:
elem_global_id	simulation/mesh/mesh_readers.h	/^	const struct const_Vector_i*const elem_global_id;  \/\/\/< Global ID of the element.$/;"	m	struct:Mesh_Data
elem_owner_part	simulation/mesh/mesh_readers.cpp	/^	struct Vector_i* elem_owner_part; \/\/\/< Defined in \\ref Mesh_Data$/;"	m	struct:Element_Data	typeref:struct:Element_Data::Vector_i	file:
elem_owner_part	simulation/mesh/mesh_readers.h	/^	const struct const_Vector_i*const elem_owner_part; \/\/\/< Partition that owns the element$/;"	m	struct:Mesh_Data
elem_per_dim	simulation/mesh/mesh_connectivity.h	/^	const struct const_Vector_i*const elem_per_dim; \/\/\/< The number of elements of each dimension.$/;"	m	struct:Conn_info
elem_per_dim	simulation/mesh/mesh_readers.h	/^	const struct const_Vector_i*const elem_per_dim; \/\/\/< The number of elements per dimension.$/;"	m	struct:Mesh_Data
elem_per_dim	testing/integration/test_integration_mesh.cpp	/^	struct Vector_i*            elem_per_dim;  \/\/\/< Defined in \\ref Mesh_Data.$/;"	m	struct:Mesh_Test_Data	typeref:struct:Mesh_Test_Data::Vector_i	file:
elem_tags	simulation/mesh/mesh_readers.cpp	/^	struct Matrix_i* elem_tags;  \/\/\/< Defined in \\ref Mesh_Data.$/;"	m	struct:Element_Data	typeref:struct:Element_Data::Matrix_i	file:
elem_tags	simulation/mesh/mesh_readers.h	/^	const struct const_Matrix_i*const elem_tags;            \/**< The list of element tags.$/;"	m	struct:Mesh_Data
elem_tags	testing/integration/test_integration_mesh.cpp	/^	struct Matrix_i*            elem_tags;     \/\/\/< Defined in \\ref Mesh_Data.$/;"	m	struct:Mesh_Test_Data	typeref:struct:Mesh_Test_Data::Matrix_i	file:
elem_type	simulation/computational_elements/volume.cpp	/^	int elem_type;                        \/\/\/< The type of \\ref Element associated with the volume.$/;"	m	struct:Volume_mesh_info	file:
elem_types	simulation/mesh/mesh_readers.cpp	/^	struct Vector_i* elem_types; \/\/\/< Defined in \\ref Mesh_Data.$/;"	m	struct:Element_Data	typeref:struct:Element_Data::Vector_i	file:
elem_types	simulation/mesh/mesh_readers.h	/^	const struct const_Vector_i*const elem_types;           \/\/\/< The list of element types.$/;"	m	struct:Mesh_Data
elem_types	testing/integration/test_integration_mesh.cpp	/^	struct Vector_i*            elem_types;    \/\/\/< Defined in \\ref Mesh_Data.$/;"	m	struct:Mesh_Test_Data	typeref:struct:Mesh_Test_Data::Vector_i	file:
element	element/element_operators.h	/^	const struct const_Element* element; \/\/\/< \\ref Element.$/;"	m	struct:Operator_Info	typeref:struct:Operator_Info::const_Element
element	simulation/computational_elements/face.cpp	/^	const struct const_Element* element; \/\/\/< The pointer to the \\ref Element corresponding to the face.$/;"	m	struct:Face_mesh_info	typeref:struct:Face_mesh_info::const_Element	file:
element	simulation/computational_elements/face.h	/^	const struct const_Element*const element; \/\/\/< Pointer to the associated \\ref const_Element.$/;"	m	struct:Face
element	simulation/computational_elements/volume.h	/^	const struct const_Element*const element; \/\/\/< Pointer to the associated \\ref const_Element.$/;"	m	struct:Volume
element	simulation/geometry/element_geometry.h	/^	const struct const_Element element; \/\/\/< Base \\ref const_Element.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::const_Element
element	simulation/solvers/adaptation/element_adaptation.h	/^	const struct const_Element element; \/\/\/< Base \\ref const_Element.$/;"	m	struct:Adaptation_Element	typeref:struct:Adaptation_Element::const_Element
element	simulation/solvers/dg/element_solver_dg.h	/^	const struct Solver_Element element; \/\/\/< Base \\ref Solver_Element.$/;"	m	struct:DG_Solver_Element	typeref:struct:DG_Solver_Element::Solver_Element
element	simulation/solvers/dpg/element_solver_dpg.h	/^	const struct Solver_Element element; \/\/\/< Base \\ref Solver_Element.$/;"	m	struct:DPG_Solver_Element	typeref:struct:DPG_Solver_Element::Solver_Element
element	simulation/solvers/element_solver.h	/^	const struct const_Element element; \/\/\/< Base \\ref const_Element.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::const_Element
element	simulation/solvers/opg/element_solver_opg.h	/^	const struct Solver_Element element; \/\/\/< Base \\ref Solver_Element.$/;"	m	struct:OPG_Solver_Element	typeref:struct:OPG_Solver_Element::Solver_Element
element	simulation/test_case/solution/element_solution.h	/^	const struct const_Element element; \/\/\/< Base \\ref const_Element.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::const_Element
element	simulation/visualization/element_plotting.h	/^	struct const_Element element; \/\/\/< Base \\ref const_Element.$/;"	m	struct:Plotting_Element	typeref:struct:Plotting_Element::const_Element
elements	simulation/simulation.h	/^	const struct const_Intrusive_List* elements; \/\/\/< Pointer to the head of the Element list.$/;"	m	struct:Simulation	typeref:struct:Simulation::const_Intrusive_List
enforce_positivity_highorder	simulation/solvers/solve.cpp	/^void enforce_positivity_highorder (struct Solver_Volume* s_vol, const struct Simulation* sim)$/;"	f
ensure_1_irregular	simulation/solvers/adaptation/adaptation.cpp	/^static void ensure_1_irregular (const struct Simulation*const sim)$/;"	f	file:
equal_R	general/def_templates_math_functions.h	91;"	d
equal_R	general/undef_templates_math_functions.h	49;"	d
equal_T	general/def_templates_math_functions.h	31;"	d
equal_T	general/def_templates_math_functions.h	63;"	d
equal_T	general/math_functions_T.cpp	/^bool equal_T (const Type x0, const Type x1, const Real tol)$/;"	f
equal_T	general/undef_templates_math_functions.h	25;"	d
equal_spec_rel_R	general/def_templates_math_functions.h	92;"	d
equal_spec_rel_R	general/undef_templates_math_functions.h	50;"	d
equal_spec_rel_T	general/def_templates_math_functions.h	32;"	d
equal_spec_rel_T	general/def_templates_math_functions.h	64;"	d
equal_spec_rel_T	general/math_functions_T.cpp	/^bool equal_spec_rel_T (const Type x0, const Type x1, const Real tol, const Type den)$/;"	f
equal_spec_rel_T	general/undef_templates_math_functions.h	26;"	d
erase_IL	intrusive/intrusive.cpp	/^struct Intrusive_Link* erase_IL (struct Intrusive_List* lst, struct Intrusive_Link* curr)$/;"	f
erase_const_IL	intrusive/intrusive.cpp	/^const struct const_Intrusive_Link* erase_const_IL$/;"	f
error_type	simulation/test_case/compute_error/compute_error.h	/^	const int error_type; \/\/\/< The type of error. Options: see \\ref definitions_error.h$/;"	m	struct:Error_CE_Helper
ex_ord	testing/integration/test_integration_convergence_support.cpp	/^	                               * ex_ord;      \/\/\/< The multiarray of expected orders.$/;"	m	struct:Conv_Order_Data	typeref:struct:Conv_Order_Data::	file:
exit_ratio_e	simulation/test_case/test_case_T.h	/^	             exit_ratio_e, \/\/\/< The exit ratio for the residual during the explicit solver stage.$/;"	m	struct:Test_Case_T
exit_ratio_i	simulation/test_case/test_case_T.h	/^	             exit_ratio_i; \/\/\/< The exit ratio for the residual during the implicit solver stage.$/;"	m	struct:Test_Case_T
exit_tol_e	simulation/test_case/test_case_T.h	/^	const double exit_tol_e,   \/\/\/< The exit tolerance for the residual during the explicit solver stage.$/;"	m	struct:Test_Case_T
exit_tol_i	simulation/test_case/test_case_T.h	/^	             exit_tol_i,   \/\/\/< The exit tolerance for the residual during the implicit solver stage.$/;"	m	struct:Test_Case_T
expect_condition	testing/test_base.cpp	/^void expect_condition (const bool cond, const char* cond_str)$/;"	f
expected_order	simulation/test_case/compute_error/compute_error.h	/^	const struct const_Vector_i* expected_order; \/\/\/< The expected convergence order of each variable.$/;"	m	struct:Error_CE	typeref:struct:Error_CE::const_Vector_i
ext_0	containers/matrix_T.h	/^	const ptrdiff_t ext_0,$/;"	m	struct:const_Matrix_CSR_T
ext_0	containers/matrix_T.h	/^	const ptrdiff_t ext_0,$/;"	m	struct:const_Matrix_T
ext_0	containers/matrix_T.h	/^	ptrdiff_t ext_0, \/\/\/< Defined in \\ref Matrix_T.$/;"	m	struct:Matrix_CSR_T
ext_0	containers/matrix_T.h	/^	ptrdiff_t ext_0, \/\/\/< Size of array in the 1st dimension.$/;"	m	struct:Matrix_T
ext_0	containers/vector_T.h	/^	const ptrdiff_t ext_0;$/;"	m	struct:const_Vector_T
ext_0	containers/vector_T.h	/^	ptrdiff_t ext_0; \/\/\/< Defined in \\ref Matrix_T.$/;"	m	struct:Vector_T
ext_1	containers/matrix_T.h	/^	                ext_1;$/;"	m	struct:const_Matrix_CSR_T
ext_1	containers/matrix_T.h	/^	                ext_1;$/;"	m	struct:const_Matrix_T
ext_1	containers/matrix_T.h	/^	          ext_1; \/\/\/< Defined in \\ref Matrix_T.$/;"	m	struct:Matrix_CSR_T
ext_1	containers/matrix_T.h	/^	          ext_1; \/\/\/< Size of array in the 2nd dimension.$/;"	m	struct:Matrix_T
ext_b	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^	ptrdiff_t ext_b; \/\/\/< The number of entries in \\ref SSS_ANN::b.$/;"	m	struct:SSS_ANN
ext_s	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^	ptrdiff_t ext_s; \/\/\/< The number of entries in \\ref SSS_ANN::s.$/;"	m	struct:SSS_ANN
extents	containers/multiarray_T.h	/^	const ptrdiff_t*const extents;$/;"	m	struct:const_Multiarray_Matrix_T
extents	containers/multiarray_T.h	/^	const ptrdiff_t*const extents;$/;"	m	struct:const_Multiarray_T
extents	containers/multiarray_T.h	/^	const ptrdiff_t*const extents;$/;"	m	struct:const_Multiarray_Vector_T
extents	containers/multiarray_T.h	/^	ptrdiff_t* extents; \/\/\/< Defined in \\ref Multiarray_T.$/;"	m	struct:Multiarray_Matrix_T
extents	containers/multiarray_T.h	/^	ptrdiff_t* extents; \/\/\/< Defined in \\ref Multiarray_T.$/;"	m	struct:Multiarray_Vector_T
extents	containers/multiarray_T.h	/^	ptrdiff_t* extents; \/\/\/< Size of array in each dimension.$/;"	m	struct:Multiarray_T
extents	simulation/operators/multiarray_operator.cpp	/^	ptrdiff_t* extents; \/\/\/< Defined in \\ref Multiarray_Operator.$/;"	m	struct:mutable_Multiarray_Operator	file:
extents	simulation/operators/multiarray_operator.h	/^	const ptrdiff_t*const extents; \/\/\/< Defined in \\ref Multiarray_T.$/;"	m	struct:Multiarray_Operator
extents	testing/support/containers/test_support_multiarray.cpp	/^	ptrdiff_t extents[EXTENTS_MAX]; \/\/\/< Defined in \\ref Multiarray_T.$/;"	m	struct:Multiarray_Partial	file:
extents_op	element/element_operators.h	/^	const struct const_Vector_i* extents_op;$/;"	m	struct:Operator_Info	typeref:struct:Operator_Info::const_Vector_i
extract_name	general/file_processing.cpp	/^char* extract_name (const char*const name_full, const bool extension_present)$/;"	f
extract_p_g_fixed	element/element_operators.cpp	/^static int extract_p_g_fixed (const char* geom_rep)$/;"	f	file:
extract_path	general/file_processing.cpp	/^const char* extract_path (const char*const name_full)$/;"	f
f	simulation/test_case/flux/flux_T.h	/^	const struct const_Multiarray_T* f;       \/\/\/< The fluxes.$/;"	m	struct:Flux_T	typeref:struct:Flux_T::const_Multiarray_T
f	simulation/test_case/flux/flux_T.h	/^	struct Multiarray_T* f;       \/\/\/< See brief.$/;"	m	struct:mutable_Flux_T	typeref:struct:mutable_Flux_T::Multiarray_T
f_al_gaussian_bump	simulation/geometry/def_templates_geometry_parametric.h	35;"	d
f_al_gaussian_bump	simulation/geometry/def_templates_geometry_parametric.h	57;"	d
f_al_gaussian_bump	simulation/geometry/geometry_parametric_T.cpp	/^static Real f_al_gaussian_bump (const Real x, const struct Function_Data_GP*const f_data)$/;"	f	file:
f_al_gaussian_bump	simulation/geometry/undef_templates_geometry_parametric.h	30;"	d
f_bcs	simulation/test_case/solution/restart/restart_writers.cpp	/^	const struct const_Vector_i* f_bcs;                \/\/\/< The face boundary condition type indices.$/;"	m	struct:Elements_Info	typeref:struct:Elements_Info::const_Vector_i	file:
f_gaussian_bump	simulation/geometry/geometry_parametric.cpp	/^double f_gaussian_bump (const double x, const int diff_degree, const struct Function_Data_GP*const f_data)$/;"	f
f_types	simulation/test_case/solution/restart/restart_writers.cpp	/^	const struct const_Vector_i* f_types;              \/\/\/< The face element type indices.$/;"	m	struct:Elements_Info	typeref:struct:Elements_Info::const_Vector_i	file:
f_ve	element/element.cpp	/^	    *f_ve,   \/\/\/< Defined in \\ref Element.$/;"	m	struct:Elem_info	file:
f_ve	element/element.h	/^	const struct const_Multiarray_Vector_i*const f_ve; \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
f_ve	element/element.h	/^	struct Multiarray_Vector_i* f_ve; \/\/\/< The correspondence between the (f)aces and (ve)rtices.$/;"	m	struct:Element	typeref:struct:Element::Multiarray_Vector_i
f_ve	simulation/mesh/mesh_connectivity.h	/^	struct Multiarray_Vector_i* f_ve;     \/\/\/< Global face to vertex correspondence.$/;"	m	struct:Conn_info	typeref:struct:Conn_info::Multiarray_Vector_i
f_ve_per	simulation/mesh/mesh_connectivity.h	/^	struct Multiarray_Vector_i* f_ve_per;$/;"	m	struct:Conn_info	typeref:struct:Conn_info::Multiarray_Vector_i
f_write	processing/post/file_processing.py	/^def f_write(f,n_tabs,string):$/;"	f
face	simulation/solvers/adaptation/face_solver_adaptive.h	/^	struct Solver_Face face; \/\/\/< The base \\ref Solver_Face_T.$/;"	m	struct:Adaptive_Solver_Face	typeref:struct:Adaptive_Solver_Face::Solver_Face
face	simulation/solvers/dg/face_solver_dg_T.h	/^	struct Solver_Face_T face; \/\/\/< The base \\ref Solver_Face_T.$/;"	m	struct:DG_Solver_Face_T	typeref:struct:DG_Solver_Face_T::Solver_Face_T
face	simulation/solvers/dpg/face_solver_dpg_T.h	/^	struct Solver_Face_T face; \/\/\/< The base \\ref Solver_Face_T.$/;"	m	struct:DPG_Solver_Face_T	typeref:struct:DPG_Solver_Face_T::Solver_Face_T
face	simulation/solvers/face_solver_T.h	/^	struct Face face; \/\/\/< The base \\ref Face.$/;"	m	struct:Solver_Face_T	typeref:struct:Solver_Face_T::Face
face	simulation/solvers/opg/face_solver_opg_T.h	/^	struct Solver_Face_T face; \/\/\/< The base \\ref Solver_Face_T.$/;"	m	struct:OPG_Solver_Face_T	typeref:struct:OPG_Solver_Face_T::Solver_Face_T
face	simulation/test_case/solution/solution_T.h	/^	struct Solver_Face_T* face;     \/\/\/< \\ref Solver_Face_T.$/;"	m	struct:Solution_Container_T	typeref:struct:Solution_Container_T::Solver_Face_T
face_element	element/element.h	/^	const struct const_Element*const face_element[2]; \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
face_element	element/element.h	/^	struct Element* face_element[2]; \/\/\/< Element(s) associated with the faces of the \\ref Element.$/;"	m	struct:Element	typeref:struct:Element::Element
face_is_conforming	simulation/solvers/face_solver.cpp	/^bool face_is_conforming (const struct Solver_Face*const s_face)$/;"	f
face_neigh_was_updated	simulation/solvers/adaptation/adaptation.cpp	/^static bool face_neigh_was_updated (const struct Adaptive_Solver_Face*const a_s_face)$/;"	f	file:
face_requires_geom_update	simulation/solvers/adaptation/adaptation.cpp	/^static bool face_requires_geom_update (const struct Solver_Face*const s_face, const int ml, const char ml_vf)$/;"	f	file:
faces	simulation/computational_elements/volume.h	/^	const struct Face*const faces[NFMAX][NSUBFMAX]; \/\/\/< Array of pointers to the neighbouring \\ref Face containers.$/;"	m	struct:Volume
faces	simulation/simulation.h	/^	struct Intrusive_List* faces;                \/\/\/< Pointer to the head of the Face    list.$/;"	m	struct:Simulation	typeref:struct:Simulation::Intrusive_List
faces	testing/integration/test_integration_geometry.cpp	/^	struct Intrusive_List* faces; \/\/\/< Defined in \\ref Simulation.$/;"	m	struct:Geom_Test_Data	typeref:struct:Geom_Test_Data::Intrusive_List	file:
faces	testing/support/test_support_fe_init.cpp	/^	struct Intrusive_List* faces;   \/\/\/< Defined in \\ref Simulation.$/;"	m	struct:FE_Test_Data	typeref:struct:FE_Test_Data::Intrusive_List	file:
fgets_checked	general/file_processing.cpp	/^void fgets_checked (char*const line, const int sizeof_line, FILE*const file)$/;"	f
fill_elements	simulation/mesh/mesh_readers.cpp	/^static bool fill_elements (const ptrdiff_t row, struct Element_Data*const elem_data, char* line)$/;"	f	file:
fill_nodes	simulation/mesh/mesh_readers.cpp	/^static void fill_nodes (double*const node_row, char* line, const int d)$/;"	f	file:
fill_petsc_Vec_b_dg	simulation/solvers/dg/solve_dg.cpp	/^static void fill_petsc_Vec_b_dg (const struct Simulation*const sim, struct Solver_Storage_Implicit*const ssi)$/;"	f	file:
fill_petsc_Vec_b_opg	simulation/solvers/opg/solve_opg.cpp	/^static void fill_petsc_Vec_b_opg (const struct Simulation*const sim, struct Solver_Storage_Implicit*const ssi)$/;"	f	file:
finalize_face_rhs_dg_like_T	simulation/solvers/compute_face_rlhs_T.cpp	/^static void finalize_face_rhs_dg_like_T$/;"	f	file:
finalize_face_rhs_dg_like_T	simulation/solvers/def_templates_compute_face_rlhs.h	47;"	d
finalize_face_rhs_dg_like_T	simulation/solvers/def_templates_compute_face_rlhs.h	78;"	d
finalize_face_rhs_dg_like_T	simulation/solvers/undef_templates_compute_face_rlhs.h	42;"	d
finalize_lhs_1_f_dg	simulation/solvers/dg/compute_face_rlhs_dg.cpp	/^static void finalize_lhs_1_f_dg$/;"	f	file:
finalize_lhs_1_f_opg	simulation/solvers/opg/compute_face_rlhs_opg.cpp	/^static void finalize_lhs_1_f_opg$/;"	f	file:
finalize_lhs_2_f_dg	simulation/solvers/dg/compute_face_rlhs_dg.cpp	/^static void finalize_lhs_2_f_dg$/;"	f	file:
find_bc_match	simulation/computational_elements/volume.cpp	/^static int find_bc_match$/;"	f	file:
find_boundary_vertex_index	simulation/geometry/def_templates_geometry_surface.h	35;"	d
find_boundary_vertex_index	simulation/geometry/def_templates_geometry_surface.h	54;"	d
find_boundary_vertex_index	simulation/geometry/geometry_surface_T.cpp	/^static ptrdiff_t find_boundary_vertex_index$/;"	f	file:
find_boundary_vertex_index	simulation/geometry/undef_templates_geometry_surface.h	28;"	d
find_maximum_mesh_level	simulation/solvers/adaptation/adaptation.cpp	/^int find_maximum_mesh_level (const struct Adaptive_Solver_Volume*const a_s_vol)$/;"	f
find_val_Vector_T	containers/def_templates_vector.h	123;"	d
find_val_Vector_T	containers/def_templates_vector.h	51;"	d
find_val_Vector_T	containers/def_templates_vector.h	82;"	d
find_val_Vector_T	containers/undef_templates_vector.h	45;"	d
find_val_Vector_T	containers/vector_T.cpp	/^bool find_val_Vector_T (const struct const_Vector_T*const src, const Type val, const bool sorted)$/;"	f
first	intrusive/intrusive.h	/^	const struct const_Intrusive_Link*const first; \/\/\/< Defined in \\ref Intrusive_List.$/;"	m	struct:const_Intrusive_List
first	intrusive/intrusive.h	/^	struct Intrusive_Link* first; \/\/\/< Pointer to the first \\ref Intrusive_Link\\* in the list.$/;"	m	struct:Intrusive_List	typeref:struct:Intrusive_List::Intrusive_Link
first_string_matches	general/file_processing.cpp	/^bool first_string_matches (const char*const line, const char*const str_search)$/;"	f
flux_comp_mem_e	simulation/test_case/test_case_T.h	/^	const bool flux_comp_mem_e[MAX_FLUX_OUT],         \/\/\/< \\ref Flux_Input_T::compute_member (explicit).$/;"	m	struct:Test_Case_T
flux_comp_mem_i	simulation/test_case/test_case_T.h	/^	           flux_comp_mem_i[MAX_FLUX_OUT],         \/\/\/< \\ref Flux_Input_T::compute_member (implicit).$/;"	m	struct:Test_Case_T
flux_i	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	struct Flux_Input_T* flux_i; \/\/\/< \\ref Flux_Input_T used for viscous numerical flux computations.$/;"	m	struct:Numerical_Flux_Input_T	typeref:struct:Numerical_Flux_Input_T::Flux_Input_T
flux_imbalance	simulation/solvers/volume_solver_T.h	/^	struct Vector_T* flux_imbalance; \/\/\/< The values of the flux imbalances for each equation.$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::Vector_T
flux_l	simulation/solvers/numerical_flux/numerical_flux_central_T.cpp	/^	struct Flux_T* flux_l, \/\/\/< Flux members from the 'l'eft side.$/;"	m	struct:Fluxes_LR	typeref:struct:Fluxes_LR::Flux_T	file:
flux_r	simulation/solvers/numerical_flux/numerical_flux_central_T.cpp	/^	             * flux_r; \/\/\/< Flux members from the 'r'ight side.$/;"	m	struct:Fluxes_LR	typeref:struct:Fluxes_LR::	file:
fopen_checked	general/file_processing.cpp	/^FILE* fopen_checked (const char*const file_name_full)$/;"	f
fopen_create_dir	general/file_processing.cpp	/^FILE* fopen_create_dir (const char*const file_name_full)$/;"	f
fopen_input	general/file_processing.cpp	/^FILE* fopen_input (const char input_spec, const char*const ctrl_name_full_i, const char*const input_path_i)$/;"	f
fopen_sp_input_file	general/file_processing.cpp	/^FILE* fopen_sp_input_file$/;"	f
fopen_sp_input_file_unchecked	general/file_processing.cpp	/^FILE* fopen_sp_input_file_unchecked$/;"	f
fopen_sp_output_file	general/file_processing.cpp	/^FILE* fopen_sp_output_file$/;"	f
fprint_Vector_T	containers/def_templates_vector_print.h	55;"	d
fprint_Vector_T	containers/undef_templates_vector_print.h	25;"	d
fprint_Vector_T	containers/vector_print_T.cpp	/^void fprint_Vector_T (FILE* file, const int n_tab, struct Vector_T* a)$/;"	f
fprint_const_Multiarray_Vector_T	containers/def_templates_multiarray_print.h	73;"	d
fprint_const_Multiarray_Vector_T	containers/multiarray_print_T.cpp	/^void fprint_const_Multiarray_Vector_T (FILE* file, const int n_tab, const struct const_Multiarray_Vector_T* a)$/;"	f
fprint_const_Multiarray_Vector_T	containers/undef_templates_multiarray_print.h	30;"	d
fprint_const_Multiarray_Vector_i_offsets	simulation/visualization/visualization.cpp	/^void fprint_const_Multiarray_Vector_i_offsets (FILE* file, const int n_tab, const struct const_Multiarray_Vector_i* a)$/;"	f
fprint_const_Multiarray_d_vtk_point	simulation/visualization/visualization.cpp	/^void fprint_const_Multiarray_d_vtk_point$/;"	f
fprint_const_Multiarray_i_vtk_point	simulation/visualization/visualization.cpp	/^void fprint_const_Multiarray_i_vtk_point$/;"	f
fprint_const_Vector_T	containers/def_templates_vector_print.h	54;"	d
fprint_const_Vector_T	containers/undef_templates_vector_print.h	24;"	d
fprint_const_Vector_T	containers/vector_print_T.cpp	/^void fprint_const_Vector_T (FILE* file, const int n_tab, const struct const_Vector_T* a)$/;"	f
fprint_vtk_DataArray_d	simulation/visualization/visualization.cpp	/^void fprint_vtk_DataArray_d$/;"	f
fprint_vtk_DataArray_i	simulation/visualization/visualization.cpp	/^void fprint_vtk_DataArray_i$/;"	f
fprint_vtk_Points	simulation/visualization/visualization.cpp	/^void fprint_vtk_Points (FILE* file, const char sp_type, const struct const_Multiarray_d* xyz)$/;"	f
fprint_vtk_header_footer	simulation/visualization/visualization.cpp	/^static void fprint_vtk_header_footer$/;"	f	file:
fprint_vtk_piece_geom	simulation/visualization/visualization.cpp	/^static void fprint_vtk_piece_geom$/;"	f	file:
fprint_vtk_piece_grad_navier_stokes	simulation/visualization/visualization.cpp	/^static void fprint_vtk_piece_grad_navier_stokes$/;"	f	file:
fprint_vtk_piece_grad_scalar	simulation/visualization/visualization.cpp	/^static void fprint_vtk_piece_grad_scalar (FILE* file, const char sp_type, const struct const_Multiarray_d*const grad)$/;"	f	file:
fprint_vtk_piece_normals	simulation/visualization/visualization.cpp	/^static void fprint_vtk_piece_normals$/;"	f	file:
fprint_vtk_piece_other_euler	simulation/visualization/visualization.cpp	/^static void fprint_vtk_piece_other_euler$/;"	f	file:
fprint_vtk_piece_sol_euler	simulation/visualization/visualization.cpp	/^static void fprint_vtk_piece_sol_euler$/;"	f	file:
fprint_vtk_piece_sol_grad	simulation/visualization/visualization.cpp	/^static void fprint_vtk_piece_sol_grad$/;"	f	file:
fprint_vtk_piece_sol_scalar	simulation/visualization/visualization.cpp	/^static void fprint_vtk_piece_sol_scalar$/;"	f	file:
fprint_vtk_piece_sol_scalar_i	simulation/visualization/visualization.cpp	/^static void fprint_vtk_piece_sol_scalar_i$/;"	f	file:
fprintf_elements_gmsh	simulation/test_case/solution/restart/restart_writers.cpp	/^static void fprintf_elements_gmsh (FILE* file, const struct Nodes_Info*const ni, const struct Elements_Info*const ei)$/;"	f	file:
fprintf_format_gmsh	simulation/test_case/solution/restart/restart_writers.cpp	/^static void fprintf_format_gmsh (FILE* file)$/;"	f	file:
fprintf_nodes_gmsh	simulation/test_case/solution/restart/restart_writers.cpp	/^static void fprintf_nodes_gmsh (FILE* file, const struct Nodes_Info*const ni)$/;"	f	file:
fprintf_solution_bezier_gmsh	simulation/test_case/solution/restart/restart_writers.cpp	/^static void fprintf_solution_bezier_gmsh (FILE* file, const struct Simulation*const sim)$/;"	f	file:
fprintf_tn	simulation/visualization/visualization.cpp	/^static void fprintf_tn (FILE* file, const int n_tabs, const char*const string_i)$/;"	f	file:
fr	simulation/solvers/compute_rlhs_T.h	/^	const struct const_Multiarray_T* fr;       \/\/\/< The reference flux.$/;"	m	struct:Flux_Ref_T	typeref:struct:Flux_Ref_T::const_Multiarray_T
free_MO_from_MO	simulation/operators/multiarray_operator.cpp	/^void free_MO_from_MO (const struct Multiarray_Operator* src)$/;"	f
g	simulation/test_case/boundary/boundary_T.h	/^	const struct const_Multiarray_T* g; \/\/\/< The solution gradient variables values on the boundary.$/;"	m	struct:Boundary_Value_T	typeref:struct:Boundary_Value_T::const_Multiarray_T
g	simulation/test_case/boundary/boundary_T.h	/^	const struct const_Multiarray_T* g; \/\/\/< The solution gradient variables.$/;"	m	struct:Boundary_Value_Input_T	typeref:struct:Boundary_Value_Input_T::const_Multiarray_T
g	simulation/test_case/boundary/boundary_T.h	/^	struct Multiarray_T* g;     \/\/\/< See brief.$/;"	m	struct:mutable_Boundary_Value_T	typeref:struct:mutable_Boundary_Value_T::Multiarray_T
g	simulation/test_case/flux/flux_T.h	/^	const struct const_Multiarray_T* g;   \/\/\/< The solution gradient variables.$/;"	m	struct:Flux_Input_T	typeref:struct:Flux_Input_T::const_Multiarray_T
g	simulation/test_case/flux/flux_diffusion_T.cpp	/^	const Type* g; \/\/\/< Gradient variable.$/;"	m	struct:Flux_Data_Diffusion	file:
g_e	simulation/solvers/element_solver.h	/^	const struct Geometry_Element   g_e; \/\/\/< \\ref Geometry_Element.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Geometry_Element
geom_blending	simulation/simulation.h	/^	const char geom_blending[N_ST_STD][STRLEN_MIN];$/;"	m	struct:Simulation
geom_coef	simulation/solvers/volume_solver_T.h	/^	const struct const_Multiarray_T* geom_coef;$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::const_Multiarray_T
geom_coef_p1	simulation/solvers/volume_solver_T.h	/^	const struct const_Multiarray_T* geom_coef_p1;$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::const_Multiarray_T
geom_name	simulation/mesh/mesh.h	/^	const char* geom_name;      \/\/\/< Name of the base geometry to be used for the domain.$/;"	m	struct:Mesh_Input
geom_name	simulation/simulation.h	/^	const char geom_name[STRLEN_MAX]; \/\/\/< Name of the base geometry to be used for the domain.$/;"	m	struct:Simulation
geom_parametrization	simulation/geometry/geometry_blended_T.h	/^	const int geom_parametrization; \/\/\/< \\ref Test_Case_T::geom_parametrization.$/;"	m	struct:Blended_Parametric_Data_T
geom_parametrization	simulation/test_case/test_case_T.h	/^	const int geom_parametrization;$/;"	m	struct:Test_Case_T
geom_rep	simulation/simulation.h	/^	const char geom_rep[STRLEN_MIN];$/;"	m	struct:Simulation
geom_spec	simulation/mesh/mesh.h	/^	const char* geom_spec;      \/\/\/< Additional specifications for the geometry.$/;"	m	struct:Mesh_Input
geom_spec	simulation/simulation.h	/^	const char geom_spec[STRLEN_MAX]; \/\/\/< Additional specifications for the geometry.$/;"	m	struct:Simulation
geometry_depends_on_face_pointers	simulation/geometry/geometry.cpp	/^bool geometry_depends_on_face_pointers()$/;"	f
get_Info_I	simulation/solvers/adaptation/adaptation.cpp	/^const struct Info_I* get_Info_I$/;"	f
get_Multiarray_Operator	simulation/operators/multiarray_operator.cpp	/^const struct Operator* get_Multiarray_Operator$/;"	f
get_Newton	simulation/test_case/solution/restart/inverse_mapping.cpp	/^	get_Newton_fptr get_Newton;           \/\/\/< Standard.$/;"	m	struct:Inv_Map	file:
get_Newton_fptr	simulation/test_case/solution/restart/inverse_mapping.cpp	/^typedef struct Newton (*get_Newton_fptr)$/;"	t	typeref:struct:get_Newton_fptr	file:
get_Newton_line	simulation/test_case/solution/restart/inverse_mapping.cpp	/^static struct Newton get_Newton_line$/;"	f	file:
get_Newton_quad	simulation/test_case/solution/restart/inverse_mapping.cpp	/^static struct Newton get_Newton_quad$/;"	f	file:
get_Newton_term	simulation/test_case/solution/restart/inverse_mapping.cpp	/^	get_Newton_term_fptr get_Newton_term; \/\/\/< Standard.$/;"	m	struct:Inv_Map	file:
get_Newton_term_1d	simulation/test_case/solution/restart/inverse_mapping.cpp	/^static const double* get_Newton_term_1d (const struct Newton*const newton)$/;"	f	file:
get_Newton_term_2d	simulation/test_case/solution/restart/inverse_mapping.cpp	/^static const double* get_Newton_term_2d (const struct Newton*const newton)$/;"	f	file:
get_Newton_term_fptr	simulation/test_case/solution/restart/inverse_mapping.cpp	/^typedef const double* (*get_Newton_term_fptr)$/;"	t	file:
get_Newton_tri	simulation/test_case/solution/restart/inverse_mapping.cpp	/^static struct Newton get_Newton_tri$/;"	f	file:
get_Restart_Info	simulation/test_case/solution/restart/def_templates_restart.h	33;"	d
get_Restart_Info	simulation/test_case/solution/restart/def_templates_restart.h	60;"	d
get_Restart_Info	simulation/test_case/solution/restart/restart_T.cpp	/^static struct Restart_Info get_Restart_Info (const struct Simulation*const sim)$/;"	f	file:
get_Restart_Info	simulation/test_case/solution/restart/undef_templates_restart.h	30;"	d
get_basis_i_from_s	element/bases.cpp	/^int get_basis_i_from_s (const char*const basis_name_s)$/;"	f
get_basis_types	element/element_operators.cpp	/^static const int* get_basis_types (const char* name_type, const struct Simulation* sim)$/;"	f	file:
get_bc_base_periodic	simulation/computational_elements/face.cpp	/^static int get_bc_base_periodic (const int ind_lf_wp)$/;"	f	file:
get_bc_data_back_pressure	simulation/test_case/boundary/boundary_euler_T.cpp	/^static struct BC_Data get_bc_data_back_pressure ( )$/;"	f	file:
get_bc_data_back_pressure	simulation/test_case/boundary/def_templates_boundary.h	133;"	d
get_bc_data_back_pressure	simulation/test_case/boundary/def_templates_boundary.h	66;"	d
get_bc_data_back_pressure	simulation/test_case/boundary/undef_templates_boundary.h	67;"	d
get_bc_data_total_tp	simulation/test_case/boundary/boundary_euler_T.cpp	/^static struct BC_Data get_bc_data_total_tp ( )$/;"	f	file:
get_bc_data_total_tp	simulation/test_case/boundary/def_templates_boundary.h	134;"	d
get_bc_data_total_tp	simulation/test_case/boundary/def_templates_boundary.h	67;"	d
get_bc_data_total_tp	simulation/test_case/boundary/undef_templates_boundary.h	68;"	d
get_c_Derived_Comp_Elements_Info	simulation/computational_elements/computational_elements_T.cpp	/^static struct Derived_Comp_Elements_Info get_c_Derived_Comp_Elements_Info$/;"	f	file:
get_c_Derived_Comp_Elements_Info	simulation/computational_elements/def_templates_computational_elements.h	28;"	d
get_c_Derived_Comp_Elements_Info	simulation/computational_elements/def_templates_computational_elements.h	48;"	d
get_c_Derived_Comp_Elements_Info	simulation/computational_elements/undef_templates_computational_elements.h	25;"	d
get_c_Derived_Elements_Info	simulation/computational_elements/computational_elements.cpp	/^static struct Derived_Elements_Info get_c_Derived_Elements_Info (const int derived_name, const struct Simulation* sim)$/;"	f	file:
get_col_Matrix_C	containers/def_templates_matrix.h	122;"	d
get_col_Matrix_C	containers/undef_templates_matrix.h	69;"	d
get_col_Matrix_R	containers/def_templates_matrix.h	117;"	d
get_col_Matrix_R	containers/def_templates_matrix.h	158;"	d
get_col_Matrix_R	containers/undef_templates_matrix.h	64;"	d
get_col_Matrix_T	containers/def_templates_matrix.h	154;"	d
get_col_Matrix_T	containers/def_templates_matrix.h	47;"	d
get_col_Matrix_T	containers/def_templates_matrix.h	88;"	d
get_col_Matrix_T	containers/matrix_T.cpp	/^Type* get_col_Matrix_T (const ptrdiff_t col, const struct Matrix_T* a)$/;"	f
get_col_Matrix_T	containers/undef_templates_matrix.h	38;"	d
get_col_Multiarray_R	containers/def_templates_multiarray.h	134;"	d
get_col_Multiarray_R	containers/undef_templates_multiarray.h	76;"	d
get_col_Multiarray_T	containers/def_templates_multiarray.h	175;"	d
get_col_Multiarray_T	containers/def_templates_multiarray.h	48;"	d
get_col_Multiarray_T	containers/def_templates_multiarray.h	99;"	d
get_col_Multiarray_T	containers/multiarray_T.cpp	/^Type* get_col_Multiarray_T (const ptrdiff_t col, struct Multiarray_T* a)$/;"	f
get_col_Multiarray_T	containers/undef_templates_multiarray.h	44;"	d
get_col_const_Matrix_C	containers/def_templates_matrix.h	123;"	d
get_col_const_Matrix_C	containers/undef_templates_matrix.h	70;"	d
get_col_const_Matrix_R	containers/def_templates_matrix.h	118;"	d
get_col_const_Matrix_R	containers/def_templates_matrix.h	159;"	d
get_col_const_Matrix_R	containers/undef_templates_matrix.h	65;"	d
get_col_const_Matrix_T	containers/def_templates_matrix.h	155;"	d
get_col_const_Matrix_T	containers/def_templates_matrix.h	48;"	d
get_col_const_Matrix_T	containers/def_templates_matrix.h	89;"	d
get_col_const_Matrix_T	containers/matrix_T.cpp	/^const Type* get_col_const_Matrix_T (const ptrdiff_t col, const struct const_Matrix_T*const a)$/;"	f
get_col_const_Matrix_T	containers/undef_templates_matrix.h	39;"	d
get_col_const_Multiarray_R	containers/def_templates_multiarray.h	135;"	d
get_col_const_Multiarray_R	containers/undef_templates_multiarray.h	77;"	d
get_col_const_Multiarray_T	containers/def_templates_multiarray.h	100;"	d
get_col_const_Multiarray_T	containers/def_templates_multiarray.h	176;"	d
get_col_const_Multiarray_T	containers/def_templates_multiarray.h	49;"	d
get_col_const_Multiarray_T	containers/multiarray_T.cpp	/^const Type* get_col_const_Multiarray_T (const ptrdiff_t col, const struct const_Multiarray_T* a)$/;"	f
get_col_const_Multiarray_T	containers/undef_templates_multiarray.h	45;"	d
get_compute_Flux_Advection_fptr	simulation/test_case/flux/def_templates_flux.h	172;"	d
get_compute_Flux_Advection_fptr	simulation/test_case/flux/def_templates_flux.h	70;"	d
get_compute_Flux_Advection_fptr	simulation/test_case/flux/flux_advection_T.cpp	/^static compute_Flux_Advection_fptr get_compute_Flux_Advection_fptr (const bool*const c_m)$/;"	f	file:
get_compute_Flux_Advection_fptr	simulation/test_case/flux/undef_templates_flux.h	68;"	d
get_compute_Flux_Burgers_Inviscid_fptr	simulation/test_case/flux/def_templates_flux.h	177;"	d
get_compute_Flux_Burgers_Inviscid_fptr	simulation/test_case/flux/def_templates_flux.h	75;"	d
get_compute_Flux_Burgers_Inviscid_fptr	simulation/test_case/flux/flux_burgers_inviscid_T.cpp	/^static compute_Flux_Burgers_Inviscid_fptr get_compute_Flux_Burgers_Inviscid_fptr (const bool*const c_m)$/;"	f	file:
get_compute_Flux_Burgers_Inviscid_fptr	simulation/test_case/flux/undef_templates_flux.h	73;"	d
get_compute_Flux_Euler_fptr	simulation/test_case/flux/def_templates_flux.h	187;"	d
get_compute_Flux_Euler_fptr	simulation/test_case/flux/def_templates_flux.h	85;"	d
get_compute_Flux_Euler_fptr	simulation/test_case/flux/flux_euler_T.cpp	/^static compute_Flux_Euler_fptr get_compute_Flux_Euler_fptr (const bool*const c_m)$/;"	f	file:
get_compute_Flux_Euler_fptr	simulation/test_case/flux/undef_templates_flux.h	83;"	d
get_compute_Flux_Navier_Stokes_fptr	simulation/test_case/flux/def_templates_flux.h	194;"	d
get_compute_Flux_Navier_Stokes_fptr	simulation/test_case/flux/def_templates_flux.h	92;"	d
get_compute_Flux_Navier_Stokes_fptr	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static compute_Flux_Navier_Stokes_fptr get_compute_Flux_Navier_Stokes_fptr (const bool*const c_m)$/;"	f	file:
get_compute_Flux_Navier_Stokes_fptr	simulation/test_case/flux/undef_templates_flux.h	90;"	d
get_compute_Flux_diffusion_fptr	simulation/test_case/flux/def_templates_flux.h	182;"	d
get_compute_Flux_diffusion_fptr	simulation/test_case/flux/def_templates_flux.h	80;"	d
get_compute_Flux_diffusion_fptr	simulation/test_case/flux/flux_diffusion_T.cpp	/^static compute_Flux_diffusion_fptr get_compute_Flux_diffusion_fptr (const bool*const c_m)$/;"	f	file:
get_compute_Flux_diffusion_fptr	simulation/test_case/flux/undef_templates_flux.h	78;"	d
get_compute_dmu_ds_fptr	simulation/test_case/flux/def_templates_flux.h	196;"	d
get_compute_dmu_ds_fptr	simulation/test_case/flux/def_templates_flux.h	94;"	d
get_compute_dmu_ds_fptr	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^static compute_dmu_ds_fptr get_compute_dmu_ds_fptr ( )$/;"	f	file:
get_compute_dmu_ds_fptr	simulation/test_case/flux/undef_templates_flux.h	92;"	d
get_compute_member_Boundary_Value_Input	simulation/test_case/def_templates_test_case.h	39;"	d
get_compute_member_Boundary_Value_Input	simulation/test_case/def_templates_test_case.h	63;"	d
get_compute_member_Boundary_Value_Input	simulation/test_case/test_case_T.cpp	/^static const bool* get_compute_member_Boundary_Value_Input$/;"	f	file:
get_compute_member_Boundary_Value_Input	simulation/test_case/undef_templates_test_case.h	37;"	d
get_compute_member_Flux_Input	simulation/test_case/def_templates_test_case.h	38;"	d
get_compute_member_Flux_Input	simulation/test_case/def_templates_test_case.h	62;"	d
get_compute_member_Flux_Input	simulation/test_case/test_case_T.cpp	/^static const bool* get_compute_member_Flux_Input$/;"	f	file:
get_compute_member_Flux_Input	simulation/test_case/undef_templates_test_case.h	36;"	d
get_compute_mu_fptr_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	31;"	d
get_compute_mu_fptr_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	50;"	d
get_compute_mu_fptr_T	simulation/test_case/solution/navier_stokes/solution_navier_stokes_T.cpp	/^compute_mu_fptr_T get_compute_mu_fptr_T ( )$/;"	f
get_compute_mu_fptr_T	simulation/test_case/solution/navier_stokes/undef_templates_solution_navier_stokes.h	26;"	d
get_const_Multiarray_Vector_T	containers/def_templates_multiarray.h	111;"	d
get_const_Multiarray_Vector_T	containers/def_templates_multiarray.h	186;"	d
get_const_Multiarray_Vector_T	containers/def_templates_multiarray.h	60;"	d
get_const_Multiarray_Vector_T	containers/multiarray_T.cpp	/^const struct const_Vector_T* get_const_Multiarray_Vector_T$/;"	f
get_const_Multiarray_Vector_T	containers/undef_templates_multiarray.h	56;"	d
get_constructor_Nodes_by_super_type	element/nodes.cpp	/^constructor_Nodes_fptr get_constructor_Nodes_by_super_type (const int s_type)$/;"	f
get_constructor_basis_bezier_by_super_type	element/bases.cpp	/^constructor_basis_fptr get_constructor_basis_bezier_by_super_type (const int s_type)$/;"	f
get_constructor_basis_by_super_type	element/bases.cpp	/^constructor_basis_fptr get_constructor_basis_by_super_type (const int s_type, const char*const ref_basis_name)$/;"	f
get_constructor_basis_by_super_type_i	element/bases.cpp	/^constructor_basis_fptr get_constructor_basis_by_super_type_i (const int s_type, const int ind_basis)$/;"	f
get_constructor_grad_basis_by_super_type	element/bases.cpp	/^constructor_grad_basis_fptr get_constructor_grad_basis_by_super_type (const int s_type, const char*const ref_basis_name)$/;"	f
get_conv_order_range	testing/integration/test_integration_convergence_support.cpp	/^static const int* get_conv_order_range (const struct Integration_Test_Info*const int_test_info, const char mp_type)$/;"	f	file:
get_d_Derived_Comp_Elements_Info	simulation/computational_elements/computational_elements_T.cpp	/^static struct Derived_Comp_Elements_Info get_d_Derived_Comp_Elements_Info$/;"	f	file:
get_d_Derived_Comp_Elements_Info	simulation/computational_elements/def_templates_computational_elements.h	29;"	d
get_d_Derived_Comp_Elements_Info	simulation/computational_elements/def_templates_computational_elements.h	49;"	d
get_d_Derived_Comp_Elements_Info	simulation/computational_elements/undef_templates_computational_elements.h	26;"	d
get_d_Derived_Elements_Info	simulation/computational_elements/computational_elements.cpp	/^static struct Derived_Elements_Info get_d_Derived_Elements_Info (const int base_name, const int derived_name)$/;"	f	file:
get_data_o	processing/post/convert_data.py	/^def get_data_o (input_i,output_i):$/;"	f
get_define	general/file_processing_conversions.cpp	/^static int get_define (const char*const def_str, const char*const def_type)$/;"	f	file:
get_dominant_geom_vol_side_index	simulation/solvers/face_solver.cpp	/^int get_dominant_geom_vol_side_index (const struct Solver_Face*const s_face)$/;"	f
get_dominant_volume_index	simulation/solvers/adaptation/adaptation.cpp	/^static int get_dominant_volume_index (const struct Adaptive_Solver_Face* a_s_face)$/;"	f	file:
get_dpg_face_ptr	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^struct DPG_Solver_Face* get_dpg_face_ptr (const struct DPG_Solver_Volume*const dpg_s_vol, const int index_f)$/;"	f
get_element_by_edge	element/element.cpp	/^const struct const_Element* get_element_by_edge (const struct const_Element*const element, const int le)$/;"	f
get_element_by_face	element/element.cpp	/^const struct const_Element* get_element_by_face (const struct const_Element*const element, const int lf)$/;"	f
get_element_by_type	element/element.cpp	/^const struct const_Element* get_element_by_type (const struct const_Intrusive_List*const elements, const int type)$/;"	f
get_elements_id	simulation/mesh/mesh_readers.cpp	/^static struct Vector_i* get_elements_id (FILE* mesh_file, struct Elementary_Entity*const entities, const int mpi_rank)$/;"	f	file:
get_entity_partition	simulation/mesh/mesh_readers.cpp	/^static int get_entity_partition(const ptrdiff_t entity_tag, const struct Elementary_Entity*const entities) {$/;"	f	file:
get_entity_phys_id	simulation/mesh/mesh_readers.cpp	/^static int get_entity_phys_id(const ptrdiff_t entity_tag, const struct Elementary_Entity*const entities) {$/;"	f	file:
get_face_element_index	simulation/computational_elements/face.cpp	/^int get_face_element_index (const struct Face*const face)$/;"	f
get_face_element_index_by_ind_lf	element/element.cpp	/^int get_face_element_index_by_ind_lf (const struct const_Element*const element, const int lf)$/;"	f
get_file_name_sp	general/file_processing.cpp	/^static const char* get_file_name_sp$/;"	f	file:
get_first_volume_index	simulation/mesh/mesh.cpp	/^ptrdiff_t get_first_volume_index (const struct const_Vector_i*const elem_per_dim, const int d)$/;"	f
get_geo_data	simulation/geometry/def_templates_geometry_parametric.h	33;"	d
get_geo_data	simulation/geometry/def_templates_geometry_parametric.h	55;"	d
get_geo_data	simulation/geometry/geometry_parametric_T.cpp	/^static struct Geo_Data get_geo_data (const char*const geo_name)$/;"	f	file:
get_geo_data	simulation/geometry/undef_templates_geometry_parametric.h	28;"	d
get_ghost_elements_id	simulation/mesh/mesh_readers.cpp	/^static struct Vector_i* get_ghost_elements_id (FILE* mesh_file, const int mpi_rank)$/;"	f	file:
get_ind_Node_ANN_index	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^ptrdiff_t get_ind_Node_ANN_index (const ptrdiff_t index, const ptrdiff_t ext_0, const struct Node_ANN*const src)$/;"	f
get_ind_child	simulation/solvers/adaptation/adaptation.cpp	/^static int get_ind_child (const int ind_h, const int side_index, const struct Face*const face_p)$/;"	f	file:
get_ind_compound	simulation/solvers/adaptation/adaptation.cpp	/^static int get_ind_compound (const int ind_h, const int side_index, const struct Face*const face_p)$/;"	f	file:
get_ind_h_operator	simulation/solvers/adaptation/adaptation.cpp	/^static int get_ind_h_operator (const struct Adaptive_Solver_Face*const a_s_face)$/;"	f	file:
get_ind_href_h_ref_non_dominant	simulation/solvers/adaptation/adaptation.cpp	/^static int get_ind_href_h_ref_non_dominant$/;"	f	file:
get_ind_lf_h_ref	simulation/solvers/adaptation/adaptation.cpp	/^static int get_ind_lf_h_ref (const int side_index, const struct Face*const face_p)$/;"	f	file:
get_ind_nc	element/element_operators.cpp	/^static ptrdiff_t get_ind_nc$/;"	f	file:
get_ind_op	element/element_operators.cpp	/^static ptrdiff_t get_ind_op$/;"	f	file:
get_ind_ord_h_ref	simulation/solvers/adaptation/adaptation.cpp	/^static int get_ind_ord_h_ref (const int side_index, const struct Face*const face_p)$/;"	f	file:
get_ind_ve	simulation/test_case/solution/restart/def_templates_restart.h	43;"	d
get_ind_ve	simulation/test_case/solution/restart/def_templates_restart.h	70;"	d
get_ind_ve	simulation/test_case/solution/restart/restart_T.cpp	/^static int get_ind_ve (const int e_type, const int ind_lf)$/;"	f	file:
get_ind_ve	simulation/test_case/solution/restart/undef_templates_restart.h	40;"	d
get_ind_w	element/element_operators.cpp	/^static ptrdiff_t get_ind_w$/;"	f	file:
get_input_path	simulation/simulation.cpp	/^static const char* get_input_path (struct Simulation*const sim)$/;"	f	file:
get_jn_fc_V	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static struct const_Vector_T* get_jn_fc_V (const struct const_Matrix_T*const jdet_n_fc)$/;"	f	file:
get_jn_fc_V	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	41;"	d
get_jn_fc_V	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	66;"	d
get_jn_fc_V	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	38;"	d
get_last_link	intrusive/intrusive.cpp	/^static struct Intrusive_Link* get_last_link (struct Intrusive_Link*const first)$/;"	f	file:
get_list_category	simulation/computational_elements/computational_elements_T.cpp	/^static int get_list_category (const struct Simulation* sim)$/;"	f	file:
get_list_category	simulation/computational_elements/def_templates_computational_elements.h	34;"	d
get_list_category	simulation/computational_elements/def_templates_computational_elements.h	54;"	d
get_list_category	simulation/computational_elements/undef_templates_computational_elements.h	31;"	d
get_mesh_format	simulation/mesh/mesh_readers.cpp	/^static int get_mesh_format(FILE* mesh_file)$/;"	f	file:
get_mutable_element_by_type	element/element.cpp	/^static struct Element* get_mutable_element_by_type (const struct Intrusive_List*const elements, const int type)$/;"	f	file:
get_n_children	simulation/solvers/adaptation/adaptation.cpp	/^static int get_n_children (const struct const_Element*const element)$/;"	f	file:
get_n_e_type	element/nodes_plotting.cpp	/^static int get_n_e_type (const int e_type)$/;"	f	file:
get_n_nodes	simulation/mesh/mesh_readers.cpp	/^int get_n_nodes (const int elem_type)$/;"	f
get_n_op	element/element_operators.cpp	/^static int get_n_op (const int range_d, const int d)$/;"	f	file:
get_n_perm_corr	element/nodes_correspondence.cpp	/^ptrdiff_t get_n_perm_corr (const int d, const int s_type)$/;"	f
get_n_ref_max	element/element_operators.cpp	/^static int get_n_ref_max (const struct Operator_Info* op_info)$/;"	f	file:
get_normal_flux_Energy	simulation/test_case/solution/navier_stokes/solution_navier_stokes.cpp	/^double get_normal_flux_Energy ( )$/;"	f
get_number_of_face_elements	element/element.cpp	/^int get_number_of_face_elements (const struct const_Element*const element)$/;"	f
get_op_L2_type	element/element_operators.cpp	/^static char get_op_L2_type (const int*const op_values)$/;"	f	file:
get_op_type_out	element/element_operators.cpp	/^static char get_op_type_out (const int op_type)$/;"	f	file:
get_operator__cc0_vgc_fgc	simulation/geometry/def_templates_geometry.h	106;"	d
get_operator__cc0_vgc_fgc	simulation/geometry/def_templates_geometry.h	63;"	d
get_operator__cc0_vgc_fgc	simulation/geometry/geometry_T.cpp	/^static const struct Operator* get_operator__cc0_vgc_fgc (const int side_index, const struct Solver_Face_T*const s_face)$/;"	f	file:
get_operator__cc0_vgc_fgc	simulation/geometry/undef_templates_geometry.h	57;"	d
get_operator__cc0_vgc_fgc	simulation/solvers/adaptation/adaptation.cpp	/^static const struct Operator* get_operator__cc0_vgc_fgc (const int side_index, const struct Solver_Face*const s_face)$/;"	f	file:
get_operator__cv0_ff_fc_T	simulation/solvers/compute_face_rlhs_T.cpp	/^const struct Operator* get_operator__cv0_ff_fc_T (const struct Solver_Face_T*const s_face)$/;"	f
get_operator__cv0_ff_fc_T	simulation/solvers/def_templates_compute_face_rlhs.h	30;"	d
get_operator__cv0_ff_fc_T	simulation/solvers/def_templates_compute_face_rlhs.h	61;"	d
get_operator__cv0_ff_fc_T	simulation/solvers/undef_templates_compute_face_rlhs.h	27;"	d
get_operator__cv0_vg_vc	simulation/test_case/solution/def_templates_solution.h	115;"	d
get_operator__cv0_vg_vc	simulation/test_case/solution/def_templates_solution.h	56;"	d
get_operator__cv0_vg_vc	simulation/test_case/solution/solution_T.cpp	/^static const struct Operator* get_operator__cv0_vg_vc (const struct Solver_Volume_T* s_vol)$/;"	f	file:
get_operator__cv0_vg_vc	simulation/test_case/solution/undef_templates_solution.h	58;"	d
get_operator__cv0_vg_vc_T	simulation/solvers/compute_volume_rlhs_T.cpp	/^static const struct Operator* get_operator__cv0_vg_vc_T (const struct Solver_Volume_T* s_vol)$/;"	f	file:
get_operator__cv0_vg_vc_T	simulation/solvers/def_templates_compute_volume_rlhs.h	52;"	d
get_operator__cv0_vg_vc_T	simulation/solvers/def_templates_compute_volume_rlhs.h	88;"	d
get_operator__cv0_vg_vc_T	simulation/solvers/undef_templates_compute_volume_rlhs.h	51;"	d
get_operator__cv0_vg_vs_T	simulation/solvers/def_templates_volume_solver.h	35;"	d
get_operator__cv0_vg_vs_T	simulation/solvers/def_templates_volume_solver.h	62;"	d
get_operator__cv0_vg_vs_T	simulation/solvers/undef_templates_volume_solver.h	33;"	d
get_operator__cv0_vg_vs_T	simulation/solvers/volume_solver_T.cpp	/^const struct Operator* get_operator__cv0_vg_vs_T (const struct Solver_Volume_T*const s_vol)$/;"	f
get_operator__cv0_vg_vt_T	simulation/solvers/opg/def_templates_volume_solver_opg.h	33;"	d
get_operator__cv0_vg_vt_T	simulation/solvers/opg/def_templates_volume_solver_opg.h	47;"	d
get_operator__cv0_vg_vt_T	simulation/solvers/opg/undef_templates_volume_solver_opg.h	33;"	d
get_operator__cv0_vg_vt_T	simulation/solvers/opg/volume_solver_opg_T.cpp	/^const struct Operator* get_operator__cv0_vg_vt_T (const struct OPG_Solver_Volume_T*const opg_s_vol)$/;"	f
get_operator__cv0_vgc_fgc	simulation/solvers/adaptation/adaptation.cpp	/^static const struct Operator* get_operator__cv0_vgc_fgc$/;"	f	file:
get_operator__cv0_vgc_fis	simulation/geometry/def_templates_geometry.h	104;"	d
get_operator__cv0_vgc_fis	simulation/geometry/def_templates_geometry.h	61;"	d
get_operator__cv0_vgc_fis	simulation/geometry/geometry_T.cpp	/^static const struct Operator* get_operator__cv0_vgc_fis (const int side_index, const struct Solver_Face_T*const s_face)$/;"	f	file:
get_operator__cv0_vgc_fis	simulation/geometry/undef_templates_geometry.h	55;"	d
get_operator__cv0_vr_fc_T	simulation/solvers/compute_face_rlhs_T.cpp	/^const struct Operator* get_operator__cv0_vr_fc_T (const int side_index, const struct Solver_Face_T* s_face)$/;"	f
get_operator__cv0_vr_fc_T	simulation/solvers/def_templates_compute_face_rlhs.h	29;"	d
get_operator__cv0_vr_fc_T	simulation/solvers/def_templates_compute_face_rlhs.h	60;"	d
get_operator__cv0_vr_fc_T	simulation/solvers/undef_templates_compute_face_rlhs.h	26;"	d
get_operator__cv0_vr_vc_T	simulation/solvers/def_templates_volume_solver.h	38;"	d
get_operator__cv0_vr_vc_T	simulation/solvers/def_templates_volume_solver.h	65;"	d
get_operator__cv0_vr_vc_T	simulation/solvers/undef_templates_volume_solver.h	36;"	d
get_operator__cv0_vr_vc_T	simulation/solvers/volume_solver_T.cpp	/^const struct Operator* get_operator__cv0_vr_vc_T (const struct Solver_Volume_T* s_vol)$/;"	f
get_operator__cv0_vr_vs_T	simulation/solvers/def_templates_volume_solver.h	34;"	d
get_operator__cv0_vr_vs_T	simulation/solvers/def_templates_volume_solver.h	61;"	d
get_operator__cv0_vr_vs_T	simulation/solvers/undef_templates_volume_solver.h	32;"	d
get_operator__cv0_vr_vs_T	simulation/solvers/volume_solver_T.cpp	/^const struct Operator* get_operator__cv0_vr_vs_T (const struct Solver_Volume_T*const s_vol)$/;"	f
get_operator__cv0_vs_fc_T	simulation/solvers/compute_face_rlhs_T.cpp	/^const struct Operator* get_operator__cv0_vs_fc_T (const int side_index, const struct Solver_Face_T* s_face)$/;"	f
get_operator__cv0_vs_fc_T	simulation/solvers/def_templates_compute_face_rlhs.h	28;"	d
get_operator__cv0_vs_fc_T	simulation/solvers/def_templates_compute_face_rlhs.h	59;"	d
get_operator__cv0_vs_fc_T	simulation/solvers/undef_templates_compute_face_rlhs.h	25;"	d
get_operator__cv0_vs_vc_T	simulation/solvers/def_templates_volume_solver.h	36;"	d
get_operator__cv0_vs_vc_T	simulation/solvers/def_templates_volume_solver.h	63;"	d
get_operator__cv0_vs_vc_T	simulation/solvers/undef_templates_volume_solver.h	34;"	d
get_operator__cv0_vs_vc_T	simulation/solvers/volume_solver_T.cpp	/^const struct Operator* get_operator__cv0_vs_vc_T (const struct Solver_Volume_T* s_vol)$/;"	f
get_operator__cv0_vs_vs_T	simulation/solvers/def_templates_volume_solver.h	33;"	d
get_operator__cv0_vs_vs_T	simulation/solvers/def_templates_volume_solver.h	60;"	d
get_operator__cv0_vs_vs_T	simulation/solvers/undef_templates_volume_solver.h	31;"	d
get_operator__cv0_vs_vs_T	simulation/solvers/volume_solver_T.cpp	/^const struct Operator* get_operator__cv0_vs_vs_T (const struct Solver_Volume_T*const s_vol)$/;"	f
get_operator__cv0_vt_fc_T	simulation/solvers/def_templates_face_solver.h	32;"	d
get_operator__cv0_vt_fc_T	simulation/solvers/def_templates_face_solver.h	55;"	d
get_operator__cv0_vt_fc_T	simulation/solvers/face_solver_T.cpp	/^const struct Operator* get_operator__cv0_vt_fc_T$/;"	f
get_operator__cv0_vt_fc_T	simulation/solvers/undef_templates_face_solver.h	29;"	d
get_operator__cv0_vt_vc_T	simulation/solvers/def_templates_volume_solver.h	37;"	d
get_operator__cv0_vt_vc_T	simulation/solvers/def_templates_volume_solver.h	64;"	d
get_operator__cv0_vt_vc_T	simulation/solvers/undef_templates_volume_solver.h	35;"	d
get_operator__cv0_vt_vc_T	simulation/solvers/volume_solver_T.cpp	/^const struct Operator* get_operator__cv0_vt_vc_T (const struct Solver_Volume_T*const s_vol)$/;"	f
get_operator__cv1_vs_vc	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static struct Multiarray_Operator get_operator__cv1_vs_vc (const struct DG_Solver_Volume_T*const dg_s_vol)$/;"	f	file:
get_operator__cv1_vs_vc	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	29;"	d
get_operator__cv1_vs_vc	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	54;"	d
get_operator__cv1_vs_vc	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	26;"	d
get_operator__cv1_vt_fc_T	simulation/solvers/opg/def_templates_face_solver_opg.h	36;"	d
get_operator__cv1_vt_fc_T	simulation/solvers/opg/def_templates_face_solver_opg.h	60;"	d
get_operator__cv1_vt_fc_T	simulation/solvers/opg/face_solver_opg_T.cpp	/^struct Multiarray_Operator get_operator__cv1_vt_fc_T$/;"	f
get_operator__cv1_vt_fc_T	simulation/solvers/opg/undef_templates_face_solver_opg.h	32;"	d
get_operator__cv1_vt_vc_T	simulation/solvers/def_templates_volume_solver.h	40;"	d
get_operator__cv1_vt_vc_T	simulation/solvers/def_templates_volume_solver.h	67;"	d
get_operator__cv1_vt_vc_T	simulation/solvers/undef_templates_volume_solver.h	38;"	d
get_operator__cv1_vt_vc_T	simulation/solvers/volume_solver_T.cpp	/^struct Multiarray_Operator get_operator__cv1_vt_vc_T (const struct Solver_Volume_T*const s_vol)$/;"	f
get_operator__cv1_vt_vs_T	simulation/solvers/opg/def_templates_volume_solver_opg.h	32;"	d
get_operator__cv1_vt_vs_T	simulation/solvers/opg/def_templates_volume_solver_opg.h	46;"	d
get_operator__cv1_vt_vs_T	simulation/solvers/opg/undef_templates_volume_solver_opg.h	32;"	d
get_operator__cv1_vt_vs_T	simulation/solvers/opg/volume_solver_opg_T.cpp	/^struct Multiarray_Operator get_operator__cv1_vt_vs_T (const struct OPG_Solver_Volume_T*const opg_s_vol)$/;"	f
get_operator__cvcv0_vs_vc	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static const struct Operator* get_operator__cvcv0_vs_vc (const struct DPG_Solver_Volume* dpg_s_vol)$/;"	f	file:
get_operator__cvcv1_vt_vc__rlhs	simulation/solvers/dpg/compute_all_rlhs_dpg.cpp	/^static struct Multiarray_Operator get_operator__cvcv1_vt_vc__rlhs (const struct DPG_Solver_Volume* dpg_s_vol)$/;"	f	file:
get_operator__nc_fc_T	simulation/solvers/compute_face_rlhs_T.cpp	/^const struct const_Vector_i* get_operator__nc_fc_T (const int side_index_dest, const struct Solver_Face_T* s_face)$/;"	f
get_operator__nc_fc_T	simulation/solvers/def_templates_compute_face_rlhs.h	33;"	d
get_operator__nc_fc_T	simulation/solvers/def_templates_compute_face_rlhs.h	64;"	d
get_operator__nc_fc_T	simulation/solvers/undef_templates_compute_face_rlhs.h	30;"	d
get_operator__nc_ff	simulation/solvers/adaptation/adaptation.cpp	/^const struct const_Vector_i* get_operator__nc_ff (const int side_index_dest, const struct Solver_Face* s_face)$/;"	f
get_operator__nc_fg	simulation/solvers/adaptation/adaptation.cpp	/^static const struct const_Vector_i* get_operator__nc_fg$/;"	f	file:
get_operator__ones_coef_vt	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static const struct const_Vector_R* get_operator__ones_coef_vt (const struct DPG_Solver_Volume_T*const dpg_s_vol)$/;"	f	file:
get_operator__ones_coef_vt	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	55;"	d
get_operator__ones_coef_vt	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	97;"	d
get_operator__ones_coef_vt	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	50;"	d
get_operator__ones_coef_vt	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	50;"	d
get_operator__tw0_vt_fc_T	simulation/solvers/compute_face_rlhs_T.cpp	/^const struct Operator* get_operator__tw0_vt_fc_T (const int side_index, const struct Solver_Face_T* s_face)$/;"	f
get_operator__tw0_vt_fc_T	simulation/solvers/def_templates_compute_face_rlhs.h	27;"	d
get_operator__tw0_vt_fc_T	simulation/solvers/def_templates_compute_face_rlhs.h	58;"	d
get_operator__tw0_vt_fc_T	simulation/solvers/undef_templates_compute_face_rlhs.h	24;"	d
get_operator__tw0_vt_vc_T	simulation/solvers/def_templates_solve.h	25;"	d
get_operator__tw0_vt_vc_T	simulation/solvers/def_templates_solve.h	46;"	d
get_operator__tw0_vt_vc_T	simulation/solvers/solve_T.cpp	/^const struct Operator* get_operator__tw0_vt_vc_T (const struct Solver_Volume_T* s_vol)$/;"	f
get_operator__tw0_vt_vc_T	simulation/solvers/undef_templates_solve.h	22;"	d
get_operator__tw1_vt_vc_T	simulation/solvers/def_templates_volume_solver.h	39;"	d
get_operator__tw1_vt_vc_T	simulation/solvers/def_templates_volume_solver.h	66;"	d
get_operator__tw1_vt_vc_T	simulation/solvers/undef_templates_volume_solver.h	37;"	d
get_operator__tw1_vt_vc_T	simulation/solvers/volume_solver_T.cpp	/^struct Multiarray_Operator get_operator__tw1_vt_vc_T (const struct Solver_Volume_T* s_vol)$/;"	f
get_operator__vc0_fgc_fgc	simulation/solvers/adaptation/adaptation.cpp	/^static const struct Operator* get_operator__vc0_fgc_fgc (const int side_index, const struct Solver_Face*const s_face)$/;"	f	file:
get_operator__vc0_fis_fgc	simulation/geometry/def_templates_geometry.h	105;"	d
get_operator__vc0_fis_fgc	simulation/geometry/def_templates_geometry.h	62;"	d
get_operator__vc0_fis_fgc	simulation/geometry/geometry_T.cpp	/^static const struct Operator* get_operator__vc0_fis_fgc (const int side_index, const struct Solver_Face_T*const s_face)$/;"	f	file:
get_operator__vc0_fis_fgc	simulation/geometry/undef_templates_geometry.h	56;"	d
get_operator__vc0_vs_vs_T	simulation/solvers/opg/def_templates_volume_solver_opg.h	31;"	d
get_operator__vc0_vs_vs_T	simulation/solvers/opg/def_templates_volume_solver_opg.h	45;"	d
get_operator__vc0_vs_vs_T	simulation/solvers/opg/undef_templates_volume_solver_opg.h	31;"	d
get_operator__vc0_vs_vs_T	simulation/solvers/opg/volume_solver_opg_T.cpp	/^const struct Operator* get_operator__vc0_vs_vs_T (const struct OPG_Solver_Volume_T*const opg_s_vol)$/;"	f
get_operator__vv0_fgc_fgc	simulation/solvers/adaptation/adaptation.cpp	/^static const struct Operator* get_operator__vv0_fgc_fgc (const int side_index, const struct Solver_Face*const s_face)$/;"	f	file:
get_operator__w_fc__s_e_T	simulation/solvers/def_templates_face_solver.h	30;"	d
get_operator__w_fc__s_e_T	simulation/solvers/def_templates_face_solver.h	53;"	d
get_operator__w_fc__s_e_T	simulation/solvers/face_solver_T.cpp	/^const struct const_Vector_R* get_operator__w_fc__s_e_T (const struct Solver_Face_T*const s_face)$/;"	f
get_operator__w_fc__s_e_T	simulation/solvers/undef_templates_face_solver.h	27;"	d
get_operator__w_vc__s_e_T	simulation/solvers/def_templates_volume_solver.h	29;"	d
get_operator__w_vc__s_e_T	simulation/solvers/def_templates_volume_solver.h	56;"	d
get_operator__w_vc__s_e_T	simulation/solvers/undef_templates_solver.h	27;"	d
get_operator__w_vc__s_e_T	simulation/solvers/undef_templates_volume_solver.h	27;"	d
get_operator__w_vc__s_e_T	simulation/solvers/volume_solver_T.cpp	/^const struct const_Vector_d* get_operator__w_vc__s_e_T (const struct Solver_Volume_T* s_vol)$/;"	f
get_r_s	simulation/test_case/solution/navier_stokes/solution_navier_stokes.cpp	/^double get_r_s ( )$/;"	f
get_restart_name	simulation/test_case/solution/restart/restart.cpp	/^const char* get_restart_name ( )$/;"	f
get_row_Matrix_C	containers/def_templates_matrix.h	120;"	d
get_row_Matrix_C	containers/undef_templates_matrix.h	67;"	d
get_row_Matrix_R	containers/def_templates_matrix.h	115;"	d
get_row_Matrix_R	containers/def_templates_matrix.h	156;"	d
get_row_Matrix_R	containers/undef_templates_matrix.h	62;"	d
get_row_Matrix_T	containers/def_templates_matrix.h	152;"	d
get_row_Matrix_T	containers/def_templates_matrix.h	45;"	d
get_row_Matrix_T	containers/def_templates_matrix.h	86;"	d
get_row_Matrix_T	containers/matrix_T.cpp	/^Type* get_row_Matrix_T (const ptrdiff_t row, const struct Matrix_T* a)$/;"	f
get_row_Matrix_T	containers/undef_templates_matrix.h	36;"	d
get_row_Multiarray_R	containers/def_templates_multiarray.h	132;"	d
get_row_Multiarray_R	containers/undef_templates_multiarray.h	74;"	d
get_row_Multiarray_T	containers/def_templates_multiarray.h	173;"	d
get_row_Multiarray_T	containers/def_templates_multiarray.h	46;"	d
get_row_Multiarray_T	containers/def_templates_multiarray.h	97;"	d
get_row_Multiarray_T	containers/multiarray_T.cpp	/^Type* get_row_Multiarray_T (const ptrdiff_t row, const struct Multiarray_T* a)$/;"	f
get_row_Multiarray_T	containers/undef_templates_multiarray.h	42;"	d
get_row_const_Matrix_C	containers/def_templates_matrix.h	121;"	d
get_row_const_Matrix_C	containers/undef_templates_matrix.h	68;"	d
get_row_const_Matrix_R	containers/def_templates_matrix.h	116;"	d
get_row_const_Matrix_R	containers/def_templates_matrix.h	157;"	d
get_row_const_Matrix_R	containers/undef_templates_matrix.h	63;"	d
get_row_const_Matrix_T	containers/def_templates_matrix.h	153;"	d
get_row_const_Matrix_T	containers/def_templates_matrix.h	46;"	d
get_row_const_Matrix_T	containers/def_templates_matrix.h	87;"	d
get_row_const_Matrix_T	containers/matrix_T.cpp	/^const Type* get_row_const_Matrix_T (const ptrdiff_t row, const struct const_Matrix_T*const a)$/;"	f
get_row_const_Matrix_T	containers/undef_templates_matrix.h	37;"	d
get_row_const_Multiarray_R	containers/def_templates_multiarray.h	133;"	d
get_row_const_Multiarray_R	containers/undef_templates_multiarray.h	75;"	d
get_row_const_Multiarray_T	containers/def_templates_multiarray.h	174;"	d
get_row_const_Multiarray_T	containers/def_templates_multiarray.h	47;"	d
get_row_const_Multiarray_T	containers/def_templates_multiarray.h	98;"	d
get_row_const_Multiarray_T	containers/multiarray_T.cpp	/^const Type* get_row_const_Multiarray_T (const ptrdiff_t row, const struct const_Multiarray_T* a)$/;"	f
get_row_const_Multiarray_T	containers/undef_templates_multiarray.h	43;"	d
get_scaling_factors	element/nodes_operators.cpp	/^static struct const_Matrix_d get_scaling_factors (const int e_type, const char ce, const int ind_ce)$/;"	f	file:
get_set_collocated	simulation/simulation.cpp	/^bool get_set_collocated (const bool*const new_val)$/;"	f
get_set_degree_poly	simulation/simulation.cpp	/^const int* get_set_degree_poly (const int*const new_vals, const char*const key)$/;"	f
get_set_domain_type	simulation/simulation.cpp	/^int get_set_domain_type (const int*const new_val)$/;"	f
get_set_has_1st_2nd_order	simulation/test_case/test_case.cpp	/^const bool* get_set_has_1st_2nd_order (const bool*const new_vals)$/;"	f
get_set_ind_num_flux	simulation/solvers/numerical_flux/numerical_flux.cpp	/^const int* get_set_ind_num_flux (const int*const new_vals)$/;"	f
get_set_method	simulation/simulation.cpp	/^int get_set_method (const int*const new_val)$/;"	f
get_set_n_var_eq	simulation/test_case/test_case.cpp	/^const int* get_set_n_var_eq (const int*const new_vals)$/;"	f
get_set_op_format	simulation/simulation.cpp	/^char get_set_op_format (const char new_format)$/;"	f
get_set_pde_index	simulation/test_case/test_case.cpp	/^int get_set_pde_index (const int*const new_val)$/;"	f
get_slice_Matrix_T	containers/def_templates_matrix.h	160;"	d
get_slice_Matrix_T	containers/def_templates_matrix.h	49;"	d
get_slice_Matrix_T	containers/def_templates_matrix.h	90;"	d
get_slice_Matrix_T	containers/matrix_T.cpp	/^Type* get_slice_Matrix_T (const ptrdiff_t slice, const struct Matrix_T* a)$/;"	f
get_slice_Matrix_T	containers/undef_templates_matrix.h	40;"	d
get_slice_const_Matrix_T	containers/def_templates_matrix.h	161;"	d
get_slice_const_Matrix_T	containers/def_templates_matrix.h	50;"	d
get_slice_const_Matrix_T	containers/def_templates_matrix.h	91;"	d
get_slice_const_Matrix_T	containers/matrix_T.cpp	/^const Type* get_slice_const_Matrix_T (const ptrdiff_t slice, const struct const_Matrix_T* a)$/;"	f
get_slice_const_Matrix_T	containers/undef_templates_matrix.h	41;"	d
get_sol_data	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	42;"	d
get_sol_data	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	68;"	d
get_sol_data	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^static struct Sol_Data__dd get_sol_data ( )$/;"	f	file:
get_sol_data	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	37;"	d
get_sol_data	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	31;"	d
get_sol_data	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	48;"	d
get_sol_data	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^static struct Sol_Data__fs get_sol_data ( )$/;"	f	file:
get_sol_data	simulation/test_case/solution/euler/free_stream/undef_templates_solution_free_stream.h	26;"	d
get_sol_data	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	30;"	d
get_sol_data	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	46;"	d
get_sol_data	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^static struct Sol_Data__pv get_sol_data ( )$/;"	f	file:
get_sol_data	simulation/test_case/solution/euler/periodic_vortex/undef_templates_solution_periodic_vortex.h	26;"	d
get_sol_data	simulation/test_case/solution/euler/supersonic_vortex/def_templates_solution_supersonic_vortex.h	30;"	d
get_sol_data	simulation/test_case/solution/euler/supersonic_vortex/def_templates_solution_supersonic_vortex.h	44;"	d
get_sol_data	simulation/test_case/solution/euler/supersonic_vortex/solution_supersonic_vortex_T.cpp	/^static struct Sol_Data__sv get_sol_data ( )$/;"	f	file:
get_sol_data	simulation/test_case/solution/euler/supersonic_vortex/undef_templates_solution_supersonic_vortex.h	25;"	d
get_sol_data	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	33;"	d
get_sol_data	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	51;"	d
get_sol_data	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^static struct Sol_Data__tc get_sol_data (const struct Simulation*const sim)$/;"	f	file:
get_sol_data	simulation/test_case/solution/navier_stokes/taylor_couette/undef_templates_solution_taylor_couette.h	28;"	d
get_sol_data__c_dl	simulation/test_case/solution/euler/solution_euler.cpp	/^static struct Sol_Data__c_dl get_sol_data__c_dl ( )$/;"	f	file:
get_sol_data_advection_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	32;"	d
get_sol_data_advection_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	49;"	d
get_sol_data_advection_T	simulation/test_case/solution/advection/solution_advection_T.cpp	/^struct Sol_Data__Advection_T get_sol_data_advection_T ( )$/;"	f
get_sol_data_advection_T	simulation/test_case/solution/advection/undef_templates_solution_advection.h	30;"	d
get_sol_scale	simulation/solvers/dg/compute_grad_coef_dg_T.cpp	/^static Real get_sol_scale (const int side_index, const int sol_index, const int ind_num_flux_2nd)$/;"	f	file:
get_sol_scale	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	42;"	d
get_sol_scale	simulation/solvers/dg/def_templates_compute_grad_coef_dg.h	67;"	d
get_sol_scale	simulation/solvers/dg/undef_templates_compute_grad_coef_dg.h	39;"	d
get_specific_gas_constant	simulation/test_case/solution/euler/solution_euler.cpp	/^static double get_specific_gas_constant ( )$/;"	f	file:
get_val_Matrix_T	containers/def_templates_matrix.h	162;"	d
get_val_Matrix_T	containers/def_templates_matrix.h	51;"	d
get_val_Matrix_T	containers/def_templates_matrix.h	92;"	d
get_val_Matrix_T	containers/matrix_T.cpp	/^Type get_val_Matrix_T (const ptrdiff_t row, const ptrdiff_t col, const struct Matrix_T*const a)$/;"	f
get_val_Matrix_T	containers/undef_templates_matrix.h	42;"	d
get_val_const_Matrix_T	containers/def_templates_matrix.h	163;"	d
get_val_const_Matrix_T	containers/def_templates_matrix.h	52;"	d
get_val_const_Matrix_T	containers/def_templates_matrix.h	93;"	d
get_val_const_Matrix_T	containers/matrix_T.cpp	/^Type get_val_const_Matrix_T (const ptrdiff_t row, const ptrdiff_t col, const struct const_Matrix_T*const a)$/;"	f
get_val_const_Matrix_T	containers/undef_templates_matrix.h	43;"	d
get_volume_by_index	testing/support/simulation/computational_elements/test_support_volume.cpp	/^struct Volume* get_volume_by_index (const struct Intrusive_List*const volumes, const int index)$/;"	f
get_volume_neighbour	simulation/computational_elements/face.cpp	/^struct Volume* get_volume_neighbour (const struct Volume*const vol, const struct Face*const face)$/;"	f
get_vtk_n_corners	element/nodes_plotting.cpp	/^static int get_vtk_n_corners (const int vtk_type)$/;"	f	file:
get_xyz_node_m_ve	simulation/test_case/solution/restart/def_templates_restart.h	41;"	d
get_xyz_node_m_ve	simulation/test_case/solution/restart/def_templates_restart.h	68;"	d
get_xyz_node_m_ve	simulation/test_case/solution/restart/restart_T.cpp	/^static const Real* get_xyz_node_m_ve$/;"	f	file:
get_xyz_node_m_ve	simulation/test_case/solution/restart/undef_templates_restart.h	38;"	d
grad_bernstein_std	element/bases.cpp	/^static double grad_bernstein_std (const int p, const int i, const double r)$/;"	f	file:
grad_coef	simulation/solvers/volume_solver_T.h	/^	struct Multiarray_T* grad_coef;$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::Multiarray_T
grad_coef_13	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_d* grad_coef_13;$/;"	m	struct:Basis_Data_TP_Bezier	typeref:struct:Basis_Data_TP_Bezier::const_Multiarray_d	file:
grad_coef_13	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_d* grad_coef_13;$/;"	m	struct:Basis_Data_TP_Ortho	typeref:struct:Basis_Data_TP_Ortho::const_Multiarray_d	file:
grad_coef_23	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_d* grad_coef_23;$/;"	m	struct:Basis_Data_TP_Bezier	typeref:struct:Basis_Data_TP_Bezier::const_Multiarray_d	file:
grad_coef_23	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_d* grad_coef_23;$/;"	m	struct:Basis_Data_TP_Ortho	typeref:struct:Basis_Data_TP_Ortho::const_Multiarray_d	file:
grad_coef_25	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_d* grad_coef_25;$/;"	m	struct:Basis_Data_SI_Bezier	typeref:struct:Basis_Data_SI_Bezier::const_Multiarray_d	file:
grad_coef_25	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_d* grad_coef_25;$/;"	m	struct:Basis_Data_SI_Ortho	typeref:struct:Basis_Data_SI_Ortho::const_Multiarray_d	file:
grad_coef_33	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_d* grad_coef_33;$/;"	m	struct:Basis_Data_TP_Bezier	typeref:struct:Basis_Data_TP_Bezier::const_Multiarray_d	file:
grad_coef_33	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_d* grad_coef_33;$/;"	m	struct:Basis_Data_TP_Ortho	typeref:struct:Basis_Data_TP_Ortho::const_Multiarray_d	file:
grad_coef_36	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_d* grad_coef_36;$/;"	m	struct:Basis_Data_PYR_Bezier	typeref:struct:Basis_Data_PYR_Bezier::const_Multiarray_d	file:
grad_coef_36	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_d* grad_coef_36;$/;"	m	struct:Basis_Data_PYR_Ortho	typeref:struct:Basis_Data_PYR_Ortho::const_Multiarray_d	file:
grad_coef_37	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_d* grad_coef_37;$/;"	m	struct:Basis_Data_SI_Bezier	typeref:struct:Basis_Data_SI_Bezier::const_Multiarray_d	file:
grad_coef_37	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_d* grad_coef_37;$/;"	m	struct:Basis_Data_SI_Ortho	typeref:struct:Basis_Data_SI_Ortho::const_Multiarray_d	file:
grad_coef_f	simulation/solvers/dg/face_solver_dg_T.h	/^		struct Multiarray_T* grad_coef_f; \/\/\/< The face contributions to the solution gradient coefficients.$/;"	m	struct:DG_Solver_Face_T::Neigh_Info_DG	typeref:struct:DG_Solver_Face_T::Neigh_Info_DG::Multiarray_T
grad_coef_v	simulation/solvers/dg/volume_solver_dg_T.h	/^	struct Multiarray_T* grad_coef_v; \/\/\/< The volume contribution to the solution gradient coefficients.$/;"	m	struct:DG_Solver_Volume_T	typeref:struct:DG_Solver_Volume_T::Multiarray_T
grad_p	simulation/visualization/visualization.cpp	/^	const struct const_Multiarray_d* grad_p; \/\/\/< solution "grad"ients at the 'p'lotting nodes.$/;"	m	struct:Volume_Data_Vis	typeref:struct:Volume_Data_Vis::const_Multiarray_d	file:
grad_phi13	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_Matrix_d* grad_phi13, \/\/\/< The 1d basis gradient functions of order 3.$/;"	m	struct:Basis_Data_TP_Bezier	typeref:struct:Basis_Data_TP_Bezier::const_Multiarray_Matrix_d	file:
grad_phi13	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_Matrix_d* grad_phi13, \/\/\/< The 1d basis gradient functions of order 3.$/;"	m	struct:Basis_Data_TP_Ortho	typeref:struct:Basis_Data_TP_Ortho::const_Multiarray_Matrix_d	file:
grad_phi22	testing/unit/test_unit_bases.cpp	/^	                                      * grad_phi22, \/\/\/< The 2d basis gradient functions of order 2.$/;"	m	struct:Basis_Data_TP_Bezier	typeref:struct:Basis_Data_TP_Bezier::	file:
grad_phi22	testing/unit/test_unit_bases.cpp	/^	                                      * grad_phi22, \/\/\/< The 2d basis gradient functions of order 2.$/;"	m	struct:Basis_Data_TP_Ortho	typeref:struct:Basis_Data_TP_Ortho::	file:
grad_phi22	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_Matrix_d* grad_phi22, \/\/\/< The 2d basis gradient functions of order 2.$/;"	m	struct:Basis_Data_SI_Bezier	typeref:struct:Basis_Data_SI_Bezier::const_Multiarray_Matrix_d	file:
grad_phi22	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_Matrix_d* grad_phi22, \/\/\/< The 2d basis gradient functions of order 2.$/;"	m	struct:Basis_Data_SI_Ortho	typeref:struct:Basis_Data_SI_Ortho::const_Multiarray_Matrix_d	file:
grad_phi31	testing/unit/test_unit_bases.cpp	/^	                                      * grad_phi31; \/\/\/< The 3d basis gradient functions of order 1.$/;"	m	struct:Basis_Data_SI_Bezier	typeref:struct:Basis_Data_SI_Bezier::	file:
grad_phi31	testing/unit/test_unit_bases.cpp	/^	                                      * grad_phi31; \/\/\/< The 3d basis gradient functions of order 1.$/;"	m	struct:Basis_Data_SI_Ortho	typeref:struct:Basis_Data_SI_Ortho::	file:
grad_phi31	testing/unit/test_unit_bases.cpp	/^	                                      * grad_phi31; \/\/\/< The 3d basis gradient functions of order 1.$/;"	m	struct:Basis_Data_TP_Bezier	typeref:struct:Basis_Data_TP_Bezier::	file:
grad_phi31	testing/unit/test_unit_bases.cpp	/^	                                      * grad_phi31; \/\/\/< The 3d basis gradient functions of order 1.$/;"	m	struct:Basis_Data_TP_Ortho	typeref:struct:Basis_Data_TP_Ortho::	file:
grad_phi32	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_Matrix_d* grad_phi32; \/\/\/< The 3d basis gradient functions of order 2.$/;"	m	struct:Basis_Data_PYR_Bezier	typeref:struct:Basis_Data_PYR_Bezier::const_Multiarray_Matrix_d	file:
grad_phi32	testing/unit/test_unit_bases.cpp	/^	const struct const_Multiarray_Matrix_d* grad_phi32; \/\/\/< The 3d basis gradient functions of order 2.$/;"	m	struct:Basis_Data_PYR_Ortho	typeref:struct:Basis_Data_PYR_Ortho::const_Multiarray_Matrix_d	file:
gsl_matrix_T	containers/def_templates_matrix_math.h	22;"	d
gsl_matrix_T	containers/def_templates_matrix_math.h	55;"	d
gsl_matrix_T	containers/undef_templates_matrix_math.h	19;"	d
gsl_permute_matrix_T	containers/def_templates_matrix_math.h	24;"	d
gsl_permute_matrix_T	containers/def_templates_matrix_math.h	57;"	d
gsl_permute_matrix_T	containers/undef_templates_matrix_math.h	21;"	d
guess	simulation/test_case/solution/restart/inverse_mapping.cpp	/^	double guess; \/\/\/< Value for the initial guess for the Newton algorithm (close to the centroid is best).$/;"	m	struct:Inv_Map	file:
h	simulation/computational_elements/face.h	/^	double h; \/\/\/< As for \\ref Volume::h but for the face.$/;"	m	struct:Face
h	simulation/computational_elements/volume.h	/^	double h; \/\/\/< Measure of volume size (maximum edge length).$/;"	m	struct:Volume
h	simulation/geometry/geometry_parametric_T.cpp	/^	     h,     \/\/\/< Geometry parameter ('h'eight generally).$/;"	m	struct:Geo_Data	file:
h	simulation/test_case/boundary/boundary_T.h	/^	double h; \/\/\/< \\ref Face::h.$/;"	m	struct:Boundary_Value_Input_T
h	testing/integration/test_integration_convergence_support.cpp	/^	const struct const_Multiarray_d* h,           \/\/\/< The multiarray of mesh spacing.$/;"	m	struct:Conv_Order_Data	typeref:struct:Conv_Order_Data::const_Multiarray_d	file:
h_op	element/element_operators.h	/^	          h_op,  \/\/\/< The h-refinement index of the operator.$/;"	m	struct:Op_IO
has_1st_order	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	const bool has_1st_order, \/\/\/< \\ref Test_Case_T::has_1st_order.$/;"	m	struct:Numerical_Flux_Input_T
has_1st_order	simulation/test_case/flux/flux_T.h	/^	const bool has_1st_order, \/\/\/< \\ref Test_Case_T::has_1st_order.$/;"	m	struct:Flux_Input_T
has_1st_order	simulation/test_case/test_case_T.h	/^	const bool has_1st_order, \/\/\/< Flag for whether the pde under consideration has 1st order terms.$/;"	m	struct:Test_Case_T
has_2nd_order	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	           has_2nd_order; \/\/\/< \\ref Test_Case_T::has_2nd_order.$/;"	m	struct:Numerical_Flux_Input_T
has_2nd_order	simulation/test_case/flux/flux_T.h	/^	           has_2nd_order; \/\/\/< \\ref Test_Case_T::has_2nd_order.$/;"	m	struct:Flux_Input_T
has_2nd_order	simulation/test_case/test_case_T.h	/^	           has_2nd_order; \/\/\/< Flag for whether the pde under consideration has 2nd order terms.$/;"	m	struct:Test_Case_T
has_analytical	simulation/test_case/test_case_T.h	/^	const bool has_analytical;   \/\/\/< Flag for whether the test case has an analytical solution.$/;"	m	struct:Test_Case_T
has_analytical	simulation/visualization/visualization.cpp	/^	bool has_analytical; \/\/\/< \\ref Test_Case_T::has_analytical.$/;"	m	struct:Volume_Data_Vis	file:
has_functional	simulation/test_case/test_case_T.h	/^	const bool has_functional;   \/\/\/< Flag for whether a functional error should be computed for the test case.$/;"	m	struct:Test_Case_T
has_symms	element/nodes.h	/^	bool has_symms;     \/\/\/< Flag for whether the symmetries are included.$/;"	m	struct:Nodes
has_symms	element/nodes.h	/^	const bool has_symms;           \/\/\/< See brief.$/;"	m	struct:const_Nodes
has_weights	element/nodes.h	/^	bool has_weights;   \/\/\/< Flag for whether weights are included.$/;"	m	struct:Nodes
has_weights	element/nodes.h	/^	const bool has_weights;              \/\/\/< See brief.$/;"	m	struct:const_Nodes
header_spec	simulation/test_case/compute_error/compute_error.h	/^	const char* header_spec; \/\/\/< The header for the file specific to the variables for which the error was computed.$/;"	m	struct:Error_CE
header_spec	simulation/test_case/compute_error/compute_error.h	/^	const char* header_spec; \/\/\/< The header for the file specific to the variables for which the error was computed.$/;"	m	struct:Error_CE_Helper
idx	simulation/solvers/solve_implicit.cpp	/^	PetscInt* idx[2]; \/\/\/< The indices to be stored in the index sets.$/;"	m	struct:Schur_Data	file:
ignore_internal_volume_error	simulation/test_case/compute_error/compute_error.cpp	/^static bool ignore_internal_volume_error ( )$/;"	f	file:
implicit_step	simulation/solvers/solve_implicit.cpp	/^static double implicit_step (const int i_step, const struct Simulation* sim)$/;"	f	file:
increment_adapt_type	simulation/solvers/adaptation/adaptation.cpp	/^static void increment_adapt_type (struct Adaptive_Solver_Volume*const a_s_vol, const char hp_type)$/;"	f	file:
increment_counter	containers/multiarray_print.cpp	/^void increment_counter (const int order, const ptrdiff_t*const extents, ptrdiff_t*const counter)$/;"	f
increment_counter_MaO	simulation/operators/multiarray_operator.cpp	/^void increment_counter_MaO (const int order, const ptrdiff_t*const extents, ptrdiff_t*const counter)$/;"	f
increment_face_errors_integrated	simulation/test_case/compute_error/compute_error.cpp	/^static void increment_face_errors_integrated$/;"	f	file:
increment_lhs_boundary_face	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static void increment_lhs_boundary_face$/;"	f	file:
increment_lhs_boundary_face	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	44;"	d
increment_lhs_boundary_face	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	86;"	d
increment_lhs_boundary_face	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	39;"	d
increment_lhs_boundary_face	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	40;"	d
increment_nnz	simulation/solvers/solve.cpp	/^void increment_nnz (struct Vector_i* nnz, const ptrdiff_t ind_dof, const ptrdiff_t n_row, const ptrdiff_t n_col)$/;"	f
increment_nnz_off_diag	simulation/solvers/dpg/def_templates_solve_dpg.h	26;"	d
increment_nnz_off_diag	simulation/solvers/dpg/def_templates_solve_dpg.h	39;"	d
increment_nnz_off_diag	simulation/solvers/dpg/solve_dpg_T.cpp	/^static void increment_nnz_off_diag (struct Vector_i* nnz, const struct Solver_Face_T* s_face)$/;"	f	file:
increment_nnz_off_diag	simulation/solvers/dpg/undef_templates_solve_dpg.h	21;"	d
increment_nnz_off_diag_constraint	simulation/solvers/dpg/def_templates_solve_dpg.h	27;"	d
increment_nnz_off_diag_constraint	simulation/solvers/dpg/def_templates_solve_dpg.h	40;"	d
increment_nnz_off_diag_constraint	simulation/solvers/dpg/solve_dpg_T.cpp	/^static void increment_nnz_off_diag_constraint (struct Vector_i*const nnz, const struct Solver_Volume_T*const s_vol)$/;"	f	file:
increment_nnz_off_diag_constraint	simulation/solvers/dpg/undef_templates_solve_dpg.h	22;"	d
increment_nnz_off_diag_f	simulation/solvers/dpg/def_templates_solve_dpg.h	29;"	d
increment_nnz_off_diag_f	simulation/solvers/dpg/def_templates_solve_dpg.h	42;"	d
increment_nnz_off_diag_f	simulation/solvers/dpg/solve_dpg_T.cpp	/^static void increment_nnz_off_diag_f$/;"	f	file:
increment_nnz_off_diag_f	simulation/solvers/dpg/undef_templates_solve_dpg.h	24;"	d
increment_nnz_off_diag_v	simulation/solvers/dpg/def_templates_solve_dpg.h	28;"	d
increment_nnz_off_diag_v	simulation/solvers/dpg/def_templates_solve_dpg.h	41;"	d
increment_nnz_off_diag_v	simulation/solvers/dpg/solve_dpg_T.cpp	/^static void increment_nnz_off_diag_v$/;"	f	file:
increment_nnz_off_diag_v	simulation/solvers/dpg/undef_templates_solve_dpg.h	23;"	d
increment_pointers_T	simulation/test_case/def_templates_test_case.h	28;"	d
increment_pointers_T	simulation/test_case/def_templates_test_case.h	52;"	d
increment_pointers_T	simulation/test_case/flux/def_templates_flux.h	143;"	d
increment_pointers_T	simulation/test_case/flux/def_templates_flux.h	41;"	d
increment_pointers_T	simulation/test_case/flux/undef_templates_flux.h	40;"	d
increment_pointers_T	simulation/test_case/test_case_T.cpp	/^void increment_pointers_T (const int n_ptr, const Type**const ptrs)$/;"	f
increment_pointers_T	simulation/test_case/undef_templates_test_case.h	27;"	d
increment_rhs_boundary_face	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static void increment_rhs_boundary_face$/;"	f	file:
increment_rhs_boundary_face	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	43;"	d
increment_rhs_boundary_face	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	85;"	d
increment_rhs_boundary_face	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	38;"	d
increment_rhs_boundary_face	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	39;"	d
increment_rhs_source	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static void increment_rhs_source$/;"	f	file:
increment_rhs_source	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	52;"	d
increment_rhs_source	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	94;"	d
increment_rhs_source	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	47;"	d
increment_rhs_source	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	47;"	d
increment_sol_L2	simulation/test_case/compute_error/compute_error.cpp	/^void increment_sol_L2 (struct Error_CE_Helper* e_ce_h, struct Error_CE_Data* e_ce_d)$/;"	f
increment_sol_face_L2	simulation/test_case/compute_error/compute_error.cpp	/^void increment_sol_face_L2 (struct Error_CE_Helper*const e_ce_h, struct Error_CE_Data*const e_ce_d)$/;"	f
increment_sol_integrated_face	simulation/test_case/compute_error/compute_error.cpp	/^void increment_sol_integrated_face (struct Error_CE_Helper*const e_ce_h, struct Error_CE_Data*const e_ce_d)$/;"	f
increment_vol_errors_l2_2	simulation/test_case/compute_error/compute_error.cpp	/^static void increment_vol_errors_l2_2$/;"	f	file:
ind_conservation	simulation/test_case/test_case_T.h	/^	const int ind_conservation;$/;"	m	struct:Test_Case_T
ind_dof	simulation/solvers/face_solver_T.h	/^	const ptrdiff_t ind_dof;$/;"	m	struct:Solver_Face_T
ind_dof	simulation/solvers/volume_solver_T.h	/^	const ptrdiff_t ind_dof;$/;"	m	struct:Solver_Volume_T
ind_dof_constraint	simulation/solvers/volume_solver_T.h	/^	const ptrdiff_t ind_dof_constraint;$/;"	m	struct:Solver_Volume_T
ind_dof_test	simulation/solvers/volume_solver_T.h	/^	const ptrdiff_t ind_dof_test;$/;"	m	struct:Solver_Volume_T
ind_f_ve	simulation/mesh/mesh_connectivity.h	/^	struct Vector_i*            ind_f_ve; \/\/\/< Indices of \\ref f_ve after sorting.$/;"	m	struct:Conn_info	typeref:struct:Conn_info::Vector_i
ind_g	simulation/mesh/mesh_readers.cpp	/^	ptrdiff_t ind_g; \/\/\/< Defined in \\ref Mesh_Data$/;"	m	struct:Element_Data	file:
ind_g	simulation/mesh/mesh_readers.h	/^	const ptrdiff_t ind_g; \/\/\/< The index of the first ghost volume in the list of elements.$/;"	m	struct:Mesh_Data
ind_h	simulation/solvers/adaptation/face_solver_adaptive.h	/^	int ind_h;      \/\/\/< The index of the h-refinement (if applicable).$/;"	m	struct:Adaptive_Solver_Face
ind_h	simulation/solvers/adaptation/volume_solver_adaptive.h	/^	int ind_h;      \/\/\/< The index of the h-refinement (if applicable).$/;"	m	struct:Adaptive_Solver_Volume
ind_href	simulation/computational_elements/face.h	/^		int ind_href;$/;"	m	struct:Face::Neigh_Info
ind_lf	simulation/computational_elements/face.cpp	/^		int ind_lf;            \/\/\/< \\ref Face::Neigh_Info::ind_lf.$/;"	m	struct:Face_mesh_info::Neigh_info_mi	file:
ind_lf	simulation/computational_elements/face.h	/^		int ind_lf;$/;"	m	struct:Face::Neigh_Info
ind_lf_1	simulation/solvers/adaptation/adaptation.cpp	/^	    ind_lf_1;         \/\/\/< \\ref Face::Neigh_Info::ind_lf for side 1.$/;"	m	struct:Info_I	file:
ind_lf_wp	simulation/computational_elements/face.cpp	/^		int ind_lf_wp;         \/\/\/< Corresponding entry of \\ref Mesh_Connectivity::v_to_lf_wp.$/;"	m	struct:Face_mesh_info::Neigh_info_mi	file:
ind_num_flux	simulation/test_case/test_case_T.h	/^	const int ind_num_flux[2];$/;"	m	struct:Test_Case_T
ind_ord	simulation/computational_elements/face.h	/^		int ind_ord;$/;"	m	struct:Face::Neigh_Info
ind_ord	simulation/solvers/adaptation/adaptation.cpp	/^	const int ind_ord[2]; \/\/\/< \\ref Face::Neigh_Info::ind_ord for side 0\/1.$/;"	m	struct:Info_I	file:
ind_sref	simulation/computational_elements/face.h	/^		int ind_sref;$/;"	m	struct:Face::Neigh_Info
ind_test_norm	simulation/test_case/test_case_T.h	/^	const int ind_test_norm; \/\/\/< Integer index of the test_norm. See \\ref definitions_dpg.h.$/;"	m	struct:Test_Case_T
ind_v	simulation/mesh/mesh_readers.h	/^	const ptrdiff_t ind_v; \/\/\/< The index of the first volume in the list of elements.$/;"	m	struct:Mesh_Data
ind_vh_1	simulation/solvers/adaptation/adaptation.cpp	/^	int ind_vh_1,         \/\/\/< Index of the h-refined child volume for side 1.$/;"	m	struct:Info_I	file:
index	containers/matrix.cpp	/^	int index;       \/\/\/< The index of the node.$/;"	m	struct:Node	file:
index	containers/multiarray_T.cpp	/^	ptrdiff_t index;         \/\/\/< The index.$/;"	m	struct:Vector_T_indexed	file:
index	simulation/computational_elements/face.h	/^	const int index; \/\/\/< The index of the face.$/;"	m	struct:Face
index	simulation/computational_elements/volume.h	/^	const int index; \/\/\/< The index of the volume.$/;"	m	struct:Volume
index	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^	int index;      \/\/\/< The index.$/;"	m	struct:Node_ANN
index	simulation/visualization/visualization.cpp	/^	int index, \/\/\/< \\ref Volume::index.$/;"	m	struct:Volume_Data_Vis	file:
indices	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^	const struct const_Vector_i* indices; \/\/\/< The indices of the sorted nodes in relation to the input nodes.$/;"	m	struct:Nodes_Sorted_ANN	typeref:struct:Nodes_Sorted_ANN::const_Vector_i
inds_sorted	simulation/test_case/solution/restart/restart_writers.cpp	/^	const struct const_Vector_i* inds_sorted; \/\/\/< The indices of the sorted coordinates.$/;"	m	struct:Nodes_Info	typeref:struct:Nodes_Info::const_Vector_i	file:
inds_unique	simulation/test_case/solution/restart/restart_writers.cpp	/^	const struct const_Vector_i* inds_unique; \/\/\/< The indices of the unique coordinates.$/;"	m	struct:Nodes_Info	typeref:struct:Nodes_Info::const_Vector_i	file:
initialize_Adaptive_Solver_Face	simulation/solvers/adaptation/face_solver_adaptive.cpp	/^void initialize_Adaptive_Solver_Face (struct Adaptive_Solver_Face*const a_s_face)$/;"	f
initialize_Adaptive_Solver_Volume	simulation/solvers/adaptation/volume_solver_adaptive.cpp	/^void initialize_Adaptive_Solver_Volume (struct Adaptive_Solver_Volume*const a_s_vol)$/;"	f
initialize_ann_background	simulation/test_case/solution/restart/def_templates_restart.h	38;"	d
initialize_ann_background	simulation/test_case/solution/restart/def_templates_restart.h	65;"	d
initialize_ann_background	simulation/test_case/solution/restart/restart_T.cpp	/^static void initialize_ann_background (struct Restart_Info*const ri)$/;"	f	file:
initialize_ann_background	simulation/test_case/solution/restart/undef_templates_restart.h	35;"	d
initialize_volumes_restart	simulation/test_case/solution/restart/def_templates_restart.h	37;"	d
initialize_volumes_restart	simulation/test_case/solution/restart/def_templates_restart.h	64;"	d
initialize_volumes_restart	simulation/test_case/solution/restart/restart_T.cpp	/^static void initialize_volumes_restart (const struct Simulation*const sim)$/;"	f	file:
initialize_volumes_restart	simulation/test_case/solution/restart/undef_templates_restart.h	34;"	d
initialize_volumes_sol_coef	simulation/test_case/solution/restart/def_templates_restart.h	40;"	d
initialize_volumes_sol_coef	simulation/test_case/solution/restart/def_templates_restart.h	67;"	d
initialize_volumes_sol_coef	simulation/test_case/solution/restart/restart_T.cpp	/^static void initialize_volumes_sol_coef (FILE* file, const struct Simulation*const sim)$/;"	f	file:
initialize_volumes_sol_coef	simulation/test_case/solution/restart/undef_templates_restart.h	37;"	d
initialize_zero_memory_volumes_T	simulation/solvers/def_templates_solve.h	26;"	d
initialize_zero_memory_volumes_T	simulation/solvers/def_templates_solve.h	47;"	d
initialize_zero_memory_volumes_T	simulation/solvers/solve_T.cpp	/^void initialize_zero_memory_volumes_T (struct Intrusive_List* volumes)$/;"	f
initialize_zero_memory_volumes_T	simulation/solvers/undef_templates_solve.h	23;"	d
insert_List_into_List	intrusive/intrusive.cpp	/^void insert_List_into_List$/;"	f
insert_new_faces	simulation/solvers/adaptation/adaptation.cpp	/^static void insert_new_faces$/;"	f	file:
internal_face_has_boundary_edge	simulation/solvers/adaptation/adaptation.cpp	/^static bool internal_face_has_boundary_edge (const int ind_vh, const int ind_lf, const struct Volume*const vol_p)$/;"	f	file:
internal_face_is_curved	simulation/solvers/adaptation/adaptation.cpp	/^static bool internal_face_is_curved$/;"	f	file:
interpret_Multiarray_as_Matrix_R	containers/def_templates_multiarray.h	141;"	d
interpret_Multiarray_as_Matrix_R	containers/undef_templates_multiarray.h	83;"	d
interpret_Multiarray_as_Matrix_T	containers/def_templates_multiarray.h	114;"	d
interpret_Multiarray_as_Matrix_T	containers/def_templates_multiarray.h	189;"	d
interpret_Multiarray_as_Matrix_T	containers/def_templates_multiarray.h	63;"	d
interpret_Multiarray_as_Matrix_T	containers/multiarray_T.cpp	/^struct Matrix_T interpret_Multiarray_as_Matrix_T (const struct Multiarray_T* a_Ma)$/;"	f
interpret_Multiarray_as_Matrix_T	containers/undef_templates_multiarray.h	59;"	d
interpret_Multiarray_as_Vector_T	containers/def_templates_multiarray.h	112;"	d
interpret_Multiarray_as_Vector_T	containers/def_templates_multiarray.h	61;"	d
interpret_Multiarray_as_Vector_T	containers/multiarray_T.cpp	/^struct Vector_T interpret_Multiarray_as_Vector_T (struct Multiarray_T*const a_Ma)$/;"	f
interpret_Multiarray_as_Vector_T	containers/undef_templates_multiarray.h	57;"	d
interpret_Multiarray_as_slice_T	containers/def_templates_multiarray.h	116;"	d
interpret_Multiarray_as_slice_T	containers/def_templates_multiarray.h	65;"	d
interpret_Multiarray_as_slice_T	containers/multiarray_T.cpp	/^struct Multiarray_T interpret_Multiarray_as_slice_T$/;"	f
interpret_Multiarray_as_slice_T	containers/undef_templates_multiarray.h	61;"	d
interpret_Multiarray_slice_as_Vector_T	containers/def_templates_multiarray.h	118;"	d
interpret_Multiarray_slice_as_Vector_T	containers/def_templates_multiarray.h	67;"	d
interpret_Multiarray_slice_as_Vector_T	containers/multiarray_T.cpp	/^struct Vector_T interpret_Multiarray_slice_as_Vector_T$/;"	f
interpret_Multiarray_slice_as_Vector_T	containers/undef_templates_multiarray.h	63;"	d
interpret_const_Multiarray_as_Matrix_R	containers/def_templates_multiarray.h	142;"	d
interpret_const_Multiarray_as_Matrix_R	containers/undef_templates_multiarray.h	84;"	d
interpret_const_Multiarray_as_Matrix_T	containers/def_templates_multiarray.h	115;"	d
interpret_const_Multiarray_as_Matrix_T	containers/def_templates_multiarray.h	64;"	d
interpret_const_Multiarray_as_Matrix_T	containers/multiarray_T.cpp	/^struct const_Matrix_T interpret_const_Multiarray_as_Matrix_T (const struct const_Multiarray_T* a_Ma)$/;"	f
interpret_const_Multiarray_as_Matrix_T	containers/undef_templates_multiarray.h	60;"	d
interpret_const_Multiarray_as_Vector_R	containers/def_templates_multiarray.h	140;"	d
interpret_const_Multiarray_as_Vector_R	containers/def_templates_multiarray.h	188;"	d
interpret_const_Multiarray_as_Vector_R	containers/undef_templates_multiarray.h	82;"	d
interpret_const_Multiarray_as_Vector_T	containers/def_templates_multiarray.h	113;"	d
interpret_const_Multiarray_as_Vector_T	containers/def_templates_multiarray.h	187;"	d
interpret_const_Multiarray_as_Vector_T	containers/def_templates_multiarray.h	62;"	d
interpret_const_Multiarray_as_Vector_T	containers/multiarray_T.cpp	/^struct const_Vector_T interpret_const_Multiarray_as_Vector_T (const struct const_Multiarray_T* a_Ma)$/;"	f
interpret_const_Multiarray_as_Vector_T	containers/undef_templates_multiarray.h	58;"	d
interpret_const_Multiarray_as_slice_T	containers/def_templates_multiarray.h	117;"	d
interpret_const_Multiarray_as_slice_T	containers/def_templates_multiarray.h	66;"	d
interpret_const_Multiarray_as_slice_T	containers/multiarray_T.cpp	/^struct const_Multiarray_T interpret_const_Multiarray_as_slice_T$/;"	f
interpret_const_Multiarray_as_slice_T	containers/undef_templates_multiarray.h	62;"	d
invert_Vector_R	containers/def_templates_vector_math.h	51;"	d
invert_Vector_R	containers/undef_templates_vector_math.h	29;"	d
invert_Vector_T	containers/def_templates_vector_math.h	23;"	d
invert_Vector_T	containers/def_templates_vector_math.h	37;"	d
invert_Vector_T	containers/undef_templates_vector_math.h	19;"	d
invert_Vector_T	containers/vector_math_T.cpp	/^void invert_Vector_T (struct Vector_T* a)$/;"	f
invert_sub_block_Matrix_T	containers/def_templates_matrix_math.h	33;"	d
invert_sub_block_Matrix_T	containers/def_templates_matrix_math.h	66;"	d
invert_sub_block_Matrix_T	containers/matrix_math_T.cpp	/^void invert_sub_block_Matrix_T (struct Matrix_T* a, const ptrdiff_t row0, const ptrdiff_t col0, const ptrdiff_t ext)$/;"	f
invert_sub_block_Matrix_T	containers/undef_templates_matrix_math.h	28;"	d
is	simulation/solvers/solve_implicit.cpp	/^	IS is[2];$/;"	m	struct:Schur_Data	file:
is_adaptive	simulation/simulation.cpp	/^static bool is_adaptive (const int var[2])$/;"	f	file:
is_child_curved	simulation/solvers/adaptation/adaptation.cpp	/^static bool is_child_curved (const struct Volume*const vol, const struct Simulation*const sim)$/;"	f	file:
is_child_on_boundary	simulation/solvers/adaptation/adaptation.cpp	/^static bool is_child_on_boundary (const struct Volume*const vol)$/;"	f	file:
is_face_bc_curved	simulation/computational_elements/face.cpp	/^bool is_face_bc_curved (const int bc)$/;"	f
is_face_h_adapted	simulation/solvers/adaptation/adaptation.cpp	/^static bool is_face_h_adapted (const struct Adaptive_Solver_Face*const a_s_face)$/;"	f	file:
is_face_neighbour	testing/support/simulation/solvers/test_support_solve.cpp	/^bool is_face_neighbour (const struct Face*const face, const struct Volume*const vol_curr)$/;"	f
is_face_wall_boundary	simulation/computational_elements/face.cpp	/^bool is_face_wall_boundary (const struct Face*const face)$/;"	f
is_internal_geom_straight	simulation/geometry/geometry.cpp	/^bool is_internal_geom_straight ( )$/;"	f
is_linear	simulation/test_case/test_case_T.h	/^	const bool is_linear; \/\/\/< Flag for whether the pde under consideration is linear.$/;"	m	struct:Test_Case_T
is_real	simulation/test_case/test_case.h	/^	const bool is_real; \/\/\/< Flag for whether \\ref Test_Case_rc::tc is real (as opposed to complex).$/;"	m	struct:Test_Case_rc
is_volume_neighbour	testing/support/simulation/solvers/test_support_solve.cpp	/^static bool is_volume_neighbour (const struct Volume* vol, const struct Volume* vol_curr)$/;"	f	file:
jac	simulation/test_case/solution/restart/inverse_mapping.cpp	/^	double jac[DIM*DIM]; \/\/\/< The residual jacobian terms.$/;"	m	struct:Newton	file:
jac_djacobi_normalized	general/math_functions.cpp	/^double jac_djacobi_normalized (const double x, const int n, const double a, const double b)$/;"	f
jac_jacobi_normalized	general/math_functions.cpp	/^double jac_jacobi_normalized (const double x, const int n, const double a, const double b)$/;"	f
jacobian_det_fc	simulation/solvers/face_solver_T.h	/^	const struct const_Multiarray_T* jacobian_det_fc;$/;"	m	struct:Solver_Face_T	typeref:struct:Solver_Face_T::const_Multiarray_T
jacobian_det_fc	simulation/test_case/boundary/boundary_T.h	/^	const struct const_Multiarray_T* jacobian_det_fc;$/;"	m	struct:Boundary_Value_Input_T	typeref:struct:Boundary_Value_Input_T::const_Multiarray_T
jacobian_det_p1	simulation/solvers/face_solver_T.h	/^	const struct const_Multiarray_T* jacobian_det_p1;$/;"	m	struct:Solver_Face_T	typeref:struct:Solver_Face_T::const_Multiarray_T
jacobian_det_vc	simulation/solvers/volume_solver_T.h	/^	const struct const_Multiarray_T* jacobian_det_vc;$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::const_Multiarray_T
jacobian_det_vs	simulation/solvers/volume_solver_T.h	/^	const struct const_Multiarray_T* jacobian_det_vs;$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::const_Multiarray_T
kappa	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^	Real kappa; \/\/\/< The coefficient of thermal conductivity.$/;"	m	struct:Sol_Data__tc	file:
kind	element/element_operators.h	/^	           kind, \/\/\/< The kind of basis\/nodes.$/;"	m	struct:Op_IO
l	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^	struct Node_ANN l; \/\/\/< Lower bounding node.$/;"	m	struct:SSS_c	typeref:struct:SSS_c::Node_ANN	file:
l2_err	testing/integration/test_integration_convergence_support.cpp	/^	                               * l2_err,      \/\/\/< The multiarray of L2 errors.$/;"	m	struct:Conv_Order_Data	typeref:struct:Conv_Order_Data::	file:
l_mult	simulation/solvers/volume_solver_T.h	/^	struct Multiarray_T* l_mult; \/\/\/< The values of the Lagrange multipliers used to enforce conservation.$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::Multiarray_T
last	intrusive/intrusive.h	/^	const struct const_Intrusive_Link*const last;  \/\/\/< Defined in \\ref Intrusive_List.$/;"	m	struct:const_Intrusive_List
last	intrusive/intrusive.h	/^	struct Intrusive_Link* last;  \/\/\/< Pointer to the last \\ref Intrusive_Link\\* in the list.$/;"	m	struct:Intrusive_List	typeref:struct:Intrusive_List::Intrusive_Link
layout	containers/matrix_T.h	/^	char layout; \/\/\/< Memory layout. Options: 'R'ow\/'C'olumn-major.$/;"	m	struct:Matrix_T
layout	containers/matrix_T.h	/^	const char layout;$/;"	m	struct:const_Matrix_T
layout	containers/multiarray_T.h	/^	char layout; \/\/\/< The layout may be 'R'ow or 'C'olumn major.$/;"	m	struct:Multiarray_T
layout	containers/multiarray_T.h	/^	const char layout;$/;"	m	struct:const_Multiarray_T
less_msb	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^inline static bool less_msb (Index x, Index y)$/;"	f	file:
lhs_terms	simulation/test_case/test_case_T.h	/^	const int lhs_terms;$/;"	m	struct:Test_Case_T
line_3	testing/unit/test_unit_nodes.cpp	/^	                                      * line_3,  \/\/\/< Vectors of correspondence indices for a 3- node line  face.$/;"	m	struct:Nodes_FC_Data	typeref:struct:Nodes_FC_Data::	file:
line_4	testing/unit/test_unit_nodes.cpp	/^	                                      * line_4,  \/\/\/< Vectors of correspondence indices for a 4- node line  face.$/;"	m	struct:Nodes_FC_Data	typeref:struct:Nodes_FC_Data::	file:
list_is_derived_from	simulation/computational_elements/computational_elements.cpp	/^bool list_is_derived_from (const char*const name_desired, const char list_type, const struct Simulation*const sim)$/;"	f
list_name	simulation/computational_elements/computational_elements_T.cpp	/^	int list_name[2]; \/\/\/< Names of the volume and face computational element lists.$/;"	m	struct:Derived_Comp_Elements_Info	file:
list_name	testing/support/intrusive/test_support_intrusive.cpp	/^	int list_name; \/\/\/< \\ref Intrusive_List::name.$/;"	m	struct:IL_Info	file:
lnk	element/element.h	/^	const struct const_Intrusive_Link lnk; \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element	typeref:struct:const_Element::const_Intrusive_Link
lnk	element/element.h	/^	struct Intrusive_Link lnk; \/\/\/< The \\ref Intrusive_Link.$/;"	m	struct:Element	typeref:struct:Element::Intrusive_Link
lnk	simulation/computational_elements/face.h	/^	struct Intrusive_Link lnk; \/\/\/< \\ref Intrusive_Link.$/;"	m	struct:Face	typeref:struct:Face::Intrusive_Link
lnk	simulation/computational_elements/volume.h	/^	struct Intrusive_Link lnk; \/\/\/< The \\ref Intrusive_Link.$/;"	m	struct:Volume	typeref:struct:Volume::Intrusive_Link
log_T	general/def_templates_math_functions.h	27;"	d
log_T	general/def_templates_math_functions.h	59;"	d
log_T	general/undef_templates_math_functions.h	23;"	d
m	simulation/solvers/dg/volume_solver_dg_T.cpp	/^	     m;          \/\/\/< Flag for \\ref DG_Solver_Volume_T::m.$/;"	m	struct:Needed_Members	file:
m	simulation/solvers/dg/volume_solver_dg_T.h	/^	const struct const_Matrix_T* m;     \/\/\/< The mass matrix.$/;"	m	struct:DG_Solver_Volume_T	typeref:struct:DG_Solver_Volume_T::const_Matrix_T
m	simulation/solvers/opg/volume_solver_opg_T.h	/^	const struct const_Matrix_T* m; \/\/\/< The mass matrix.$/;"	m	struct:OPG_Solver_Volume_T	typeref:struct:OPG_Solver_Volume_T::const_Matrix_T
m_14	testing/unit/test_unit_bases.cpp	/^	const struct const_Matrix_d* m_14, \/\/\/< The 1d basis mass matrix of order 4.$/;"	m	struct:Basis_Data_TP_Ortho	typeref:struct:Basis_Data_TP_Ortho::const_Matrix_d	file:
m_24	testing/unit/test_unit_bases.cpp	/^	                           * m_24, \/\/\/< The 2d basis mass matrix of order 4.$/;"	m	struct:Basis_Data_TP_Ortho	typeref:struct:Basis_Data_TP_Ortho::	file:
m_24	testing/unit/test_unit_bases.cpp	/^	const struct const_Matrix_d* m_24, \/\/\/< The 2d basis mass matrix of order 4.$/;"	m	struct:Basis_Data_SI_Ortho	typeref:struct:Basis_Data_SI_Ortho::const_Matrix_d	file:
m_34	testing/unit/test_unit_bases.cpp	/^	                           * m_34; \/\/\/< The 3d basis mass matrix of order 4.$/;"	m	struct:Basis_Data_SI_Ortho	typeref:struct:Basis_Data_SI_Ortho::	file:
m_34	testing/unit/test_unit_bases.cpp	/^	                           * m_34; \/\/\/< The 3d basis mass matrix of order 4.$/;"	m	struct:Basis_Data_TP_Ortho	typeref:struct:Basis_Data_TP_Ortho::	file:
m_34	testing/unit/test_unit_bases.cpp	/^	const struct const_Matrix_d* m_34; \/\/\/< The 3d basis mass matrix of order 4.$/;"	m	struct:Basis_Data_PYR_Ortho	typeref:struct:Basis_Data_PYR_Ortho::const_Matrix_d	file:
m_Neigh_Info_NF_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	27;"	d
m_Neigh_Info_NF_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	91;"	d
m_Neigh_Info_NF_T	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	struct m_Neigh_Info_NF_T {$/;"	s	struct:mutable_Numerical_Flux_T
m_Neigh_Info_NF_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	25;"	d
m_i	simulation/test_case/solution/euler/supersonic_vortex/solution_supersonic_vortex_T.cpp	/^	       m_i,   \/\/\/< The 'm'ach number at the 'i'nternal cylinder face.$/;"	m	struct:Sol_Data__sv	file:
m_inv	simulation/solvers/dg/volume_solver_dg_T.cpp	/^	     m_inv,      \/\/\/< Flag for \\ref DG_Solver_Volume_T::m_inv.$/;"	m	struct:Needed_Members	file:
m_inv	simulation/solvers/dg/volume_solver_dg_T.h	/^	const struct const_Matrix_T* m_inv; \/\/\/< The inverse mass matrix.$/;"	m	struct:DG_Solver_Volume_T	typeref:struct:DG_Solver_Volume_T::const_Matrix_T
m_inv	simulation/solvers/opg/face_solver_opg_T.h	/^	const struct const_Matrix_T* m_inv; \/\/\/< The inverse mass matrix.$/;"	m	struct:OPG_Solver_Face_T	typeref:struct:OPG_Solver_Face_T::const_Matrix_T
m_inv	simulation/solvers/opg/volume_solver_opg_T.h	/^	const struct const_Matrix_T* m_inv; \/\/\/< The inverse mass matrix.$/;"	m	struct:OPG_Solver_Volume_T	typeref:struct:OPG_Solver_Volume_T::const_Matrix_T
mach	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^	     mach,  \/\/\/< The free stream 'mach' number.$/;"	m	struct:Sol_Data__fs	file:
mach	simulation/test_case/solution/euler/solution_euler.cpp	/^	       mach,     \/\/\/< The free stream 'mach' number.$/;"	m	struct:Sol_Data__c_dl	file:
main	testing/integration/test_integration_boundary_conditions.cpp	/^int main$/;"	f
main	testing/integration/test_integration_conservation.cpp	/^int main$/;"	f
main	testing/integration/test_integration_convergence.cpp	/^int main$/;"	f
main	testing/integration/test_integration_fe_init.cpp	/^int main$/;"	f
main	testing/integration/test_integration_fe_init_refined.cpp	/^int main$/;"	f
main	testing/integration/test_integration_fluxes.cpp	/^int main$/;"	f
main	testing/integration/test_integration_free_stream.cpp	/^int main$/;"	f
main	testing/integration/test_integration_geometry.cpp	/^int main$/;"	f
main	testing/integration/test_integration_inf_sup.cpp	/^int main$/;"	f
main	testing/integration/test_integration_linearization.cpp	/^int main$/;"	f
main	testing/integration/test_integration_mesh.cpp	/^int main$/;"	f
main	testing/integration/test_integration_mpi.cpp	/^int main$/;"	f
main	testing/integration/test_integration_non_conforming.cpp	/^int main$/;"	f
main	testing/integration/test_integration_numerical_fluxes.cpp	/^int main$/;"	f
main	testing/integration/test_integration_restart.cpp	/^int main$/;"	f
main	testing/integration/test_integration_restart_output.cpp	/^int main$/;"	f
main	testing/unit/test_unit_approximate_nearest_neighbor.cpp	/^int main$/;"	f
main	testing/unit/test_unit_bases.cpp	/^int main$/;"	f
main	testing/unit/test_unit_containers.cpp	/^int main$/;"	f
main	testing/unit/test_unit_inverse_mapping.cpp	/^int main$/;"	f
main	testing/unit/test_unit_nodes.cpp	/^int main$/;"	f
main	testing/unit/test_unit_operators_tp.cpp	/^int main$/;"	f
make_unique_row_Multiarray_T	containers/def_templates_multiarray.h	122;"	d
make_unique_row_Multiarray_T	containers/def_templates_multiarray.h	71;"	d
make_unique_row_Multiarray_T	containers/multiarray_T.cpp	/^const struct const_Vector_i* make_unique_row_Multiarray_T$/;"	f
make_unique_row_Multiarray_T	containers/undef_templates_multiarray.h	68;"	d
mark_volumes_to_adapt	simulation/solvers/adaptation/adaptation.cpp	/^static bool mark_volumes_to_adapt$/;"	f	file:
matches_L_to_R	simulation/computational_elements/face.cpp	/^	               * matches_L_to_R; \/\/\/< Matching indices for the vertices of the 'L'eft as seen from the 'R'ight.$/;"	m	struct:Vertex_Correspondence	typeref:struct:Vertex_Correspondence::	file:
matches_R_to_L	simulation/computational_elements/face.cpp	/^	struct Vector_i* matches_R_to_L, \/\/\/< Matching indices for the vertices of the 'R'ight as seen from the 'L'eft.$/;"	m	struct:Vertex_Correspondence	typeref:struct:Vertex_Correspondence::Vector_i	file:
max_abs_R	general/def_templates_math_functions.h	96;"	d
max_abs_R	general/undef_templates_math_functions.h	54;"	d
max_abs_T	general/def_templates_math_functions.h	38;"	d
max_abs_T	general/def_templates_math_functions.h	70;"	d
max_abs_T	general/math_functions_T.cpp	/^Type max_abs_T (const Type a, const Type b)$/;"	f
max_abs_T	general/undef_templates_math_functions.h	32;"	d
max_abs_real_T	general/def_templates_math_functions.h	49;"	d
max_abs_real_T	general/def_templates_math_functions.h	81;"	d
max_abs_real_T	general/math_functions_T.cpp	/^Type max_abs_real_T (const Type a, const Type b)$/;"	f
max_abs_real_T	general/undef_templates_math_functions.h	43;"	d
maximum_RT	general/def_templates_math_functions.h	44;"	d
maximum_RT	general/def_templates_math_functions.h	76;"	d
maximum_RT	general/math_functions_T.cpp	/^Real maximum_RT (const Type*const data, const ptrdiff_t n_entries)$/;"	f
maximum_RT	general/undef_templates_math_functions.h	38;"	d
maximum_abs_T	general/def_templates_math_functions.h	43;"	d
maximum_abs_T	general/def_templates_math_functions.h	75;"	d
maximum_abs_T	general/math_functions_T.cpp	/^Type maximum_abs_T (const Type*const data, const ptrdiff_t n_entries)$/;"	f
maximum_abs_T	general/undef_templates_math_functions.h	37;"	d
mesh_conn	simulation/mesh/mesh.h	/^	const struct Mesh_Connectivity*const mesh_conn; \/\/\/< \\ref Mesh_Connectivity.$/;"	m	struct:Mesh
mesh_data	simulation/mesh/mesh.h	/^	const struct Mesh_Data*const         mesh_data; \/\/\/< \\ref Mesh_Data.$/;"	m	struct:Mesh
mesh_domain	simulation/simulation.cpp	/^	     mesh_domain[STRLEN_MIN],    \/\/\/< Type of the mesh. Options: straight, blended, parametric.$/;"	m	struct:Mesh_Ctrl_Data	file:
mesh_elem_type	simulation/simulation.cpp	/^	     mesh_elem_type[STRLEN_MIN], \/\/\/< Type of elements present in the mesh; used to set the mesh file name.$/;"	m	struct:Mesh_Ctrl_Data	file:
mesh_extension	simulation/simulation.cpp	/^	     mesh_extension[STRLEN_MIN]; \/\/\/< File extension (set based on \\ref mesh_format.$/;"	m	struct:Mesh_Ctrl_Data	file:
mesh_format	simulation/simulation.cpp	/^	     mesh_format[STRLEN_MAX],    \/\/\/< Format of the input mesh. Options: gmsh.$/;"	m	struct:Mesh_Ctrl_Data	file:
mesh_generator	simulation/simulation.cpp	/^	char mesh_generator[STRLEN_MAX], \/\/\/< The name of the file used to generate the mesh.$/;"	m	struct:Mesh_Ctrl_Data	file:
mesh_name_assemble	simulation/simulation.cpp	/^static void mesh_name_assemble (struct Simulation*const sim, const struct Mesh_Ctrl_Data*const mesh_ctrl_data)$/;"	f	file:
mesh_name_full	simulation/mesh/mesh.h	/^	const char* mesh_name_full; \/\/\/< Name of the mesh file (including the full path and file extension).$/;"	m	struct:Mesh_Input
mesh_name_full	simulation/simulation.h	/^	const char mesh_name_full[STRLEN_MAX]; \/\/\/< Name of the mesh    file (including full path and file extension).$/;"	m	struct:Simulation
mesh_path	simulation/simulation.cpp	/^	     mesh_path[STRLEN_MAX],      \/\/\/< Relative path to the meshes directory.$/;"	m	struct:Mesh_Ctrl_Data	file:
mesh_reader_gmsh	simulation/mesh/mesh_readers.cpp	/^static void mesh_reader_gmsh (const char*const mesh_name_full, const int d, struct Mesh_Data_l*const mesh_data_l)$/;"	f	file:
mesh_reader_gmsh4	simulation/mesh/mesh_readers.cpp	/^static void mesh_reader_gmsh4 (const char*const mesh_name_full, const int d, struct Mesh_Data_l*const mesh_data_l)$/;"	f	file:
mesh_reader_gmsh_parallel	simulation/mesh/mesh_readers.cpp	/^static void mesh_reader_gmsh_parallel (const char*const mesh_name_full, const int d, struct Mesh_Data_l*const mesh_data_l)$/;"	f	file:
mesh_snap_to_boundary_fptr	simulation/mesh/mesh_vertices.cpp	/^typedef void (*mesh_snap_to_boundary_fptr)$/;"	t	file:
mesh_snap_to_cylinder__hollow_section	simulation/mesh/mesh_geometry_cylinder_hollow_section.cpp	/^void mesh_snap_to_cylinder__hollow_section$/;"	f
mesh_unrealistic	simulation/mesh/mesh.h	/^	const bool mesh_unrealistic;$/;"	m	struct:Mesh_Input
mesh_unrealistic	simulation/simulation.h	/^	const bool mesh_unrealistic;$/;"	m	struct:Simulation
mesh_vert	simulation/mesh/mesh.h	/^	const struct Mesh_Vertices*const     mesh_vert; \/\/\/< \\ref Mesh_Vertices.$/;"	m	struct:Mesh
method	simulation/simulation.h	/^	const int method;$/;"	m	struct:Simulation
method	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	const int method; \/\/\/< \\ref Simulation::method.$/;"	m	struct:Numerical_Flux_Input_T
metrics_fc	simulation/solvers/face_solver_T.h	/^	const struct const_Multiarray_T* metrics_fc;$/;"	m	struct:Solver_Face_T	typeref:struct:Solver_Face_T::const_Multiarray_T
metrics_vc	simulation/solvers/volume_solver_T.h	/^	const struct const_Multiarray_T* metrics_vc;$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::const_Multiarray_T
metrics_vm	simulation/solvers/volume_solver_T.h	/^	const struct const_Multiarray_T* metrics_vm;$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::const_Multiarray_T
metrics_vm_p1	simulation/solvers/volume_solver_T.h	/^	const struct const_Multiarray_T* metrics_vm_p1;$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::const_Multiarray_T
metrics_vs	simulation/solvers/volume_solver_T.h	/^	const struct const_Multiarray_T* metrics_vs;$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::const_Multiarray_T
min_abs_real_T	general/def_templates_math_functions.h	48;"	d
min_abs_real_T	general/def_templates_math_functions.h	80;"	d
min_abs_real_T	general/math_functions_T.cpp	/^Type min_abs_real_T (const Type a, const Type b)$/;"	f
min_abs_real_T	general/undef_templates_math_functions.h	42;"	d
minimum_T	general/def_templates_math_functions.h	42;"	d
minimum_T	general/def_templates_math_functions.h	74;"	d
minimum_T	general/math_functions_T.cpp	/^Type minimum_T (const Type*const data, const ptrdiff_t n_entries)$/;"	f
minimum_T	general/undef_templates_math_functions.h	36;"	d
mkdir_p	general/file_processing.cpp	/^static int mkdir_p (const char *path)$/;"	f	file:
mkdir_p_given_file_name	general/file_processing.cpp	/^void mkdir_p_given_file_name (const char*const file_name)$/;"	f
mkl_Timatcopy	containers/def_templates_matrix_math.h	25;"	d
mkl_Timatcopy	containers/def_templates_matrix_math.h	58;"	d
mkl_Timatcopy	containers/undef_templates_matrix_math.h	22;"	d
ml	simulation/simulation.h	/^	const int ml[2];$/;"	m	struct:Simulation
ml	simulation/solvers/face_solver_T.h	/^	const int ml; \/\/\/< The mesh level of the face.$/;"	m	struct:Solver_Face_T
ml	simulation/solvers/volume_solver_T.h	/^	const int ml; \/\/\/< The mesh level of the volume.$/;"	m	struct:Solver_Volume_T
ml	simulation/visualization/visualization.cpp	/^	    ml;    \/\/\/< \\ref Solver_Volume_T::ml.$/;"	m	struct:Volume_Data_Vis	file:
ml	testing/integration/test_integration.h	/^	const int ml[2]; \/\/\/< The minimal and maximal mesh levels to be used for convergence order testing.$/;"	m	struct:Integration_Test_Info
ml_p_curr	simulation/simulation.h	/^	const int ml_p_curr[2]; \/\/\/< The current reference 'm'esh 'l'evel and 'p'olynomial order of the simulation.$/;"	m	struct:Simulation
mm_NN1C_Multiarray_T	containers/def_templates_multiarray_math.h	39;"	d
mm_NN1C_Multiarray_T	containers/def_templates_multiarray_math.h	66;"	d
mm_NN1C_Multiarray_T	containers/multiarray_math_T.cpp	/^void mm_NN1C_Multiarray_T$/;"	f
mm_NN1C_Multiarray_T	containers/undef_templates_multiarray_math.h	35;"	d
mm_NN1C_Operator_Multiarray_R	simulation/operators/def_templates_operators.h	56;"	d
mm_NN1C_Operator_Multiarray_R	simulation/operators/undef_templates_operators.h	34;"	d
mm_NN1C_Operator_Multiarray_T	simulation/operators/def_templates_operators.h	30;"	d
mm_NN1C_Operator_Multiarray_T	simulation/operators/def_templates_operators.h	45;"	d
mm_NN1C_Operator_Multiarray_T	simulation/operators/operator_T.cpp	/^void mm_NN1C_Operator_Multiarray_T$/;"	f
mm_NN1C_Operator_Multiarray_T	simulation/operators/undef_templates_operators.h	27;"	d
mm_NN1C_overwrite_Multiarray_T	containers/def_templates_multiarray_math.h	40;"	d
mm_NN1C_overwrite_Multiarray_T	containers/def_templates_multiarray_math.h	67;"	d
mm_NN1C_overwrite_Multiarray_T	containers/multiarray_math_T.cpp	/^void mm_NN1C_overwrite_Multiarray_T (const struct const_Matrix_R*const a, struct Multiarray_T** b)$/;"	f
mm_NN1C_overwrite_Multiarray_T	containers/undef_templates_multiarray_math.h	36;"	d
mm_NN1_Operator_Multiarray_T	simulation/operators/def_templates_operators.h	31;"	d
mm_NN1_Operator_Multiarray_T	simulation/operators/def_templates_operators.h	46;"	d
mm_NN1_Operator_Multiarray_T	simulation/operators/operator_T.cpp	/^void mm_NN1_Operator_Multiarray_T$/;"	f
mm_NN1_Operator_Multiarray_T	simulation/operators/undef_templates_operators.h	28;"	d
mm_NNC_Multiarray_T	containers/def_templates_multiarray_math.h	37;"	d
mm_NNC_Multiarray_T	containers/def_templates_multiarray_math.h	64;"	d
mm_NNC_Multiarray_T	containers/multiarray_math_T.cpp	/^void mm_NNC_Multiarray_T$/;"	f
mm_NNC_Multiarray_T	containers/undef_templates_multiarray_math.h	33;"	d
mm_NNC_Multiarray_TTT	containers/def_templates_multiarray_math.h	38;"	d
mm_NNC_Multiarray_TTT	containers/def_templates_multiarray_math.h	65;"	d
mm_NNC_Multiarray_TTT	containers/multiarray_math_T.cpp	/^void mm_NNC_Multiarray_TTT$/;"	f
mm_NNC_Multiarray_TTT	containers/undef_templates_multiarray_math.h	34;"	d
mm_NNC_Operator_Multiarray_T	simulation/operators/def_templates_operators.h	29;"	d
mm_NNC_Operator_Multiarray_T	simulation/operators/def_templates_operators.h	44;"	d
mm_NNC_Operator_Multiarray_T	simulation/operators/operator_T.cpp	/^void mm_NNC_Operator_Multiarray_T$/;"	f
mm_NNC_Operator_Multiarray_T	simulation/operators/undef_templates_operators.h	26;"	d
mm_R	containers/def_templates_matrix_math.h	94;"	d
mm_R	containers/undef_templates_matrix_math.h	52;"	d
mm_RTT	containers/def_templates_matrix_math.h	40;"	d
mm_RTT	containers/def_templates_matrix_math.h	73;"	d
mm_RTT	containers/matrix_math_T.cpp	/^void mm_RTT$/;"	f
mm_RTT	containers/undef_templates_matrix_math.h	35;"	d
mm_T	containers/def_templates_matrix_math.h	39;"	d
mm_T	containers/def_templates_matrix_math.h	72;"	d
mm_T	containers/matrix_math_T.cpp	/^void mm_T$/;"	f
mm_T	containers/undef_templates_matrix_math.h	34;"	d
mm_TRT	containers/def_templates_matrix_math.h	41;"	d
mm_TRT	containers/def_templates_matrix_math.h	74;"	d
mm_TRT	containers/matrix_math_T.cpp	/^void mm_TRT$/;"	f
mm_TRT	containers/undef_templates_matrix_math.h	36;"	d
mm_diag_R	containers/def_templates_matrix_math.h	95;"	d
mm_diag_R	containers/undef_templates_matrix_math.h	53;"	d
mm_diag_T	containers/def_templates_matrix_math.h	45;"	d
mm_diag_T	containers/def_templates_matrix_math.h	78;"	d
mm_diag_T	containers/matrix_math_T.cpp	/^void mm_diag_T$/;"	f
mm_diag_T	containers/undef_templates_matrix_math.h	40;"	d
mpi_rank	simulation/simulation.h	/^	          mpi_rank; \/\/\/< The mpi rank of the current processor.$/;"	m	struct:Simulation
mpi_size	simulation/simulation.h	/^	const int mpi_size, \/\/\/< The number of mpi processes.$/;"	m	struct:Simulation
mu	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^	     mu,     \/\/\/< The constant viscosity value.$/;"	m	struct:Sol_Data__tc	file:
mu_p	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	const struct Partials_Scalar* mu_p;  \/\/\/< Partial derivatives for the viscosity.$/;"	m	struct:Flux_Data_Navier_Stokes	typeref:struct:Flux_Data_Navier_Stokes::Partials_Scalar	file:
multiply_in_place_Multiarray_T	containers/def_templates_multiarray_math.h	34;"	d
multiply_in_place_Multiarray_T	containers/def_templates_multiarray_math.h	61;"	d
multiply_in_place_Multiarray_T	containers/multiarray_math_T.cpp	/^void multiply_in_place_Multiarray_T$/;"	f
multiply_in_place_Multiarray_T	containers/undef_templates_multiarray_math.h	30;"	d
multiply_in_place_Multiarray_TR	containers/def_templates_multiarray_math.h	35;"	d
multiply_in_place_Multiarray_TR	containers/def_templates_multiarray_math.h	62;"	d
multiply_in_place_Multiarray_TR	containers/multiarray_math_T.cpp	/^void multiply_in_place_Multiarray_TR$/;"	f
multiply_in_place_Multiarray_TR	containers/undef_templates_multiarray_math.h	31;"	d
mutable_Boundary_Value_T	simulation/test_case/boundary/boundary_T.h	/^struct mutable_Boundary_Value_T {$/;"	s
mutable_Boundary_Value_T	simulation/test_case/boundary/def_templates_boundary.h	25;"	d
mutable_Boundary_Value_T	simulation/test_case/boundary/def_templates_boundary.h	92;"	d
mutable_Boundary_Value_T	simulation/test_case/boundary/undef_templates_boundary.h	23;"	d
mutable_Flux_T	simulation/test_case/flux/def_templates_flux.h	126;"	d
mutable_Flux_T	simulation/test_case/flux/def_templates_flux.h	24;"	d
mutable_Flux_T	simulation/test_case/flux/flux_T.h	/^struct mutable_Flux_T {$/;"	s
mutable_Flux_T	simulation/test_case/flux/undef_templates_flux.h	23;"	d
mutable_Multiarray_Operator	simulation/operators/multiarray_operator.cpp	/^struct mutable_Multiarray_Operator {$/;"	s	file:
mutable_Numerical_Flux_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	23;"	d
mutable_Numerical_Flux_T	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	87;"	d
mutable_Numerical_Flux_T	simulation/solvers/numerical_flux/numerical_flux_T.h	/^struct mutable_Numerical_Flux_T {$/;"	s
mutable_Numerical_Flux_T	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	21;"	d
mutable_Operator	simulation/operators/operator.h	/^struct mutable_Operator {$/;"	s
mutable_constructor_sol_fptr_T	simulation/test_case/solution/def_templates_solution.h	27;"	d
mutable_constructor_sol_fptr_T	simulation/test_case/solution/def_templates_solution.h	82;"	d
mutable_constructor_sol_fptr_T	simulation/test_case/solution/solution_T.h	/^typedef struct Multiarray_T* (*mutable_constructor_sol_fptr_T)$/;"	t	typeref:struct:mutable_constructor_sol_fptr_T
mutable_constructor_sol_fptr_T	simulation/test_case/solution/undef_templates_solution.h	26;"	d
mutable_constructor_sol_fs_fptr_T	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	29;"	d
mutable_constructor_sol_fs_fptr_T	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	46;"	d
mutable_constructor_sol_fs_fptr_T	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^typedef struct Multiarray_T* (*mutable_constructor_sol_fs_fptr_T)$/;"	t	typeref:struct:mutable_constructor_sol_fs_fptr_T	file:
mutable_constructor_sol_fs_fptr_T	simulation/test_case/solution/euler/free_stream/undef_templates_solution_free_stream.h	24;"	d
mv_T	containers/def_templates_matrix_math.h	42;"	d
mv_T	containers/def_templates_matrix_math.h	75;"	d
mv_T	containers/matrix_math_T.cpp	/^void mv_T$/;"	f
mv_T	containers/undef_templates_matrix_math.h	37;"	d
n_b	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^	ptrdiff_t n_b;      \/\/\/< The number of background nodes.$/;"	m	struct:SSS_c	file:
n_bf	simulation/mesh/mesh_connectivity.cpp	/^	ptrdiff_t n_bf;                 \/**< The number of boundary faces (n_bf = n_pfe - n_pf, where n_pf: number of$/;"	m	struct:Boundary_Face_Info	file:
n_c0	simulation/solvers/solve.h	/^	ptrdiff_t n_c0; \/\/\/< The number of C0 dof. C0 assumed if this value is not zero.$/;"	m	struct:Solver_Storage_Implicit
n_dot_nf	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^	const struct const_Multiarray_T* n_dot_nf; \/\/\/< Unit normal dotted with the numerical flux.$/;"	m	struct:Num_Flux_T	typeref:struct:Num_Flux_T::const_Multiarray_T	file:
n_dot_nf	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^	const struct const_Multiarray_T* n_dot_nf; \/\/\/< Unit normal dotted with the numerical flux.$/;"	m	struct:Num_Flux_T	typeref:struct:Num_Flux_T::const_Multiarray_T	file:
n_e	element/element.cpp	/^	    n_e,     \/\/\/< Defined in \\ref Element.$/;"	m	struct:Elem_info	file:
n_e	element/element.h	/^	          n_e,    \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
n_e	element/element.h	/^	    n_e,    \/\/\/< The number of edges.$/;"	m	struct:Element
n_e_ve	element/element.cpp	/^	    *n_e_ve, \/\/\/< The number of vertices on each edge.$/;"	m	struct:Elem_info	file:
n_elems	simulation/mesh/mesh_readers.cpp	/^	ptrdiff_t n_elems; \/\/\/< The number of physical elements.$/;"	m	struct:Element_Data	file:
n_eq	simulation/test_case/boundary/boundary_T.h	/^	const int n_eq,  \/\/\/< \\ref Test_Case_T::n_eq.$/;"	m	struct:Boundary_Value_Input_T
n_eq	simulation/test_case/flux/flux_T.h	/^	const int n_eq,  \/\/\/< \\ref Test_Case_T::n_eq.$/;"	m	struct:Flux_Input_T
n_eq	simulation/test_case/test_case_T.h	/^	          n_eq;  \/\/\/< Number of equations in the PDE under consideration.$/;"	m	struct:Test_Case_T
n_f	element/element.cpp	/^	    n_f,     \/\/\/< Defined in \\ref Element.$/;"	m	struct:Elem_info	file:
n_f	element/element.h	/^	          n_f;    \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
n_f	element/element.h	/^	    n_f;    \/\/\/< The number of faces.$/;"	m	struct:Element
n_f	simulation/simulation.h	/^	          n_f; \/\/\/< The number of \\ref Face   finite elements.$/;"	m	struct:Simulation
n_f_ve	element/element.cpp	/^	    *n_f_ve, \/\/\/< The number of vertices on each face.$/;"	m	struct:Elem_info	file:
n_hp	simulation/simulation.h	/^	const int n_hp;$/;"	m	struct:Simulation
n_out	simulation/test_case/compute_error/compute_error.h	/^	const int n_out;      \/\/\/< The number of output error variables.$/;"	m	struct:Error_CE_Helper
n_p	simulation/visualization/element_plotting.h	/^	int n_p;                                     \/\/\/< The number of stored plotting nodes.$/;"	m	struct:Plotting_Element
n_partitions	simulation/simulation.h	/^	const int n_partitions; \/\/\/< Total number of mesh partitions. Should be equal to mpi_size. Default to 1 partition.$/;"	m	struct:Simulation
n_pf	simulation/mesh/mesh_periodic.cpp	/^	ptrdiff_t n_pf;                 \/\/\/< The number of periodic faces.$/;"	m	struct:Periodic_Face_Info	file:
n_pfe	simulation/mesh/mesh_connectivity.cpp	/^	ptrdiff_t n_pfe;                \/\/\/< The number of physical face elements.$/;"	m	struct:Boundary_Face_Info	file:
n_ref_max_e	element/element.h	/^	          n_ref_max_e; \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
n_ref_max_e	element/element.h	/^	    n_ref_max_e; \/\/\/< Maximum number of edge h-refinements.$/;"	m	struct:Element
n_ref_max_f	element/element.cpp	/^	    n_ref_max_f; \/\/\/< Defined in \\ref Element.$/;"	m	struct:Elem_info	file:
n_ref_max_f	element/element.h	/^	          n_ref_max_f, \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
n_ref_max_f	element/element.h	/^	    n_ref_max_f, \/\/\/< Maximum number of face h-refinements.$/;"	m	struct:Element
n_ref_max_v	element/element.cpp	/^	int n_ref_max_v, \/\/\/< Defined in \\ref Element.$/;"	m	struct:Elem_info	file:
n_ref_max_v	element/element.h	/^	const int n_ref_max_v, \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
n_ref_max_v	element/element.h	/^	int n_ref_max_v, \/\/\/< Maximum number of volume h-refinements.$/;"	m	struct:Element
n_type	simulation/geometry/geometry_blended_T.h	/^	const char n_type; \/\/\/< The 'n'ode "type" of the surface nodes. Options: 'g'eometry, 'v'ertex, 'c'ubature.$/;"	m	struct:Blended_Parametric_Data_T
n_v	simulation/simulation.h	/^	ptrdiff_t n_v, \/\/\/< The number of \\ref Volume finite elements.$/;"	m	struct:Simulation
n_v	simulation/test_case/solution/restart/restart_T.cpp	/^	const ptrdiff_t n_v;                    \/\/\/< The 'n'umber of 'v'olumes.$/;"	m	struct:Restart_Info	file:
n_var	simulation/test_case/boundary/boundary_T.h	/^	          n_var; \/\/\/< \\ref Test_Case_T::n_var.$/;"	m	struct:Boundary_Value_Input_T
n_var	simulation/test_case/flux/flux_T.h	/^	          n_var; \/\/\/< \\ref Test_Case_T::n_var.$/;"	m	struct:Flux_Input_T
n_var	simulation/test_case/test_case_T.h	/^	const int n_var, \/\/\/< Number of variables in the PDE under consideration.$/;"	m	struct:Test_Case_T
n_ve	element/element.cpp	/^	    n_ve,    \/\/\/< Defined in \\ref Element.$/;"	m	struct:Elem_info	file:
n_ve	element/element.h	/^	          n_ve,   \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
n_ve	element/element.h	/^	    n_ve,   \/\/\/< The number of vertices.$/;"	m	struct:Element
n_warn	testing/test_base.h	/^	int n_warn; \/\/\/< The number of warnings generated.$/;"	m	struct:Test_Info
name	intrusive/intrusive.h	/^	const int name; \/\/\/< Defined in \\ref Intrusive_List.$/;"	m	struct:const_Intrusive_List
name	intrusive/intrusive.h	/^	int name; \/\/\/< The name of the list. Used for selecting the appropriate destructor function.$/;"	m	struct:Intrusive_List
name	testing/test_base.h	/^	char name[STRLEN_MAX]; \/\/\/< The test name.$/;"	m	struct:Test_Info
nc_fc	simulation/solvers/element_solver.h	/^	const struct const_Multiarray_Vector_i* nc_fc[2]; \/\/\/< Node correspondence face 'f'ace 'c'ubature.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::const_Multiarray_Vector_i
nc_ff	simulation/solvers/adaptation/element_adaptation.h	/^	const struct const_Multiarray_Vector_i* nc_ff; \/\/\/< Node correspondence for 'f'ace 'f'lux.$/;"	m	struct:Adaptation_Element	typeref:struct:Adaptation_Element::const_Multiarray_Vector_i
nc_fg	simulation/geometry/element_geometry.h	/^	const struct const_Multiarray_Vector_i* nc_fg[2]; \/\/\/< Node correspondence 'f'ace 'g'eometry.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::const_Multiarray_Vector_i
neigh_info	simulation/computational_elements/face.cpp	/^	} neigh_info[2]; \/\/\/< \\ref Neigh_info_mi.$/;"	m	struct:Face_mesh_info	typeref:struct:Face_mesh_info::Neigh_info_mi	file:
neigh_info	simulation/computational_elements/face.h	/^	} neigh_info[2]; \/**< \\ref Neigh_Info. The information for the first index `neigh_info[0]` relates to the Volume$/;"	m	struct:Face	typeref:struct:Face::Neigh_Info
neigh_info	simulation/solvers/dg/face_solver_dg_T.h	/^	} neigh_info[2]; \/\/\/< \\ref Neigh_Info_DG. Uses the same indexing convention as that of \\ref Face::neigh_info.$/;"	m	struct:DG_Solver_Face_T	typeref:struct:DG_Solver_Face_T::Neigh_Info_DG
neigh_info	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	} neigh_info[2]; \/\/\/< Defined in \\ref Numerical_Flux_T.$/;"	m	struct:mutable_Numerical_Flux_T	typeref:struct:mutable_Numerical_Flux_T::m_Neigh_Info_NF_T
neigh_info	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	} neigh_info[2]; \/\/\/< \\ref Neigh_Info_NF_T.$/;"	m	struct:Numerical_Flux_T	typeref:struct:Numerical_Flux_T::Neigh_Info_NF_T
neighbours_were_updated	simulation/solvers/adaptation/adaptation.cpp	/^static bool neighbours_were_updated (const struct Adaptive_Solver_Face* a_s_face)$/;"	f	file:
next	intrusive/intrusive.h	/^	const struct const_Intrusive_Link* next; \/\/\/< Defined in \\ref Intrusive_Link.$/;"	m	struct:const_Intrusive_Link	typeref:struct:const_Intrusive_Link::const_Intrusive_Link
next	intrusive/intrusive.h	/^	struct Intrusive_Link* next; \/\/\/< Pointer to the next \\ref Intrusive_Link\\* in the list.$/;"	m	struct:Intrusive_Link	typeref:struct:Intrusive_Link::Intrusive_Link
nf_E	simulation/test_case/boundary/boundary_T.h	/^	Real nf_E;          \/\/\/< See brief.$/;"	m	struct:mutable_Boundary_Value_T
nf_E	simulation/test_case/boundary/boundary_T.h	/^	Real nf_E;$/;"	m	struct:Boundary_Value_T
nf_E	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^	     nf_E,  \/\/\/< Exact boundary 'n'ormal 'v'iscous 'f'lux for the total 'e'nergy equation.$/;"	m	struct:Exact_Boundary_Data	file:
nf_E_provided	simulation/test_case/boundary/boundary_T.h	/^	bool nf_E_provided; \/\/\/< Flag indicating whether \\ref Boundary_Value_T::nf_E was set and should be used.$/;"	m	struct:Boundary_Value_T
nf_E_provided	simulation/test_case/boundary/boundary_T.h	/^	bool nf_E_provided; \/\/\/< See brief.$/;"	m	struct:mutable_Boundary_Value_T
nf_coef	simulation/solvers/face_solver_T.h	/^	struct Multiarray_T* nf_coef; \/\/\/< The coefficients of the normal flux in the \\ref Simulation::basis_sol.$/;"	m	struct:Solver_Face_T	typeref:struct:Solver_Face_T::Multiarray_T
nf_fc	simulation/solvers/face_solver_T.h	/^	const struct const_Multiarray_T* nf_fc;$/;"	m	struct:Solver_Face_T	typeref:struct:Solver_Face_T::const_Multiarray_T
nnf	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	const struct const_Multiarray_T* nnf; \/\/\/< The normal numerical fluxes.$/;"	m	struct:Numerical_Flux_T	typeref:struct:Numerical_Flux_T::const_Multiarray_T
nnf	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	struct Multiarray_T* nnf; \/\/\/< Defined in \\ref Numerical_Flux_T.$/;"	m	struct:mutable_Numerical_Flux_T	typeref:struct:mutable_Numerical_Flux_T::Multiarray_T
node_global_id	simulation/mesh/mesh_readers.h	/^	const struct const_Vector_i*const node_global_id;  \/\/\/< Global ID of the nodes.$/;"	m	struct:Mesh_Data
node_kind	simulation/test_case/solution/solution_T.h	/^	     node_kind; \/\/\/< The kind of nodes to be used. Options: 's'olution, 'c'ubature.$/;"	m	struct:Solution_Container_T
node_nums	simulation/mesh/mesh_connectivity.cpp	/^	struct Vector_i* node_nums; \/\/\/< The node numbers of the face vertices.$/;"	m	struct:Boundary_Face	typeref:struct:Boundary_Face::Vector_i	file:
node_nums	simulation/mesh/mesh_periodic.cpp	/^	struct Vector_i* node_nums; \/\/\/< The node numbers of the face vertices.$/;"	m	struct:Periodic_Face	typeref:struct:Periodic_Face::Vector_i	file:
node_nums	simulation/mesh/mesh_readers.cpp	/^	struct Multiarray_Vector_i* node_nums; \/\/\/< Defined in \\ref Mesh_Data.$/;"	m	struct:Element_Data	typeref:struct:Element_Data::Multiarray_Vector_i	file:
node_nums	simulation/mesh/mesh_readers.h	/^	const struct const_Multiarray_Vector_i*const node_nums; \/\/\/< The list of node numbers for the elements.$/;"	m	struct:Mesh_Data
node_nums	testing/integration/test_integration_mesh.cpp	/^	struct Multiarray_Vector_i* node_nums;     \/\/\/< Defined in \\ref Mesh_Data.$/;"	m	struct:Mesh_Test_Data	typeref:struct:Mesh_Test_Data::Multiarray_Vector_i	file:
node_type	element/nodes.h	/^	          node_type; \/\/\/< See brief.$/;"	m	struct:const_Nodes
node_type	element/nodes.h	/^	int node_type; \/\/\/< The index associated with the node type.$/;"	m	struct:Nodes
nodes	element/nodes_plotting.h	/^	const struct const_Nodes nodes; \/\/\/< Defined in \\ref Plotting_Nodes.$/;"	m	struct:const_Plotting_Nodes	typeref:struct:const_Plotting_Nodes::const_Nodes
nodes	element/nodes_plotting.h	/^	struct Nodes nodes; \/\/\/< \\ref Nodes.$/;"	m	struct:Plotting_Nodes	typeref:struct:Plotting_Nodes::Nodes
nodes	simulation/mesh/mesh_readers.cpp	/^	struct Matrix_d*     nodes;         \/\/\/< Defined in \\ref Mesh_Data.$/;"	m	struct:Mesh_Data_l	typeref:struct:Mesh_Data_l::Matrix_d	file:
nodes	simulation/mesh/mesh_readers.h	/^	const struct const_Matrix_d*const nodes; \/\/\/< The xyz coordinates of the mesh elements (the mesh vertices).$/;"	m	struct:Mesh_Data
nodes	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^	const struct const_Matrix_d* nodes;   \/\/\/< The sorted nodes.$/;"	m	struct:Nodes_Sorted_ANN	typeref:struct:Nodes_Sorted_ANN::const_Matrix_d
nodes	simulation/test_case/solution/restart/restart_writers.cpp	/^	const struct const_Matrix_d* nodes;       \/\/\/< The xyz node coordinates.$/;"	m	struct:Nodes_Info	typeref:struct:Nodes_Info::const_Matrix_d	file:
nodes	testing/integration/test_integration_mesh.cpp	/^	struct Matrix_d*            nodes;         \/\/\/< Defined in \\ref Mesh_Data.$/;"	m	struct:Mesh_Test_Data	typeref:struct:Mesh_Test_Data::Matrix_d	file:
nodes_b	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^	const struct const_Matrix_d* nodes_b; \/\/\/< Background nodes.$/;"	m	struct:Input_ANN	typeref:struct:Input_ANN::const_Matrix_d
nodes_b	testing/unit/test_unit_approximate_nearest_neighbor.cpp	/^	const struct const_Matrix_d* nodes_b;  \/\/\/< Background nodes.$/;"	m	struct:ANN_Info	typeref:struct:ANN_Info::const_Matrix_d	file:
nodes_interp	simulation/simulation.h	/^	const char nodes_interp[N_ST_STD][STRLEN_MIN];$/;"	m	struct:Simulation
nodes_s	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^	const struct const_Matrix_d* nodes_s; \/\/\/< Search nodes.$/;"	m	struct:Input_ANN	typeref:struct:Input_ANN::const_Matrix_d
nodes_s	testing/unit/test_unit_approximate_nearest_neighbor.cpp	/^	const struct const_Matrix_d* nodes_s;  \/\/\/< Search nodes.$/;"	m	struct:ANN_Info	typeref:struct:ANN_Info::const_Matrix_d	file:
norm_Multiarray_T	containers/def_templates_multiarray_math.h	44;"	d
norm_Multiarray_T	containers/def_templates_multiarray_math.h	71;"	d
norm_Multiarray_T	containers/multiarray_math_T.cpp	/^Type norm_Multiarray_T (const struct Multiarray_T*const src, const char*const norm_type)$/;"	f
norm_Multiarray_T	containers/undef_templates_multiarray_math.h	40;"	d
norm_R	general/def_templates_math_functions.h	93;"	d
norm_R	general/undef_templates_math_functions.h	51;"	d
norm_R_from_T	general/def_templates_math_functions.h	34;"	d
norm_R_from_T	general/def_templates_math_functions.h	66;"	d
norm_R_from_T	general/math_functions_T.cpp	/^Real norm_R_from_T (const ptrdiff_t n_entries, const Type*const data, const char*const norm_type)$/;"	f
norm_R_from_T	general/undef_templates_math_functions.h	28;"	d
norm_T	general/def_templates_math_functions.h	33;"	d
norm_T	general/def_templates_math_functions.h	65;"	d
norm_T	general/math_functions_T.cpp	/^Type norm_T (const ptrdiff_t n_entries, const Type*const data, const char*const norm_type)$/;"	f
norm_T	general/undef_templates_math_functions.h	27;"	d
norm_diff_R	general/def_templates_math_functions.h	94;"	d
norm_diff_R	general/undef_templates_math_functions.h	52;"	d
norm_diff_RT	general/def_templates_math_functions.h	36;"	d
norm_diff_RT	general/def_templates_math_functions.h	68;"	d
norm_diff_RT	general/math_functions_T.cpp	/^Real norm_diff_RT$/;"	f
norm_diff_RT	general/undef_templates_math_functions.h	30;"	d
norm_diff_T	general/def_templates_math_functions.h	35;"	d
norm_diff_T	general/def_templates_math_functions.h	67;"	d
norm_diff_T	general/math_functions_T.cpp	/^Type norm_diff_T$/;"	f
norm_diff_T	general/undef_templates_math_functions.h	29;"	d
norm_diff_cols_d	testing/support/general/test_support_math_functions.cpp	/^double norm_diff_cols_d$/;"	f
norm_diff_inf_no_rel_T	general/def_templates_math_functions.h	37;"	d
norm_diff_inf_no_rel_T	general/def_templates_math_functions.h	69;"	d
norm_diff_inf_no_rel_T	general/math_functions_T.cpp	/^Type norm_diff_inf_no_rel_T (const ptrdiff_t n_entries, const Type*const data_0, const Type*const data_1)$/;"	f
norm_diff_inf_no_rel_T	general/undef_templates_math_functions.h	31;"	d
norm_diff_petsc_Mat	testing/support/general/test_support_math_functions.cpp	/^double norm_diff_petsc_Mat (Mat A0, Mat A1, const bool allow_differing_num_entries)$/;"	f
norm_op_H0	simulation/solvers/dpg/volume_solver_dpg_T.h	/^	const struct const_Matrix_T* norm_op_H0; \/\/\/< The H0 (L2) norm operator.$/;"	m	struct:DPG_Solver_Volume_T	typeref:struct:DPG_Solver_Volume_T::const_Matrix_T
norm_op_H1	simulation/solvers/dpg/volume_solver_dpg_T.h	/^	const struct const_Matrix_T* norm_op_H1; \/\/\/< The H1      norm operator.$/;"	m	struct:DPG_Solver_Volume_T	typeref:struct:DPG_Solver_Volume_T::const_Matrix_T
normal	simulation/geometry/geometry_blended_T.h	/^	const struct const_Vector_R* normal; \/\/\/< Outward pointing unit normal vector.$/;"	m	struct:Blended_Parametric_Data_T	typeref:struct:Blended_Parametric_Data_T::const_Vector_R
normalize_Multiarray_R	containers/def_templates_multiarray_math.h	78;"	d
normalize_Multiarray_R	containers/undef_templates_multiarray_math.h	44;"	d
normalize_Multiarray_T	containers/def_templates_multiarray_math.h	28;"	d
normalize_Multiarray_T	containers/def_templates_multiarray_math.h	55;"	d
normalize_Multiarray_T	containers/multiarray_math_T.cpp	/^void normalize_Multiarray_T$/;"	f
normalize_Multiarray_T	containers/undef_templates_multiarray_math.h	24;"	d
normals	element/element.h	/^	const struct const_Multiarray_d* normals; \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element	typeref:struct:const_Element::const_Multiarray_d
normals	element/element.h	/^	struct Multiarray_d* normals; \/\/\/< The reference unit normal vectors for each of the element faces.$/;"	m	struct:Element	typeref:struct:Element::Multiarray_d
normals	simulation/test_case/boundary/boundary_T.h	/^	const struct const_Multiarray_T* normals;     \/\/\/< The unit normal vector components.$/;"	m	struct:Boundary_Value_Input_T	typeref:struct:Boundary_Value_Input_T::const_Multiarray_T
normals_fc	simulation/solvers/face_solver_T.h	/^	const struct const_Multiarray_T* normals_fc;$/;"	m	struct:Solver_Face_T	typeref:struct:Solver_Face_T::const_Multiarray_T
normals_fc_exact	simulation/solvers/face_solver_T.h	/^	const struct const_Multiarray_T* normals_fc_exact;$/;"	m	struct:Solver_Face_T	typeref:struct:Solver_Face_T::const_Multiarray_T
normals_p1	simulation/solvers/face_solver_T.h	/^	const struct const_Multiarray_T* normals_p1;$/;"	m	struct:Solver_Face_T	typeref:struct:Solver_Face_T::const_Multiarray_T
normals_std	simulation/test_case/boundary/boundary_T.h	/^	const struct const_Multiarray_T* normals_std; \/\/\/< Standard unit normal vector components (computed from metrics).$/;"	m	struct:Boundary_Value_Input_T	typeref:struct:Boundary_Value_Input_T::const_Multiarray_T
num_owners	simulation/mesh/mesh_readers.cpp	/^	struct Vector_i* num_owners; \/\/\/< Number of partitions the entity belongs to.$/;"	m	struct:Elementary_Entity	typeref:struct:Elementary_Entity::Vector_i	file:
omega	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^	     omega; \/\/\/< Exact boundary angular velocity.$/;"	m	struct:Exact_Boundary_Data	file:
omega	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^	     omega,  \/\/\/< The angular velocity of the rotating cylinder.$/;"	m	struct:Sol_Data__tc	file:
ones_coef_vt	simulation/solvers/dpg/element_solver_dpg.h	/^	const struct const_Multiarray_Vector_d* ones_coef_vt; \/\/\/< See \\ref constructor_operators_ones_coef.$/;"	m	struct:DPG_Solver_Element	typeref:struct:DPG_Solver_Element::const_Multiarray_Vector_d
op	element/element_operators_tp.h	/^	const struct Multiarray_Operator* op[2][2];$/;"	m	struct:Operators_TP	typeref:struct:Operators_TP::Multiarray_Operator
op_csr	simulation/operators/operator.h	/^	const struct const_Matrix_CSR_d*const op_csr;         \/\/\/< The sparse matrix operator in CSR format.$/;"	m	struct:Operator
op_csr	simulation/operators/operator.h	/^	struct Matrix_CSR_d* op_csr;        \/\/\/< The sparse matrix operator in CSR format.$/;"	m	struct:mutable_Operator	typeref:struct:mutable_Operator::Matrix_CSR_d
op_io	element/element_operators.h	/^	const struct Op_IO op_io[2]; \/\/\/< \\ref Op_IO for each of input\/output.$/;"	m	struct:Operator_Info	typeref:struct:Operator_Info::Op_IO
op_should_use_L2	element/element_operators.cpp	/^static bool op_should_use_L2 (const int*const op_values, const struct Operator_Info*const op_info)$/;"	f	file:
op_std	simulation/operators/operator.h	/^	const struct const_Matrix_d*const op_std;             \/\/\/< The standard dense matrix operator.$/;"	m	struct:Operator
op_std	simulation/operators/operator.h	/^	struct Matrix_d* op_std;            \/\/\/< The standard dense matrix operator.$/;"	m	struct:mutable_Operator	typeref:struct:mutable_Operator::Matrix_d
op_type	element/element_operators.h	/^	const int op_type;    \/\/\/< The type of operator.$/;"	m	struct:Operator_Info
ops_tp	simulation/operators/operator.h	/^	const struct const_Multiarray_Matrix_d*const  ops_tp; \/\/\/< The multiarray of tensor-product sub-operators.$/;"	m	struct:Operator
ops_tp	simulation/operators/operator.h	/^	struct Multiarray_Matrix_d* ops_tp; \/\/\/< The multiarray of tensor-product sub-operators.$/;"	m	struct:mutable_Operator	typeref:struct:mutable_Operator::Multiarray_Matrix_d
order	containers/multiarray_T.h	/^	const int order;$/;"	m	struct:const_Multiarray_Matrix_T
order	containers/multiarray_T.h	/^	const int order;$/;"	m	struct:const_Multiarray_T
order	containers/multiarray_T.h	/^	const int order;$/;"	m	struct:const_Multiarray_Vector_T
order	containers/multiarray_T.h	/^	int order;          \/\/\/< Defined in \\ref Multiarray_T.$/;"	m	struct:Multiarray_Matrix_T
order	containers/multiarray_T.h	/^	int order;          \/\/\/< Defined in \\ref Multiarray_T.$/;"	m	struct:Multiarray_Vector_T
order	containers/multiarray_T.h	/^	int order;          \/\/\/< Number of dimensions.$/;"	m	struct:Multiarray_T
order	simulation/operators/multiarray_operator.cpp	/^	int order;          \/\/\/< Defined in \\ref Multiarray_Operator.$/;"	m	struct:mutable_Multiarray_Operator	file:
order	simulation/operators/multiarray_operator.h	/^	const int order;               \/\/\/< Defined in \\ref Multiarray_T.$/;"	m	struct:Multiarray_Operator
order	testing/support/containers/test_support_multiarray.cpp	/^	int       order;                \/\/\/< Defined in \\ref Multiarray_T.$/;"	m	struct:Multiarray_Partial	file:
output_Gen_Eig_Data	testing/integration/test_integration_inf_sup.cpp	/^static void output_Gen_Eig_Data (const struct Gen_Eig_Data*const ged, const int ml)$/;"	f	file:
output_combined_results	testing/integration/test_integration_convergence_support.cpp	/^static void output_combined_results$/;"	f	file:
output_data	processing/post/convert_data.py	/^def output_data (output_i,input_i):$/;"	f
output_error	simulation/test_case/compute_error/compute_error.cpp	/^void output_error (const struct Simulation* sim)$/;"	f
output_error_functionals	simulation/test_case/compute_error/compute_error.cpp	/^void output_error_functionals (const struct Simulation*const sim)$/;"	f
output_errors_global	simulation/test_case/compute_error/compute_error.cpp	/^static void output_errors_global (const int error_type, const struct Error_CE* error_ce, const struct Simulation* sim)$/;"	f	file:
output_errors_sp	simulation/test_case/compute_error/compute_error.cpp	/^static void output_errors_sp$/;"	f	file:
output_figure	processing/post/convert_data.py	/^def output_figure(data_i,output):$/;"	f
output_petsc_mat	simulation/solvers/solve_implicit.cpp	/^void output_petsc_mat (Mat A, const char* file_name)$/;"	f
output_petsc_mat_vec	simulation/solvers/solve_implicit.cpp	/^static void output_petsc_mat_vec (Mat A, Vec b, const struct Simulation* sim)$/;"	f	file:
output_petsc_matrices	testing/integration/test_integration_linearization.cpp	/^static void output_petsc_matrices (const struct Solver_Storage_Implicit* ssi[2])$/;"	f	file:
output_petsc_schur	simulation/solvers/solve_implicit.cpp	/^static void output_petsc_schur (Mat A, Vec b, const struct Simulation* sim)$/;"	f	file:
output_petsc_vec	simulation/solvers/solve_implicit.cpp	/^static void output_petsc_vec (Vec b, const char* file_name)$/;"	f	file:
output_restart	simulation/test_case/solution/restart/restart_writers.cpp	/^void output_restart (const struct Simulation*const sim)$/;"	f
output_restart_finest	testing/integration/test_integration_restart_output.cpp	/^static void output_restart_finest (const int argc, char**const argv)$/;"	f	file:
output_restart_gmsh	simulation/test_case/solution/restart/restart_writers.cpp	/^static void output_restart_gmsh (const struct Simulation*const sim)$/;"	f	file:
output_solution	simulation/solvers/solve_implicit.cpp	/^static void output_solution (const int i_step, struct Simulation*const sim)$/;"	f	file:
output_visualization	simulation/visualization/visualization.cpp	/^void output_visualization (struct Simulation* sim, const int vis_type)$/;"	f
output_visualization_paraview	simulation/visualization/visualization.cpp	/^static void output_visualization_paraview (const struct Simulation* sim, const int vis_type)$/;"	f	file:
output_visualization_vtk_geom	simulation/visualization/visualization.cpp	/^static void output_visualization_vtk_geom$/;"	f	file:
output_visualization_vtk_normals	simulation/visualization/visualization.cpp	/^static void output_visualization_vtk_normals (const struct Simulation* sim)$/;"	f	file:
output_visualization_vtk_sol	simulation/visualization/visualization.cpp	/^static void output_visualization_vtk_sol (const struct Simulation* sim)$/;"	f	file:
output_warning_count	testing/test_base.cpp	/^void output_warning_count (struct Test_Info*const test_info)$/;"	f
outputting_restart	simulation/test_case/test_case.cpp	/^bool outputting_restart ( )$/;"	f
owners	simulation/mesh/mesh_readers.cpp	/^	struct Matrix_i* owners;   \/\/\/< The list of the associated partitions. (0-based index)$/;"	m	struct:Elementary_Entity	typeref:struct:Elementary_Entity::Matrix_i	file:
owns_data	containers/matrix_T.h	/^	bool owns_data; \/\/\/< Defined in \\ref Matrix_T.$/;"	m	struct:Matrix_CSR_T
owns_data	containers/matrix_T.h	/^	bool owns_data; \/\/\/< Flag for whether the data should be freed when calling the destructor.$/;"	m	struct:Matrix_T
owns_data	containers/matrix_T.h	/^	const bool owns_data;$/;"	m	struct:const_Matrix_CSR_T
owns_data	containers/matrix_T.h	/^	const bool owns_data;$/;"	m	struct:const_Matrix_T
owns_data	containers/multiarray_T.h	/^	bool owns_data;         \/\/\/< Defined in \\ref Multiarray_T.$/;"	m	struct:Multiarray_Matrix_T
owns_data	containers/multiarray_T.h	/^	bool owns_data;         \/\/\/< Defined in \\ref Multiarray_T.$/;"	m	struct:Multiarray_Vector_T
owns_data	containers/multiarray_T.h	/^	bool owns_data; \/**< Flag for whether the data should be freed in the destructor. This would be false if a move$/;"	m	struct:Multiarray_T
owns_data	containers/multiarray_T.h	/^	const bool owns_data;$/;"	m	struct:const_Multiarray_Matrix_T
owns_data	containers/multiarray_T.h	/^	const bool owns_data;$/;"	m	struct:const_Multiarray_T
owns_data	containers/multiarray_T.h	/^	const bool owns_data;$/;"	m	struct:const_Multiarray_Vector_T
owns_data	containers/vector_T.h	/^	bool owns_data; \/\/\/< Defined in \\ref Matrix_T.$/;"	m	struct:Vector_T
owns_data	containers/vector_T.h	/^	const bool owns_data;$/;"	m	struct:const_Vector_T
owns_data	simulation/operators/multiarray_operator.cpp	/^	bool owns_data;                 \/\/\/< Defined in \\ref Multiarray_Operator.$/;"	m	struct:mutable_Multiarray_Operator	file:
owns_data	simulation/operators/multiarray_operator.h	/^	const bool owns_data;                   \/\/\/< Defined in \\ref Multiarray_T.$/;"	m	struct:Multiarray_Operator
p	element/nodes.h	/^	const int p,         \/\/\/< See brief.$/;"	m	struct:const_Nodes
p	element/nodes.h	/^	int p;$/;"	m	struct:Nodes
p	simulation/test_case/boundary/boundary_T.h	/^	int p;    \/\/\/< \\ref Solver_Face_T::p_ref.$/;"	m	struct:Boundary_Value_Input_T
p	simulation/test_case/flux/flux_euler_T.cpp	/^	           p,       \/\/\/< Pressure.$/;"	m	struct:Flux_Data_Euler	file:
p	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^	     p,     \/\/\/< The free stream pressure.$/;"	m	struct:Sol_Data__fs	file:
p	simulation/test_case/solution/euler/solution_euler.cpp	/^	       p,        \/\/\/< The free stream pressure.$/;"	m	struct:Sol_Data__c_dl	file:
p_14	testing/unit/test_unit_bases.cpp	/^	const struct const_Vector_d* p_14, \/\/\/< The 1d basis partition of unity (summed) vector of order 4.$/;"	m	struct:Basis_Data_TP_Bezier	typeref:struct:Basis_Data_TP_Bezier::const_Vector_d	file:
p_24	testing/unit/test_unit_bases.cpp	/^	                           * p_24, \/\/\/< The 2d basis partition of unity (summed) vector of order 4.$/;"	m	struct:Basis_Data_TP_Bezier	typeref:struct:Basis_Data_TP_Bezier::	file:
p_24	testing/unit/test_unit_bases.cpp	/^	const struct const_Vector_d* p_24, \/\/\/< The 2d basis partition of unity (summed) vector of order 4.$/;"	m	struct:Basis_Data_SI_Bezier	typeref:struct:Basis_Data_SI_Bezier::const_Vector_d	file:
p_34	testing/unit/test_unit_bases.cpp	/^	                           * p_34; \/\/\/< The 3d basis partition of unity (summed) vector of order 4.$/;"	m	struct:Basis_Data_SI_Bezier	typeref:struct:Basis_Data_SI_Bezier::	file:
p_34	testing/unit/test_unit_bases.cpp	/^	                           * p_34; \/\/\/< The 3d basis partition of unity (summed) vector of order 4.$/;"	m	struct:Basis_Data_TP_Bezier	typeref:struct:Basis_Data_TP_Bezier::	file:
p_34	testing/unit/test_unit_bases.cpp	/^	const struct const_Vector_d* p_34; \/\/\/< The 3d basis partition of unity (summed) vector of order 4.$/;"	m	struct:Basis_Data_PYR_Bezier	typeref:struct:Basis_Data_PYR_Bezier::const_Vector_d	file:
p_back	simulation/test_case/boundary/boundary_euler_T.cpp	/^	Real p_back,  \/\/\/< Back pressure.$/;"	m	struct:BC_Data	file:
p_c_p	simulation/simulation.h	/^	const int p_c_p[2];$/;"	m	struct:Simulation
p_c_x	simulation/simulation.h	/^	const int p_c_x[2];$/;"	m	struct:Simulation
p_e	simulation/solvers/element_solver.h	/^	const struct Plotting_Element   p_e; \/\/\/< \\ref Plotting_Element.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Plotting_Element
p_faces	simulation/mesh/mesh_periodic.cpp	/^	struct Periodic_Face** p_faces; \/\/\/< The list of \\ref Periodic_Face entities.$/;"	m	struct:Periodic_Face_Info	typeref:struct:Periodic_Face_Info::Periodic_Face	file:
p_i	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^	     p_i,    \/\/\/< The pressure of the 'i'nner cylinder.$/;"	m	struct:Sol_Data__tc	file:
p_ig	simulation/simulation.h	/^	const int p_ig[2];$/;"	m	struct:Simulation
p_inf	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^	       p_inf, \/\/\/< The reference pressure.$/;"	m	struct:Sol_Data__pv	file:
p_nodes	simulation/visualization/element_plotting.h	/^	const struct const_Plotting_Nodes** p_nodes; \/\/\/< The array of \\ref Plotting_Nodes for each order.$/;"	m	struct:Plotting_Element	typeref:struct:Plotting_Element::const_Plotting_Nodes
p_nodes	simulation/visualization/visualization.cpp	/^	const struct const_Plotting_Nodes* p_nodes; \/\/\/< \\ref Plotting_Nodes.$/;"	m	struct:Volume_Data_Vis	typeref:struct:Volume_Data_Vis::const_Plotting_Nodes	file:
p_op	element/element_operators.h	/^	          p_op;  \/\/\/< The polynomial order index of the operator (**Not the order of the basis\/cubature rule**).$/;"	m	struct:Op_IO
p_ref	element/element_operators.h	/^	const int p_ref[2]; \/\/\/< Reference polynomial orders from \\ref Simulation.$/;"	m	struct:Operator_Info
p_ref	simulation/simulation.h	/^	const int p_ref[2];$/;"	m	struct:Simulation
p_ref	simulation/solvers/face_solver_T.h	/^	const int p_ref;$/;"	m	struct:Solver_Face_T
p_ref	simulation/solvers/volume_solver_T.h	/^	const int p_ref;$/;"	m	struct:Solver_Volume_T
p_ref	simulation/visualization/visualization.cpp	/^	    p_ref, \/\/\/< \\ref Solver_Volume_T::p_ref.$/;"	m	struct:Volume_Data_Vis	file:
p_ref	testing/integration/test_integration.h	/^	const int p_ref[2];$/;"	m	struct:Integration_Test_Info
p_ref_prev	simulation/solvers/adaptation/face_solver_adaptive.h	/^	int p_ref_prev; \/\/\/< The previous value of \\ref Solver_Face_T::p_ref.$/;"	m	struct:Adaptive_Solver_Face
p_ref_prev	simulation/solvers/adaptation/volume_solver_adaptive.h	/^	int p_ref_prev; \/\/\/< The previous value of \\ref Solver_Volume_T::p_ref.$/;"	m	struct:Adaptive_Solver_Volume
p_s_f	simulation/simulation.h	/^	const int p_s_f[2];$/;"	m	struct:Simulation
p_s_f_p	simulation/simulation.h	/^	          p_s_f_p,  \/\/\/< The additive ((p)lus: +) constant of the face   solution order relative to p_ref.$/;"	m	struct:Simulation
p_s_v	simulation/simulation.h	/^	const int p_s_v[2];$/;"	m	struct:Simulation
p_s_v_p	simulation/simulation.h	/^	const int p_s_v_p,  \/\/\/< The additive ((p)lus: +) constant of the volume solution order relative to p_ref.$/;"	m	struct:Simulation
p_sg_f	simulation/simulation.h	/^	const int p_sg_f[2];$/;"	m	struct:Simulation
p_sg_f_p	simulation/simulation.h	/^	          p_sg_f_p; \/\/\/< The additive ((p)lus: +) constant of the face   solution gradient order relative to p_ref.$/;"	m	struct:Simulation
p_sg_v	simulation/simulation.h	/^	const int p_sg_v[2];$/;"	m	struct:Simulation
p_sg_v_p	simulation/simulation.h	/^	          p_sg_v_p, \/\/\/< The additive ((p)lus: +) constant of the volume solution gradient order relative to p_ref.$/;"	m	struct:Simulation
p_t_p	simulation/simulation.h	/^	const int p_t_p[2];$/;"	m	struct:Simulation
p_total	simulation/test_case/boundary/boundary_euler_T.cpp	/^	     p_total, \/\/\/< Total pressure.$/;"	m	struct:BC_Data	file:
parent	simulation/solvers/adaptation/face_solver_adaptive.h	/^	struct Intrusive_Link* parent;  \/\/\/< Pointer to the parent (if applicable).$/;"	m	struct:Adaptive_Solver_Face	typeref:struct:Adaptive_Solver_Face::Intrusive_Link
parent	simulation/solvers/adaptation/volume_solver_adaptive.h	/^	struct Intrusive_Link* parent;  \/\/\/< Pointer to the parent (if applicable).$/;"	m	struct:Adaptive_Solver_Volume	typeref:struct:Adaptive_Solver_Volume::Intrusive_Link
pde_index	simulation/test_case/test_case_T.h	/^	const int pde_index;  \/\/\/< Index corresponding to \\ref Simulation::pde_name.$/;"	m	struct:Test_Case_T
pde_name	simulation/simulation.h	/^	const char pde_name[STRLEN_MIN];  \/\/\/< Name of the Partial Differential Equation (PDE).$/;"	m	struct:Simulation
pde_spec	simulation/simulation.h	/^	const char pde_spec[STRLEN_MAX];  \/\/\/< Additional specifications for the PDE.$/;"	m	struct:Simulation
period_l	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^	double period_l, \/\/\/< The 'l'ength of the period.$/;"	m	struct:Sol_Data__pv	file:
periodic_corr	simulation/mesh/mesh_readers.cpp	/^	struct Matrix_i*     periodic_corr; \/\/\/< Define in \\ref Mesh_Data.$/;"	m	struct:Mesh_Data_l	typeref:struct:Mesh_Data_l::Matrix_i	file:
periodic_corr	simulation/mesh/mesh_readers.h	/^	const struct const_Matrix_i*const periodic_corr;$/;"	m	struct:Mesh_Data
periodic_corr	testing/integration/test_integration_mesh.cpp	/^	struct Matrix_i*            periodic_corr; \/\/\/< Defined in \\ref Mesh_Data.$/;"	m	struct:Mesh_Test_Data	typeref:struct:Mesh_Test_Data::Matrix_i	file:
permute_Matrix_R_V	containers/def_templates_matrix_math.h	91;"	d
permute_Matrix_R_V	containers/undef_templates_matrix_math.h	49;"	d
permute_Matrix_R_fc	simulation/solvers/compute_face_rlhs_T.cpp	/^void permute_Matrix_R_fc$/;"	f
permute_Matrix_R_fc	simulation/solvers/def_templates_compute_face_rlhs.h	32;"	d
permute_Matrix_R_fc	simulation/solvers/def_templates_compute_face_rlhs.h	63;"	d
permute_Matrix_R_fc	simulation/solvers/undef_templates_compute_face_rlhs.h	29;"	d
permute_Matrix_T	containers/def_templates_matrix_math.h	36;"	d
permute_Matrix_T	containers/def_templates_matrix_math.h	69;"	d
permute_Matrix_T	containers/matrix_math_T.cpp	/^void permute_Matrix_T (struct Matrix_T* a, const ptrdiff_t* p)$/;"	f
permute_Matrix_T	containers/undef_templates_matrix_math.h	31;"	d
permute_Matrix_T_V	containers/def_templates_matrix_math.h	37;"	d
permute_Matrix_T_V	containers/def_templates_matrix_math.h	70;"	d
permute_Matrix_T_V	containers/matrix_math_T.cpp	/^void permute_Matrix_T_V (struct Matrix_T* a, const struct const_Vector_i* p_V)$/;"	f
permute_Matrix_T_V	containers/undef_templates_matrix_math.h	32;"	d
permute_Matrix_T_fc	simulation/solvers/compute_face_rlhs_T.cpp	/^void permute_Matrix_T_fc$/;"	f
permute_Matrix_T_fc	simulation/solvers/def_templates_compute_face_rlhs.h	31;"	d
permute_Matrix_T_fc	simulation/solvers/def_templates_compute_face_rlhs.h	62;"	d
permute_Matrix_T_fc	simulation/solvers/undef_templates_compute_face_rlhs.h	28;"	d
permute_Multiarray_R	containers/def_templates_multiarray_math.h	79;"	d
permute_Multiarray_R	containers/undef_templates_multiarray_math.h	45;"	d
permute_Multiarray_T	containers/def_templates_multiarray_math.h	29;"	d
permute_Multiarray_T	containers/def_templates_multiarray_math.h	56;"	d
permute_Multiarray_T	containers/multiarray_math_T.cpp	/^void permute_Multiarray_T (struct Multiarray_T* a, const ptrdiff_t* p, const char perm_layout)$/;"	f
permute_Multiarray_T	containers/undef_templates_multiarray_math.h	25;"	d
permute_Multiarray_T_V	containers/def_templates_multiarray_math.h	30;"	d
permute_Multiarray_T_V	containers/def_templates_multiarray_math.h	57;"	d
permute_Multiarray_T_V	containers/multiarray_math_T.cpp	/^void permute_Multiarray_T_V (struct Multiarray_T* a, const struct const_Vector_i* p_V, const char perm_layout)$/;"	f
permute_Multiarray_T_V	containers/undef_templates_multiarray_math.h	26;"	d
permute_Multiarray_T_fc	simulation/solvers/compute_face_rlhs_T.cpp	/^void permute_Multiarray_T_fc$/;"	f
permute_Multiarray_T_fc	simulation/solvers/def_templates_compute_face_rlhs.h	40;"	d
permute_Multiarray_T_fc	simulation/solvers/def_templates_compute_face_rlhs.h	71;"	d
permute_Multiarray_T_fc	simulation/solvers/undef_templates_compute_face_rlhs.h	37;"	d
permute_rows_Matrix_R_V	containers/def_templates_matrix_math.h	92;"	d
permute_rows_Matrix_R_V	containers/undef_templates_matrix_math.h	50;"	d
permute_rows_Matrix_T_V	containers/def_templates_matrix_math.h	38;"	d
permute_rows_Matrix_T_V	containers/def_templates_matrix_math.h	71;"	d
permute_rows_Matrix_T_V	containers/matrix_math_T.cpp	/^void permute_rows_Matrix_T_V (struct Matrix_T* a, const struct const_Vector_i* p_V)$/;"	f
permute_rows_Matrix_T_V	containers/undef_templates_matrix_math.h	33;"	d
pert_mag	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^	Real pert_mag; \/\/\/< 'Pert'urbation 'mag'nitude.$/;"	m	struct:Sol_Data__fs	file:
perturb_Multiarray_c	testing/support/containers/test_support_multiarray.cpp	/^void perturb_Multiarray_c (struct Multiarray_c* a, const double da)$/;"	f
perturb_Multiarray_d	testing/support/containers/test_support_multiarray.cpp	/^void perturb_Multiarray_d (struct Multiarray_d* a, const double da)$/;"	f
perturb_solution	testing/support/simulation/solvers/test_support_solve.cpp	/^void perturb_solution (const struct Simulation*const sim)$/;"	f
petsc_mat_vec_assemble	simulation/solvers/solve.cpp	/^void petsc_mat_vec_assemble (struct Solver_Storage_Implicit* ssi)$/;"	f
phi13	testing/unit/test_unit_bases.cpp	/^	const struct const_Matrix_d* phi13, \/\/\/< The 1d basis functions of order 3.$/;"	m	struct:Basis_Data_TP_Bezier	typeref:struct:Basis_Data_TP_Bezier::const_Matrix_d	file:
phi13	testing/unit/test_unit_bases.cpp	/^	const struct const_Matrix_d* phi13, \/\/\/< The 1d basis functions of order 3.$/;"	m	struct:Basis_Data_TP_Ortho	typeref:struct:Basis_Data_TP_Ortho::const_Matrix_d	file:
phi22	testing/unit/test_unit_bases.cpp	/^	                           * phi22, \/\/\/< The 2d basis functions of order 2.$/;"	m	struct:Basis_Data_TP_Bezier	typeref:struct:Basis_Data_TP_Bezier::	file:
phi22	testing/unit/test_unit_bases.cpp	/^	                           * phi22, \/\/\/< The 2d basis functions of order 2.$/;"	m	struct:Basis_Data_TP_Ortho	typeref:struct:Basis_Data_TP_Ortho::	file:
phi22	testing/unit/test_unit_bases.cpp	/^	const struct const_Matrix_d* phi22, \/\/\/< The 2d basis functions of order 2.$/;"	m	struct:Basis_Data_SI_Bezier	typeref:struct:Basis_Data_SI_Bezier::const_Matrix_d	file:
phi22	testing/unit/test_unit_bases.cpp	/^	const struct const_Matrix_d* phi22, \/\/\/< The 2d basis functions of order 2.$/;"	m	struct:Basis_Data_SI_Ortho	typeref:struct:Basis_Data_SI_Ortho::const_Matrix_d	file:
phi23	testing/unit/test_unit_bases.cpp	/^	                           * phi23, \/\/\/< The 2d basis functions of order 3.$/;"	m	struct:Basis_Data_SI_Bezier	typeref:struct:Basis_Data_SI_Bezier::	file:
phi23	testing/unit/test_unit_bases.cpp	/^	                           * phi23, \/\/\/< The 2d basis functions of order 3.$/;"	m	struct:Basis_Data_SI_Ortho	typeref:struct:Basis_Data_SI_Ortho::	file:
phi31	testing/unit/test_unit_bases.cpp	/^	                           * phi31; \/\/\/< The 3d basis functions of order 1.$/;"	m	struct:Basis_Data_TP_Ortho	typeref:struct:Basis_Data_TP_Ortho::	file:
phi32	testing/unit/test_unit_bases.cpp	/^	                           * phi32; \/\/\/< The 3d basis functions of order 1.$/;"	m	struct:Basis_Data_TP_Bezier	typeref:struct:Basis_Data_TP_Bezier::	file:
phi32	testing/unit/test_unit_bases.cpp	/^	                           * phi32; \/\/\/< The 3d basis functions of order 2.$/;"	m	struct:Basis_Data_SI_Bezier	typeref:struct:Basis_Data_SI_Bezier::	file:
phi32	testing/unit/test_unit_bases.cpp	/^	                           * phi32; \/\/\/< The 3d basis functions of order 2.$/;"	m	struct:Basis_Data_SI_Ortho	typeref:struct:Basis_Data_SI_Ortho::	file:
phi32	testing/unit/test_unit_bases.cpp	/^	const struct const_Matrix_d* phi32; \/\/\/< The 3d basis functions of order 2.$/;"	m	struct:Basis_Data_PYR_Bezier	typeref:struct:Basis_Data_PYR_Bezier::const_Matrix_d	file:
phi32	testing/unit/test_unit_bases.cpp	/^	const struct const_Matrix_d* phi32; \/\/\/< The 3d basis functions of order 2.$/;"	m	struct:Basis_Data_PYR_Ortho	typeref:struct:Basis_Data_PYR_Ortho::const_Matrix_d	file:
phys_id	simulation/mesh/mesh_readers.cpp	/^	struct Matrix_i* phys_id;        \/\/\/< The list of physical ID. (BC or Connectivity)$/;"	m	struct:Elementary_Entity	typeref:struct:Elementary_Entity::Matrix_i	file:
plotting_element_info	element/nodes_plotting.cpp	/^static void plotting_element_info$/;"	f	file:
plt_hex	testing/unit/test_unit_nodes.cpp	/^	                                 * plt_hex,   \/\/\/< Plotting nodes for the HEX   element.$/;"	m	struct:Plotting_Nodes_Data	typeref:struct:Plotting_Nodes_Data::	file:
plt_line	testing/unit/test_unit_nodes.cpp	/^	const struct const_Plotting_Nodes* plt_line,  \/\/\/< Plotting nodes for the LINE  element.$/;"	m	struct:Plotting_Nodes_Data	typeref:struct:Plotting_Nodes_Data::const_Plotting_Nodes	file:
plt_pyr	testing/unit/test_unit_nodes.cpp	/^	                                 * plt_pyr;   \/\/\/< Plotting nodes for the PYR   element.$/;"	m	struct:Plotting_Nodes_Data	typeref:struct:Plotting_Nodes_Data::	file:
plt_quad	testing/unit/test_unit_nodes.cpp	/^	                                 * plt_quad,  \/\/\/< Plotting nodes for the QUAD  element.$/;"	m	struct:Plotting_Nodes_Data	typeref:struct:Plotting_Nodes_Data::	file:
plt_tet	testing/unit/test_unit_nodes.cpp	/^	                                 * plt_tet,   \/\/\/< Plotting nodes for the TET   element.$/;"	m	struct:Plotting_Nodes_Data	typeref:struct:Plotting_Nodes_Data::	file:
plt_tri	testing/unit/test_unit_nodes.cpp	/^	                                 * plt_tri,   \/\/\/< Plotting nodes for the TRI   element.$/;"	m	struct:Plotting_Nodes_Data	typeref:struct:Plotting_Nodes_Data::	file:
plt_wedge	testing/unit/test_unit_nodes.cpp	/^	                                 * plt_wedge, \/\/\/< Plotting nodes for the WEDGE element.$/;"	m	struct:Plotting_Nodes_Data	typeref:struct:Plotting_Nodes_Data::	file:
point_N	testing/unit/test_unit_nodes.cpp	/^	const struct const_Multiarray_Vector_i* point_N, \/\/\/< Vectors of correspondence indices for a N- node point face.$/;"	m	struct:Nodes_FC_Data	typeref:struct:Nodes_FC_Data::const_Multiarray_Vector_i	file:
poly_rst	testing/support/element/test_support_bases.cpp	/^static double poly_rst (const double r, const double s, const double t, const int derivative_index)$/;"	f	file:
pow_R	general/def_templates_math_functions.h	89;"	d
pow_R	general/undef_templates_math_functions.h	47;"	d
pow_T	general/def_templates_math_functions.h	26;"	d
pow_T	general/def_templates_math_functions.h	58;"	d
pow_T	general/undef_templates_math_functions.h	22;"	d
present	element/element.h	/^	bool present; \/\/\/< Whether the element type is or may become present in the simulation.$/;"	m	struct:Element
present	element/element.h	/^	const bool present; \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
prev	intrusive/intrusive.h	/^	const struct const_Intrusive_Link* prev; \/\/\/< Defined in \\ref Intrusive_Link.$/;"	m	struct:const_Intrusive_Link	typeref:struct:const_Intrusive_Link::const_Intrusive_Link
prev	intrusive/intrusive.h	/^	struct Intrusive_Link* prev; \/\/\/< Pointer to the previous \\ref Intrusive_Link\\* in the list.$/;"	m	struct:Intrusive_Link	typeref:struct:Intrusive_Link::Intrusive_Link
print_Matrix_R	containers/def_templates_matrix_print.h	49;"	d
print_Matrix_R	containers/undef_templates_matrix_print.h	28;"	d
print_Matrix_T	containers/def_templates_matrix_print.h	27;"	d
print_Matrix_T	containers/def_templates_matrix_print.h	40;"	d
print_Matrix_T	containers/def_templates_matrix_print.h	62;"	d
print_Matrix_T	containers/matrix_print_T.cpp	/^void print_Matrix_T (const struct Matrix_T*const a)$/;"	f
print_Matrix_T	containers/undef_templates_matrix_print.h	23;"	d
print_Matrix_T_tol	containers/def_templates_matrix_print.h	25;"	d
print_Matrix_T_tol	containers/def_templates_matrix_print.h	38;"	d
print_Matrix_T_tol	containers/def_templates_matrix_print.h	60;"	d
print_Matrix_T_tol	containers/matrix_print_T.cpp	/^void print_Matrix_T_tol (const struct Matrix_T*const a, const Real tol)$/;"	f
print_Matrix_T_tol	containers/undef_templates_matrix_print.h	21;"	d
print_Multiarray_Matrix_T	containers/def_templates_multiarray_print.h	31;"	d
print_Multiarray_Matrix_T	containers/def_templates_multiarray_print.h	46;"	d
print_Multiarray_Matrix_T	containers/def_templates_multiarray_print.h	70;"	d
print_Multiarray_Matrix_T	containers/multiarray_print_T.cpp	/^void print_Multiarray_Matrix_T (const struct Multiarray_Matrix_T*const a)$/;"	f
print_Multiarray_Matrix_T	containers/undef_templates_multiarray_print.h	27;"	d
print_Multiarray_Matrix_T_tol	containers/def_templates_multiarray_print.h	27;"	d
print_Multiarray_Matrix_T_tol	containers/def_templates_multiarray_print.h	42;"	d
print_Multiarray_Matrix_T_tol	containers/def_templates_multiarray_print.h	66;"	d
print_Multiarray_Matrix_T_tol	containers/multiarray_print_T.cpp	/^void print_Multiarray_Matrix_T_tol (const struct Multiarray_Matrix_T*const a, const Real tol)$/;"	f
print_Multiarray_Matrix_T_tol	containers/undef_templates_multiarray_print.h	23;"	d
print_Multiarray_Operator	simulation/operators/multiarray_operator.cpp	/^void print_Multiarray_Operator (const struct Multiarray_Operator*const a)$/;"	f
print_Multiarray_Operator_tol	simulation/operators/multiarray_operator.cpp	/^void print_Multiarray_Operator_tol (const struct Multiarray_Operator*const a, const double tol)$/;"	f
print_Multiarray_R	containers/def_templates_multiarray_print.h	53;"	d
print_Multiarray_R	containers/undef_templates_multiarray_print.h	32;"	d
print_Multiarray_T	containers/def_templates_multiarray_print.h	29;"	d
print_Multiarray_T	containers/def_templates_multiarray_print.h	44;"	d
print_Multiarray_T	containers/def_templates_multiarray_print.h	68;"	d
print_Multiarray_T	containers/multiarray_print_T.cpp	/^void print_Multiarray_T (const struct Multiarray_T*const a)$/;"	f
print_Multiarray_T	containers/undef_templates_multiarray_print.h	25;"	d
print_Multiarray_T_tol	containers/def_templates_multiarray_print.h	25;"	d
print_Multiarray_T_tol	containers/def_templates_multiarray_print.h	40;"	d
print_Multiarray_T_tol	containers/def_templates_multiarray_print.h	64;"	d
print_Multiarray_T_tol	containers/multiarray_print_T.cpp	/^void print_Multiarray_T_tol (const struct Multiarray_T*const a, const Real tol)$/;"	f
print_Multiarray_T_tol	containers/undef_templates_multiarray_print.h	21;"	d
print_Multiarray_Vector_T	containers/def_templates_multiarray_print.h	23;"	d
print_Multiarray_Vector_T	containers/def_templates_multiarray_print.h	38;"	d
print_Multiarray_Vector_T	containers/def_templates_multiarray_print.h	62;"	d
print_Multiarray_Vector_T	containers/multiarray_print_T.cpp	/^void print_Multiarray_Vector_T (const struct Multiarray_Vector_T*const a)$/;"	f
print_Multiarray_Vector_T	containers/undef_templates_multiarray_print.h	19;"	d
print_Multiarray_counter	containers/multiarray_print.cpp	/^void print_Multiarray_counter (const int order, const ptrdiff_t*const counter)$/;"	f
print_Multiarray_extents	containers/multiarray_print.cpp	/^void print_Multiarray_extents (const int order, const ptrdiff_t*const extents)$/;"	f
print_Nodes	element/nodes.cpp	/^void print_Nodes (const struct Nodes*const nodes)$/;"	f
print_Nodes_tol	element/nodes.cpp	/^void print_Nodes_tol (const struct Nodes*const nodes, const double tol)$/;"	f
print_Operator	simulation/operators/operator.cpp	/^void print_Operator (const struct Operator*const a)$/;"	f
print_Operator_tol	simulation/operators/operator.cpp	/^void print_Operator_tol (const struct Operator*const a, const double tol)$/;"	f
print_Plotting_Nodes	element/nodes_plotting.cpp	/^void print_Plotting_Nodes (const struct Plotting_Nodes*const p_nodes)$/;"	f
print_Plotting_Nodes_tol	element/nodes_plotting.cpp	/^void print_Plotting_Nodes_tol (const struct Plotting_Nodes*const p_nodes, const double tol)$/;"	f
print_Vector_R	containers/def_templates_vector_print.h	41;"	d
print_Vector_R	containers/undef_templates_vector_print.h	27;"	d
print_Vector_T	containers/def_templates_vector_print.h	25;"	d
print_Vector_T	containers/def_templates_vector_print.h	34;"	d
print_Vector_T	containers/def_templates_vector_print.h	51;"	d
print_Vector_T	containers/undef_templates_vector_print.h	21;"	d
print_Vector_T	containers/vector_print_T.cpp	/^void print_Vector_T (const struct Vector_T*const a)$/;"	f
print_Vector_T_tol	containers/def_templates_vector_print.h	23;"	d
print_Vector_T_tol	containers/def_templates_vector_print.h	32;"	d
print_Vector_T_tol	containers/def_templates_vector_print.h	49;"	d
print_Vector_T_tol	containers/undef_templates_vector_print.h	19;"	d
print_Vector_T_tol	containers/vector_print_T.cpp	/^void print_Vector_T_tol (const struct Vector_T*const a, const Real tol)$/;"	f
print_const_Matrix_R	containers/def_templates_matrix_print.h	50;"	d
print_const_Matrix_R	containers/undef_templates_matrix_print.h	29;"	d
print_const_Matrix_T	containers/def_templates_matrix_print.h	28;"	d
print_const_Matrix_T	containers/def_templates_matrix_print.h	41;"	d
print_const_Matrix_T	containers/def_templates_matrix_print.h	63;"	d
print_const_Matrix_T	containers/matrix_print_T.cpp	/^void print_const_Matrix_T (const struct const_Matrix_T*const a)$/;"	f
print_const_Matrix_T	containers/undef_templates_matrix_print.h	24;"	d
print_const_Matrix_T_tol	containers/def_templates_matrix_print.h	26;"	d
print_const_Matrix_T_tol	containers/def_templates_matrix_print.h	39;"	d
print_const_Matrix_T_tol	containers/def_templates_matrix_print.h	61;"	d
print_const_Matrix_T_tol	containers/matrix_print_T.cpp	/^void print_const_Matrix_T_tol (const struct const_Matrix_T*const a, const Real tol)$/;"	f
print_const_Matrix_T_tol	containers/undef_templates_matrix_print.h	22;"	d
print_const_Multiarray_Matrix_T	containers/def_templates_multiarray_print.h	32;"	d
print_const_Multiarray_Matrix_T	containers/def_templates_multiarray_print.h	47;"	d
print_const_Multiarray_Matrix_T	containers/def_templates_multiarray_print.h	71;"	d
print_const_Multiarray_Matrix_T	containers/multiarray_print_T.cpp	/^void print_const_Multiarray_Matrix_T (const struct const_Multiarray_Matrix_T*const a)$/;"	f
print_const_Multiarray_Matrix_T	containers/undef_templates_multiarray_print.h	28;"	d
print_const_Multiarray_Matrix_T_tol	containers/def_templates_multiarray_print.h	28;"	d
print_const_Multiarray_Matrix_T_tol	containers/def_templates_multiarray_print.h	43;"	d
print_const_Multiarray_Matrix_T_tol	containers/def_templates_multiarray_print.h	67;"	d
print_const_Multiarray_Matrix_T_tol	containers/multiarray_print_T.cpp	/^void print_const_Multiarray_Matrix_T_tol (const struct const_Multiarray_Matrix_T*const a, const Real tol)$/;"	f
print_const_Multiarray_Matrix_T_tol	containers/undef_templates_multiarray_print.h	24;"	d
print_const_Multiarray_R	containers/def_templates_multiarray_print.h	54;"	d
print_const_Multiarray_R	containers/undef_templates_multiarray_print.h	33;"	d
print_const_Multiarray_T	containers/def_templates_multiarray_print.h	30;"	d
print_const_Multiarray_T	containers/def_templates_multiarray_print.h	45;"	d
print_const_Multiarray_T	containers/def_templates_multiarray_print.h	69;"	d
print_const_Multiarray_T	containers/multiarray_print_T.cpp	/^void print_const_Multiarray_T (const struct const_Multiarray_T*const a)$/;"	f
print_const_Multiarray_T	containers/undef_templates_multiarray_print.h	26;"	d
print_const_Multiarray_T_tol	containers/def_templates_multiarray_print.h	26;"	d
print_const_Multiarray_T_tol	containers/def_templates_multiarray_print.h	41;"	d
print_const_Multiarray_T_tol	containers/def_templates_multiarray_print.h	65;"	d
print_const_Multiarray_T_tol	containers/multiarray_print_T.cpp	/^void print_const_Multiarray_T_tol (const struct const_Multiarray_T*const a, const Real tol)$/;"	f
print_const_Multiarray_T_tol	containers/undef_templates_multiarray_print.h	22;"	d
print_const_Multiarray_Vector_T	containers/def_templates_multiarray_print.h	24;"	d
print_const_Multiarray_Vector_T	containers/def_templates_multiarray_print.h	39;"	d
print_const_Multiarray_Vector_T	containers/def_templates_multiarray_print.h	63;"	d
print_const_Multiarray_Vector_T	containers/multiarray_print_T.cpp	/^void print_const_Multiarray_Vector_T (const struct const_Multiarray_Vector_T*const a)$/;"	f
print_const_Multiarray_Vector_T	containers/undef_templates_multiarray_print.h	20;"	d
print_const_Nodes	element/nodes.cpp	/^void print_const_Nodes (const struct const_Nodes*const nodes)$/;"	f
print_const_Nodes_tol	element/nodes.cpp	/^void print_const_Nodes_tol (const struct const_Nodes*const nodes, const double tol)$/;"	f
print_const_Plotting_Nodes	element/nodes_plotting.cpp	/^void print_const_Plotting_Nodes (const struct const_Plotting_Nodes*const p_nodes)$/;"	f
print_const_Plotting_Nodes_tol	element/nodes_plotting.cpp	/^void print_const_Plotting_Nodes_tol (const struct const_Plotting_Nodes*const p_nodes, const double tol)$/;"	f
print_const_Vector_R	containers/def_templates_vector_print.h	42;"	d
print_const_Vector_R	containers/undef_templates_vector_print.h	28;"	d
print_const_Vector_T	containers/def_templates_vector_print.h	26;"	d
print_const_Vector_T	containers/def_templates_vector_print.h	35;"	d
print_const_Vector_T	containers/def_templates_vector_print.h	52;"	d
print_const_Vector_T	containers/undef_templates_vector_print.h	22;"	d
print_const_Vector_T	containers/vector_print_T.cpp	/^void print_const_Vector_T (const struct const_Vector_T*const a)$/;"	f
print_const_Vector_T_tol	containers/def_templates_vector_print.h	24;"	d
print_const_Vector_T_tol	containers/def_templates_vector_print.h	33;"	d
print_const_Vector_T_tol	containers/def_templates_vector_print.h	50;"	d
print_const_Vector_T_tol	containers/undef_templates_vector_print.h	20;"	d
print_const_Vector_T_tol	containers/vector_print_T.cpp	/^void print_const_Vector_T_tol (const struct const_Vector_T*const a, const Real tol)$/;"	f
print_counter_MaO	simulation/operators/multiarray_operator.cpp	/^static void print_counter_MaO (const int order, const ptrdiff_t*const counter)$/;"	f	file:
print_diff_Matrix_d	testing/support/containers/test_support_matrix.cpp	/^void print_diff_Matrix_d (const struct Matrix_d*const a, const struct Matrix_d*const b, const double tol)$/;"	f
print_diff_Matrix_i	testing/support/containers/test_support_matrix.cpp	/^void print_diff_Matrix_i (const struct Matrix_i*const a, const struct Matrix_i*const b)$/;"	f
print_diff_Multiarray_Matrix_d	testing/support/containers/test_support_multiarray.cpp	/^void print_diff_Multiarray_Matrix_d$/;"	f
print_diff_Multiarray_Vector_i	testing/support/containers/test_support_multiarray.cpp	/^void print_diff_Multiarray_Vector_i (const struct Multiarray_Vector_i*const a, const struct Multiarray_Vector_i*const b)$/;"	f
print_diff_Multiarray_d	testing/support/containers/test_support_multiarray.cpp	/^void print_diff_Multiarray_d (const struct Multiarray_d*const a, const struct Multiarray_d*const b, const double tol)$/;"	f
print_diff_Nodes	testing/support/element/test_support_nodes.cpp	/^static void print_diff_Nodes (const struct Nodes* a, const struct Nodes* b, const double tol)$/;"	f	file:
print_diff_Plotting_Nodes	testing/support/element/test_support_nodes.cpp	/^static void print_diff_Plotting_Nodes (const struct Plotting_Nodes* a, const struct Plotting_Nodes* b, const double tol)$/;"	f	file:
print_diff_Vector_d	testing/support/containers/test_support_vector.cpp	/^void print_diff_Vector_d (const struct Vector_d*const a, const struct Vector_d*const b, const double tol)$/;"	f
print_diff_Vector_i	testing/support/containers/test_support_vector.cpp	/^void print_diff_Vector_i (const struct Vector_i*const a, const struct Vector_i*const b)$/;"	f
print_diff_cond_const_Matrix_d	testing/support/containers/test_support_matrix.cpp	/^void print_diff_cond_const_Matrix_d$/;"	f
print_diff_const_Matrix_d	testing/support/containers/test_support_matrix.cpp	/^void print_diff_const_Matrix_d$/;"	f
print_diff_const_Multiarray_Matrix_d	testing/support/containers/test_support_multiarray.cpp	/^void print_diff_const_Multiarray_Matrix_d$/;"	f
print_diff_const_Multiarray_Vector_i	testing/support/containers/test_support_multiarray.cpp	/^void print_diff_const_Multiarray_Vector_i$/;"	f
print_diff_const_Multiarray_d	testing/support/containers/test_support_multiarray.cpp	/^void print_diff_const_Multiarray_d$/;"	f
print_diff_const_Nodes	testing/support/element/test_support_nodes.cpp	/^void print_diff_const_Nodes$/;"	f
print_diff_const_Plotting_Nodes	testing/support/element/test_support_nodes.cpp	/^void print_diff_const_Plotting_Nodes$/;"	f
print_diff_const_Vector_d	testing/support/containers/test_support_vector.cpp	/^void print_diff_const_Vector_d$/;"	f
print_diff_const_Vector_i	testing/support/containers/test_support_vector.cpp	/^void print_diff_const_Vector_i$/;"	f
print_diff_geom	testing/integration/test_integration_non_conforming.cpp	/^static void print_diff_geom$/;"	f	file:
print_diff_no_rel_Multiarray_d	testing/support/containers/test_support_multiarray.cpp	/^void print_diff_no_rel_Multiarray_d$/;"	f
print_diff_no_rel_const_Multiarray_d	testing/support/containers/test_support_multiarray.cpp	/^void print_diff_no_rel_const_Multiarray_d$/;"	f
print_imag	containers/matrix_print_T.cpp	/^void print_imag (const double complex val)$/;"	f
print_nodes	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^static void print_nodes (const ptrdiff_t n, const struct Node_ANN*const nodes, const char*const name)$/;"	f	file:
print_real	containers/matrix_print_T.cpp	/^void print_real (const double complex val)$/;"	f
print_to_file_Matrix_T	containers/def_templates_matrix_print.h	29;"	d
print_to_file_Matrix_T	containers/def_templates_matrix_print.h	42;"	d
print_to_file_Matrix_T	containers/def_templates_matrix_print.h	64;"	d
print_to_file_Matrix_T	containers/matrix_print_T.cpp	/^void print_to_file_Matrix_T (FILE*const file, const struct Matrix_T*const a)$/;"	f
print_to_file_Matrix_T	containers/undef_templates_matrix_print.h	25;"	d
print_to_file_const_Matrix_T	containers/def_templates_matrix_print.h	30;"	d
print_to_file_const_Matrix_T	containers/def_templates_matrix_print.h	43;"	d
print_to_file_const_Matrix_T	containers/def_templates_matrix_print.h	65;"	d
print_to_file_const_Matrix_T	containers/matrix_print_T.cpp	/^void print_to_file_const_Matrix_T (FILE*const file, const struct const_Matrix_T*const a)$/;"	f
print_to_file_const_Matrix_T	containers/undef_templates_matrix_print.h	26;"	d
prod_Vector_T	containers/def_templates_vector.h	116;"	d
prod_Vector_T	containers/def_templates_vector.h	43;"	d
prod_Vector_T	containers/def_templates_vector.h	74;"	d
prod_Vector_T	containers/undef_templates_vector.h	37;"	d
prod_Vector_T	containers/vector_T.cpp	/^Type prod_Vector_T (const struct Vector_T* a)$/;"	f
prod_const_Vector_T	containers/def_templates_vector.h	117;"	d
prod_const_Vector_T	containers/def_templates_vector.h	44;"	d
prod_const_Vector_T	containers/def_templates_vector.h	75;"	d
prod_const_Vector_T	containers/undef_templates_vector.h	38;"	d
prod_const_Vector_T	containers/vector_T.cpp	/^Type prod_const_Vector_T (const struct const_Vector_T* a)$/;"	f
proj_L2_l	simulation/solvers/opg/compute_face_rlhs_opg_T.h	/^	const struct const_Matrix_T* proj_L2_l;$/;"	m	struct:Lhs_Operators_OPG_T	typeref:struct:Lhs_Operators_OPG_T::const_Matrix_T
project_solution_faces	simulation/solvers/adaptation/adaptation.cpp	/^static void project_solution_faces (struct Simulation* sim)$/;"	f	file:
project_solution_volumes	simulation/solvers/adaptation/adaptation.cpp	/^static void project_solution_volumes (struct Simulation* sim)$/;"	f	file:
ptr_fgets_checked	general/file_processing.cpp	/^char* ptr_fgets_checked (char*const line, const int sizeof_line, FILE*const file)$/;"	f
push_back_IL	intrusive/intrusive.cpp	/^void push_back_IL (struct Intrusive_List* lst, struct Intrusive_Link* curr)$/;"	f
push_back_IL_List	intrusive/intrusive.cpp	/^void push_back_IL_List (struct Intrusive_List*const lst, struct Intrusive_List*const end)$/;"	f
push_back_Multiarray_T	containers/def_templates_multiarray.h	121;"	d
push_back_Multiarray_T	containers/def_templates_multiarray.h	70;"	d
push_back_Multiarray_T	containers/multiarray_T.cpp	/^void push_back_Multiarray_T (struct Multiarray_T*const dest, const struct const_Multiarray_T*const src)$/;"	f
push_back_Multiarray_T	containers/undef_templates_multiarray.h	67;"	d
push_back_Vector_T	containers/def_templates_vector.h	122;"	d
push_back_Vector_T	containers/def_templates_vector.h	49;"	d
push_back_Vector_T	containers/def_templates_vector.h	80;"	d
push_back_Vector_T	containers/undef_templates_vector.h	43;"	d
push_back_Vector_T	containers/vector_T.cpp	/^void push_back_Vector_T (struct Vector_T*const src, const Type val, const bool sorted, const bool unique)$/;"	f
push_back_Vector_Vector_T	containers/def_templates_vector.h	50;"	d
push_back_Vector_Vector_T	containers/def_templates_vector.h	81;"	d
push_back_Vector_Vector_T	containers/undef_templates_vector.h	44;"	d
push_back_Vector_Vector_T	containers/vector_T.cpp	/^void push_back_Vector_Vector_T (struct Vector_T*const src, const struct const_Vector_T*const vals)$/;"	f
push_back_const_IL	intrusive/intrusive.cpp	/^void push_back_const_IL (const struct const_Intrusive_List* lst, const struct const_Intrusive_Link* curr)$/;"	f
quad_16	testing/unit/test_unit_nodes.cpp	/^	                                      * quad_16, \/\/\/< Vectors of correspondence indices for a 16-node quad  face.$/;"	m	struct:Nodes_FC_Data	typeref:struct:Nodes_FC_Data::	file:
quad_9	testing/unit/test_unit_nodes.cpp	/^	                                      * quad_9,  \/\/\/< Vectors of correspondence indices for a 9- node quad  face.$/;"	m	struct:Nodes_FC_Data	typeref:struct:Nodes_FC_Data::	file:
r2	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^	Real r2; \/\/\/< The minimum squared Euclidian distance from the search node to computed background nodes.$/;"	m	struct:SSS_c	file:
r_i	simulation/geometry/geometry_parametric_T.cpp	/^	     r_i,      \/\/\/< Radius corresponding to the 'i'nner surface.$/;"	m	struct:Geo_Data	file:
r_i	simulation/mesh/mesh_geometry_cylinder_hollow_section.cpp	/^	const double r_i, \/\/\/< The inner radius.$/;"	m	struct:Geom_Data__chs	file:
r_i	simulation/test_case/solution/euler/supersonic_vortex/solution_supersonic_vortex_T.cpp	/^	double r_i,   \/\/\/< The 'r'adius of the 'i'nternal cylinder.$/;"	m	struct:Sol_Data__sv	file:
r_i	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^	Real r_i,    \/\/\/< The 'r'adius of the 'i'nner cylinder.$/;"	m	struct:Sol_Data__tc	file:
r_o	simulation/geometry/geometry_parametric_T.cpp	/^	     r_o,      \/\/\/< Radius corresponding to the 'o'uter surface.$/;"	m	struct:Geo_Data	file:
r_o	simulation/mesh/mesh_geometry_cylinder_hollow_section.cpp	/^	             r_o; \/\/\/< The outer radius.$/;"	m	struct:Geom_Data__chs	file:
r_o	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^	     r_o,    \/\/\/< The 'r'adius of the 'o'uter cylinder.$/;"	m	struct:Sol_Data__tc	file:
r_s	simulation/test_case/boundary/boundary_euler_T.cpp	/^	     r_s;     \/\/\/< Specific gas constant.$/;"	m	struct:BC_Data	file:
r_s	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^	     r_s;    \/\/\/< The specific gas constant.$/;"	m	struct:Sol_Data__tc	file:
r_v	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^	double r_v,   \/\/\/< A parameter related to the radial decay of the vortex.$/;"	m	struct:Sol_Data__pv	file:
range_ce	element/element_operators.h	/^	          range_ce, \/\/\/< Range of computational elements.$/;"	m	struct:Operator_Info
range_d	element/element_operators.h	/^	const int range_d,  \/\/\/< Range of dimensions (For differentiation operators).$/;"	m	struct:Operator_Info
range_h	element/element_operators.h	/^	          range_h,  \/\/\/< Range of h-refinement related operators.$/;"	m	struct:Operator_Info
range_p	element/element_operators.h	/^	          range_p;  \/\/\/< Range of polynomial orders.$/;"	m	struct:Operator_Info
read_and_set_data_diabatic_flux	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^static void read_and_set_data_diabatic_flux (struct Exact_Boundary_Data*const eb_data)$/;"	f	file:
read_and_set_data_diabatic_flux	simulation/test_case/boundary/def_templates_boundary.h	147;"	d
read_and_set_data_diabatic_flux	simulation/test_case/boundary/def_templates_boundary.h	80;"	d
read_and_set_data_diabatic_flux	simulation/test_case/boundary/undef_templates_boundary.h	81;"	d
read_and_set_data_no_slip_rotating	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^static void read_and_set_data_no_slip_rotating (struct Exact_Boundary_Data*const eb_data)$/;"	f	file:
read_and_set_data_no_slip_rotating	simulation/test_case/boundary/def_templates_boundary.h	148;"	d
read_and_set_data_no_slip_rotating	simulation/test_case/boundary/def_templates_boundary.h	81;"	d
read_and_set_data_no_slip_rotating	simulation/test_case/boundary/undef_templates_boundary.h	82;"	d
read_and_set_data_rho_E	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^static void read_and_set_data_rho_E (struct Exact_Boundary_Data*const eb_data)$/;"	f	file:
read_and_set_data_rho_E	simulation/test_case/boundary/def_templates_boundary.h	149;"	d
read_and_set_data_rho_E	simulation/test_case/boundary/def_templates_boundary.h	82;"	d
read_and_set_data_rho_E	simulation/test_case/boundary/undef_templates_boundary.h	83;"	d
read_data	processing/post/convert_data.py	/^	def read_data (self):$/;"	m	class:Input_Data
read_data_advection_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	33;"	d
read_data_advection_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	50;"	d
read_data_advection_T	simulation/test_case/solution/advection/solution_advection_T.cpp	/^void read_data_advection_T (struct Sol_Data__Advection_T*const sol_data)$/;"	f
read_data_advection_T	simulation/test_case/solution/advection/undef_templates_solution_advection.h	31;"	d
read_data_back_pressure	simulation/test_case/boundary/boundary_euler_T.cpp	/^static void read_data_back_pressure (struct BC_Data*const bc_data)$/;"	f	file:
read_data_back_pressure	simulation/test_case/boundary/def_templates_boundary.h	140;"	d
read_data_back_pressure	simulation/test_case/boundary/def_templates_boundary.h	73;"	d
read_data_back_pressure	simulation/test_case/boundary/undef_templates_boundary.h	74;"	d
read_data_c_dl	simulation/test_case/solution/euler/solution_euler.cpp	/^static void read_data_c_dl (struct Sol_Data__c_dl*const sol_data)$/;"	f	file:
read_data_cylinder__hollow_section	simulation/mesh/mesh_geometry_cylinder_hollow_section.cpp	/^static void read_data_cylinder__hollow_section (struct Geom_Data__chs*const geom_data)$/;"	f	file:
read_data_default_diffusion	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	43;"	d
read_data_default_diffusion	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	69;"	d
read_data_default_diffusion	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^static void read_data_default_diffusion (struct Sol_Data__dd*const sol_data)$/;"	f	file:
read_data_default_diffusion	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	38;"	d
read_data_fixed_cube	simulation/geometry/def_templates_geometry_parametric.h	38;"	d
read_data_fixed_cube	simulation/geometry/def_templates_geometry_parametric.h	60;"	d
read_data_fixed_cube	simulation/geometry/geometry_parametric_T.cpp	/^static void read_data_fixed_cube (struct Geo_Data*const geo_data)$/;"	f	file:
read_data_fixed_cube	simulation/geometry/undef_templates_geometry_parametric.h	33;"	d
read_data_free_stream	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	32;"	d
read_data_free_stream	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	49;"	d
read_data_free_stream	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^static void read_data_free_stream (struct Sol_Data__fs*const sol_data)$/;"	f	file:
read_data_free_stream	simulation/test_case/solution/euler/free_stream/undef_templates_solution_free_stream.h	27;"	d
read_data_gaussian_bump	simulation/geometry/def_templates_geometry_parametric.h	37;"	d
read_data_gaussian_bump	simulation/geometry/def_templates_geometry_parametric.h	59;"	d
read_data_gaussian_bump	simulation/geometry/geometry_parametric_T.cpp	/^static void read_data_gaussian_bump (struct Geo_Data*const geo_data)$/;"	f	file:
read_data_gaussian_bump	simulation/geometry/undef_templates_geometry_parametric.h	32;"	d
read_data_joukowski	simulation/geometry/def_templates_geometry_parametric.h	36;"	d
read_data_joukowski	simulation/geometry/def_templates_geometry_parametric.h	58;"	d
read_data_joukowski	simulation/geometry/geometry_parametric_T.cpp	/^static void read_data_joukowski (struct Geo_Data*const geo_data)$/;"	f	file:
read_data_joukowski	simulation/geometry/undef_templates_geometry_parametric.h	31;"	d
read_data_periodic_vortex	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	32;"	d
read_data_periodic_vortex	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	48;"	d
read_data_periodic_vortex	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^static void read_data_periodic_vortex (struct Sol_Data__pv*const sol_data)$/;"	f	file:
read_data_periodic_vortex	simulation/test_case/solution/euler/periodic_vortex/undef_templates_solution_periodic_vortex.h	28;"	d
read_data_specific_gas	simulation/test_case/solution/euler/solution_euler.cpp	/^static void read_data_specific_gas (double*const r_s)$/;"	f	file:
read_data_supersonic_vortex	simulation/test_case/solution/euler/supersonic_vortex/def_templates_solution_supersonic_vortex.h	31;"	d
read_data_supersonic_vortex	simulation/test_case/solution/euler/supersonic_vortex/def_templates_solution_supersonic_vortex.h	45;"	d
read_data_supersonic_vortex	simulation/test_case/solution/euler/supersonic_vortex/solution_supersonic_vortex_T.cpp	/^static void read_data_supersonic_vortex (struct Sol_Data__sv*const sol_data)$/;"	f	file:
read_data_supersonic_vortex	simulation/test_case/solution/euler/supersonic_vortex/undef_templates_solution_supersonic_vortex.h	26;"	d
read_data_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	34;"	d
read_data_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	52;"	d
read_data_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^static void read_data_taylor_couette (struct Sol_Data__tc*const sol_data)$/;"	f	file:
read_data_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/undef_templates_solution_taylor_couette.h	29;"	d
read_data_total_tp	simulation/test_case/boundary/boundary_euler_T.cpp	/^static void read_data_total_tp (struct BC_Data*const bc_data)$/;"	f	file:
read_data_total_tp	simulation/test_case/boundary/def_templates_boundary.h	141;"	d
read_data_total_tp	simulation/test_case/boundary/def_templates_boundary.h	74;"	d
read_data_total_tp	simulation/test_case/boundary/undef_templates_boundary.h	75;"	d
read_elementary_entities	simulation/mesh/mesh_readers.cpp	/^static struct Elementary_Entity* read_elementary_entities (FILE* mesh_file)$/;"	f	file:
read_elements	simulation/mesh/mesh_readers.cpp	/^static struct Element_Data* read_elements (FILE* mesh_file)$/;"	f	file:
read_elements_partition	simulation/mesh/mesh_readers.cpp	/^static void read_elements_partition $/;"	f	file:
read_extension	general/file_processing.cpp	/^static const char* read_extension (const char*const ctrl_name_full, const char*const extension_name)$/;"	f	file:
read_line_values_d	general/file_processing.cpp	/^void read_line_values_d (char**const line, const ptrdiff_t n_val, double*const vals)$/;"	f
read_line_values_i	general/file_processing.cpp	/^void read_line_values_i (char**const line, const ptrdiff_t n_val, int*const vals, const bool decrement)$/;"	f
read_line_values_l	general/file_processing.cpp	/^void read_line_values_l (char**const line, const ptrdiff_t n_val, long int*const vals, const bool decrement)$/;"	f
read_nodes	simulation/mesh/mesh_readers.cpp	/^static struct Matrix_d* read_nodes (FILE* mesh_file, const int d)$/;"	f	file:
read_nodes_partition	simulation/mesh/mesh_readers.cpp	/^static struct Matrix_d* read_nodes_partition (FILE* mesh_file, const struct Vector_i*const node_nums_unique, const int dim)$/;"	f	file:
read_order_extents	testing/support/containers/test_support_multiarray.cpp	/^struct Multiarray_Partial read_order_extents (FILE* data_file)$/;"	f
read_periodic	simulation/mesh/mesh_readers.cpp	/^static struct Matrix_i* read_periodic (FILE* mesh_file, const int d)$/;"	f	file:
read_skip_b	general/file_processing.cpp	/^void read_skip_b (const char*const line, bool*const var)$/;"	f
read_skip_c	general/file_processing.cpp	/^void read_skip_c (const char*const line, char*const var)$/;"	f
read_skip_c_1	general/file_processing.cpp	/^void read_skip_c_1 (const char*const line, char*const var)$/;"	f
read_skip_c_2	general/file_processing.cpp	/^void read_skip_c_2 (const char*const line_i, const int n_skip, char**const var, const int n_var)$/;"	f
read_skip_const_b	general/file_processing.cpp	/^void read_skip_const_b (const char*const line, const bool*const var)$/;"	f
read_skip_const_c_1	general/file_processing.cpp	/^void read_skip_const_c_1 (const char*const line, const char*const var)$/;"	f
read_skip_const_d	general/file_processing.cpp	/^void read_skip_const_d (char*const line, const double*const var, const int n_skip, const bool remove_semi)$/;"	f
read_skip_const_d_1	general/file_processing.cpp	/^void read_skip_const_d_1 (char*const line_i, const int n_skip, const double*const var, const int n_var)$/;"	f
read_skip_const_i	general/file_processing.cpp	/^void read_skip_const_i (const char*const line, const int*const var)$/;"	f
read_skip_const_i_1	general/file_processing.cpp	/^void read_skip_const_i_1 (char*const line_i, const int n_skip, const int*const var, const int n_var)$/;"	f
read_skip_convert_const_i	general/file_processing_conversions.cpp	/^void read_skip_convert_const_i$/;"	f
read_skip_convert_i	general/file_processing_conversions.cpp	/^void read_skip_convert_i$/;"	f
read_skip_d	general/file_processing.cpp	/^void read_skip_d (char*const line, double*const var, const int n_skip, const bool remove_semi)$/;"	f
read_skip_d_1	general/file_processing.cpp	/^void read_skip_d_1 (char*const line_i, const int n_skip, double*const var, const int n_var)$/;"	f
read_skip_file_const_b	general/file_processing.cpp	/^void read_skip_file_const_b (const char*const var_name, FILE* file, const bool*const var)$/;"	f
read_skip_file_const_i	general/file_processing.cpp	/^void read_skip_file_const_i (const char*const var_name, FILE* file, const int*const var)$/;"	f
read_skip_file_i	general/file_processing.cpp	/^void read_skip_file_i (const char*const var_name, FILE* file, int*const var)$/;"	f
read_skip_i	general/file_processing.cpp	/^void read_skip_i (const char*const line, int*const var)$/;"	f
read_skip_i_1	general/file_processing.cpp	/^void read_skip_i_1 (char*const line_i, const int n_skip, int*const var, const int n_var)$/;"	f
read_skip_name_const_c_1	general/file_processing.cpp	/^void read_skip_name_const_c_1 (const char*const var_name, const char*const line, const char*const var)$/;"	f
read_skip_name_i	general/file_processing.cpp	/^void read_skip_name_i (const char*const var_name, const char*const line, int*const var)$/;"	f
read_skip_ptrdiff_1	general/file_processing.cpp	/^void read_skip_ptrdiff_1 (char*const line_i, const int n_skip, ptrdiff_t*const var, const int n_var)$/;"	f
read_skip_string_count_c_style_const_d	general/file_processing.cpp	/^void read_skip_string_count_c_style_const_d$/;"	f
read_skip_string_count_c_style_d	general/file_processing.cpp	/^void read_skip_string_count_c_style_d$/;"	f
read_skip_string_count_const_d	general/file_processing.cpp	/^void read_skip_string_count_const_d$/;"	f
read_skip_string_count_d	general/file_processing.cpp	/^void read_skip_string_count_d (const char*const str_search, int*const count, char*const line_i, double*const var)$/;"	f
read_skip_string_count_i	general/file_processing.cpp	/^void read_skip_string_count_i (const char*const str_search, int*const count, char*const line_i, int*const var)$/;"	f
read_sol_coef_bezier	simulation/test_case/solution/restart/def_templates_restart.h	42;"	d
read_sol_coef_bezier	simulation/test_case/solution/restart/def_templates_restart.h	69;"	d
read_sol_coef_bezier	simulation/test_case/solution/restart/restart_T.cpp	/^static void read_sol_coef_bezier (struct Solver_Volume_T*const s_vol, char* line)$/;"	f	file:
read_sol_coef_bezier	simulation/test_case/solution/restart/undef_templates_restart.h	39;"	d
read_test_case_parameters	simulation/test_case/def_templates_test_case.h	36;"	d
read_test_case_parameters	simulation/test_case/def_templates_test_case.h	60;"	d
read_test_case_parameters	simulation/test_case/test_case_T.cpp	/^static void read_test_case_parameters (struct Test_Case_T* test_case, const struct Simulation*const sim)$/;"	f	file:
read_test_case_parameters	simulation/test_case/undef_templates_test_case.h	34;"	d
real_T	general/def_templates_math_functions.h	24;"	d
real_T	general/def_templates_math_functions.h	56;"	d
real_T	general/undef_templates_math_functions.h	20;"	d
reinterpret_Matrix_as_Multiarray_T	containers/def_templates_multiarray_math.h	24;"	d
reinterpret_Matrix_as_Multiarray_T	containers/def_templates_multiarray_math.h	51;"	d
reinterpret_Matrix_as_Multiarray_T	containers/multiarray_math_T.cpp	/^static void reinterpret_Matrix_as_Multiarray_T$/;"	f	file:
reinterpret_Matrix_as_Multiarray_T	containers/undef_templates_multiarray_math.h	20;"	d
reinterpret_Multiarray_as_Matrix_T	containers/def_templates_multiarray_math.h	23;"	d
reinterpret_Multiarray_as_Matrix_T	containers/def_templates_multiarray_math.h	50;"	d
reinterpret_Multiarray_as_Matrix_T	containers/multiarray_math_T.cpp	/^static void reinterpret_Multiarray_as_Matrix_T$/;"	f	file:
reinterpret_Multiarray_as_Matrix_T	containers/undef_templates_multiarray_math.h	19;"	d
reinterpret_const_Matrix_T	containers/def_templates_matrix_math.h	46;"	d
reinterpret_const_Matrix_T	containers/def_templates_matrix_math.h	79;"	d
reinterpret_const_Matrix_T	containers/matrix_math_T.cpp	/^void reinterpret_const_Matrix_T (const struct const_Matrix_T* a, const ptrdiff_t ext_0, const ptrdiff_t ext_1)$/;"	f
reinterpret_const_Matrix_T	containers/undef_templates_matrix_math.h	41;"	d
reinterpret_const_Matrix_as_Multiarray_T	containers/def_templates_multiarray_math.h	42;"	d
reinterpret_const_Matrix_as_Multiarray_T	containers/def_templates_multiarray_math.h	69;"	d
reinterpret_const_Matrix_as_Multiarray_T	containers/multiarray_math_T.cpp	/^void reinterpret_const_Matrix_as_Multiarray_T$/;"	f
reinterpret_const_Matrix_as_Multiarray_T	containers/undef_templates_multiarray_math.h	38;"	d
reinterpret_const_Multiarray_as_Matrix_R	containers/def_templates_multiarray_math.h	80;"	d
reinterpret_const_Multiarray_as_Matrix_R	containers/undef_templates_multiarray_math.h	46;"	d
reinterpret_const_Multiarray_as_Matrix_T	containers/def_templates_multiarray_math.h	41;"	d
reinterpret_const_Multiarray_as_Matrix_T	containers/def_templates_multiarray_math.h	68;"	d
reinterpret_const_Multiarray_as_Matrix_T	containers/multiarray_math_T.cpp	/^void reinterpret_const_Multiarray_as_Matrix_T$/;"	f
reinterpret_const_Multiarray_as_Matrix_T	containers/undef_templates_multiarray_math.h	37;"	d
remove_absent_Elements	element/element.cpp	/^void remove_absent_Elements (const struct const_Intrusive_List* elements)$/;"	f
remove_col_Multiarray_T	containers/def_templates_multiarray.h	101;"	d
remove_col_Multiarray_T	containers/def_templates_multiarray.h	50;"	d
remove_col_Multiarray_T	containers/multiarray_T.cpp	/^void remove_col_Multiarray_T (const ptrdiff_t col, struct Multiarray_T* a)$/;"	f
remove_col_Multiarray_T	containers/undef_templates_multiarray.h	46;"	d
reorder_Multiarray_Vector_T	containers/def_templates_multiarray.h	170;"	d
reorder_Multiarray_Vector_T	containers/def_templates_multiarray.h	43;"	d
reorder_Multiarray_Vector_T	containers/def_templates_multiarray.h	94;"	d
reorder_Multiarray_Vector_T	containers/multiarray_T.cpp	/^void reorder_Multiarray_Vector_T (struct Multiarray_Vector_T*const a, const int*const ordering)$/;"	f
reorder_Multiarray_Vector_T	containers/undef_templates_multiarray.h	39;"	d
reorder_Vector_T	containers/def_templates_vector.h	108;"	d
reorder_Vector_T	containers/def_templates_vector.h	34;"	d
reorder_Vector_T	containers/def_templates_vector.h	65;"	d
reorder_Vector_T	containers/undef_templates_vector.h	28;"	d
reorder_Vector_T	containers/vector_T.cpp	/^void reorder_Vector_T (struct Vector_T*const a, const int*const ordering)$/;"	f
reorder_b_faces	simulation/mesh/mesh_connectivity.cpp	/^static void reorder_b_faces (struct Boundary_Face**const b_faces, struct Vector_i* ordering)$/;"	f	file:
reorder_nodes_gmsh	simulation/mesh/mesh_readers.cpp	/^void reorder_nodes_gmsh (const int elem_type, struct Vector_i* node_nums)$/;"	f
replace_IL	intrusive/intrusive.cpp	/^struct Intrusive_Link* replace_IL$/;"	f
required_unknowns	simulation/test_case/test_case_T.h	/^	const bool required_unknowns[MAX_N_UNKNOWNS];$/;"	m	struct:Test_Case_T
res	simulation/test_case/solution/restart/inverse_mapping.cpp	/^	double res[DIM];     \/\/\/< The residual terms.$/;"	m	struct:Newton	file:
reset_penalty_indicators_opg_T	simulation/solvers/opg/def_templates_penalty_opg.h	24;"	d
reset_penalty_indicators_opg_T	simulation/solvers/opg/def_templates_penalty_opg.h	32;"	d
reset_penalty_indicators_opg_T	simulation/solvers/opg/penalty_opg_T.cpp	/^void reset_penalty_indicators_opg_T (const struct Intrusive_List*const faces)$/;"	f
reset_penalty_indicators_opg_T	simulation/solvers/opg/undef_templates_penalty_opg.h	21;"	d
resize_Multiarray_R	containers/def_templates_multiarray.h	139;"	d
resize_Multiarray_R	containers/undef_templates_multiarray.h	81;"	d
resize_Multiarray_T	containers/def_templates_multiarray.h	110;"	d
resize_Multiarray_T	containers/def_templates_multiarray.h	185;"	d
resize_Multiarray_T	containers/def_templates_multiarray.h	59;"	d
resize_Multiarray_T	containers/multiarray_T.cpp	/^void resize_Multiarray_T (struct Multiarray_T* a, const int order, const ptrdiff_t* extents)$/;"	f
resize_Multiarray_T	containers/undef_templates_multiarray.h	55;"	d
resize_Vector_T	containers/def_templates_vector.h	109;"	d
resize_Vector_T	containers/def_templates_vector.h	35;"	d
resize_Vector_T	containers/def_templates_vector.h	66;"	d
resize_Vector_T	containers/undef_templates_vector.h	29;"	d
resize_Vector_T	containers/vector_T.cpp	/^void resize_Vector_T (struct Vector_T*const a, const ptrdiff_t ext_0)$/;"	f
return_data_path	processing/post/convert_data.py	/^	def return_data_path (self,ind):$/;"	m	class:Input_Info
reverse_entries	element/nodes_correspondence.cpp	/^static void reverse_entries (const int n, int* data)$/;"	f	file:
rho	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^	Real rho,   \/\/\/< Exact boundary density.$/;"	m	struct:Exact_Boundary_Data	file:
rho	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^	Real rho,   \/\/\/< The free stream density.$/;"	m	struct:Sol_Data__fs	file:
rho	simulation/test_case/solution/euler/solution_euler.cpp	/^	double rho,      \/\/\/< The free stream density.$/;"	m	struct:Sol_Data__c_dl	file:
rho_i	simulation/test_case/solution/euler/supersonic_vortex/solution_supersonic_vortex_T.cpp	/^	       rho_i; \/\/\/< The density (\\f$ rho \\f$) at the 'i'nternal cylinder face.$/;"	m	struct:Sol_Data__sv	file:
rho_inf	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^	       rho_inf,  \/\/\/< The reference density.$/;"	m	struct:Sol_Data__pv	file:
rho_inv	simulation/test_case/flux/flux_euler_T.cpp	/^	const Type rho_inv, \/\/\/< Inverse of density.$/;"	m	struct:Flux_Data_Euler	file:
rhouvw	simulation/test_case/flux/flux_euler_T.cpp	/^	const Type* rhouvw, \/\/\/< Array of momentum variables.$/;"	m	struct:Flux_Data_Euler	file:
rhs	simulation/solvers/volume_solver_T.h	/^	struct Multiarray_T* rhs;   \/\/\/< The rhs terms.$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::Multiarray_T
rhs	simulation/test_case/compute_error/compute_error.h	/^	struct Multiarray_d* rhs[2]; \/\/\/< Pointers to the computed and exact rhs data.$/;"	m	struct:Error_CE_Data	typeref:struct:Error_CE_Data::Multiarray_d
rhs_0	simulation/solvers/volume_solver_T.h	/^	struct Multiarray_T* rhs_0; \/\/\/< The rhs terms computed from the initial solution.$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::Multiarray_T
rhs_p	simulation/visualization/visualization.cpp	/^	const struct const_Multiarray_d* rhs_p;  \/\/\/< "rhs" at the 'p'lotting nodes.$/;"	m	struct:Volume_Data_Vis	typeref:struct:Volume_Data_Vis::const_Multiarray_d	file:
romberg	simulation/geometry/def_templates_geometry_parametric.h	34;"	d
romberg	simulation/geometry/def_templates_geometry_parametric.h	56;"	d
romberg	simulation/geometry/geometry_parametric_T.cpp	/^static Real romberg$/;"	f	file:
romberg	simulation/geometry/undef_templates_geometry_parametric.h	29;"	d
row	simulation/solvers/solve.h	/^	int row, \/\/\/< Index of the first row in which data is to be added.$/;"	m	struct:Solver_Storage_Implicit
row_index	containers/matrix_T.h	/^	const ptrdiff_t*const row_index;$/;"	m	struct:const_Matrix_CSR_T
row_index	containers/matrix_T.h	/^	ptrdiff_t* row_index; \/\/\/< Indices of the entries at the start of each row (`pointerB` on the intel mkl page).$/;"	m	struct:Matrix_CSR_T
row_sort_DIM_Matrix_d	containers/matrix.cpp	/^const struct const_Vector_i* row_sort_DIM_Matrix_d$/;"	f
rst	element/nodes.h	/^	const struct const_Matrix_d*const rst; \/\/\/< See brief.$/;"	m	struct:const_Nodes
rst	element/nodes.h	/^	struct Matrix_d* rst; \/\/\/< The reference element coordinates.$/;"	m	struct:Nodes	typeref:struct:Nodes::Matrix_d
rst_std	testing/unit/test_unit_inverse_mapping.cpp	/^	const struct const_Matrix_d* rst_std; \/\/\/< rst reference coordinates for the standard reference element.$/;"	m	struct:Inv_Map_Data	typeref:struct:Inv_Map_Data::const_Matrix_d	file:
run_convergence_order_study	testing/integration/test_integration_convergence_support.cpp	/^void run_convergence_order_study (int argc, char** argv, const int conv_study_type)$/;"	f
s	element/nodes.h	/^	const struct const_Vector_i* s; \/\/\/< See brief.$/;"	m	struct:const_Nodes	typeref:struct:const_Nodes::const_Vector_i
s	element/nodes.h	/^	struct Vector_i* s; \/\/\/< The node symmetries.$/;"	m	struct:Nodes	typeref:struct:Nodes::Vector_i
s	simulation/test_case/boundary/boundary_T.h	/^	const struct const_Multiarray_T* s; \/\/\/< The solution variables values on the boundary.$/;"	m	struct:Boundary_Value_T	typeref:struct:Boundary_Value_T::const_Multiarray_T
s	simulation/test_case/boundary/boundary_T.h	/^	const struct const_Multiarray_T* s; \/\/\/< The solution variables.$/;"	m	struct:Boundary_Value_Input_T	typeref:struct:Boundary_Value_Input_T::const_Multiarray_T
s	simulation/test_case/boundary/boundary_T.h	/^	struct Multiarray_T* s;     \/\/\/< See brief.$/;"	m	struct:mutable_Boundary_Value_T	typeref:struct:mutable_Boundary_Value_T::Multiarray_T
s	simulation/test_case/flux/flux_T.h	/^	const struct const_Multiarray_T* s;   \/\/\/< The solution variables.$/;"	m	struct:Flux_Input_T	typeref:struct:Flux_Input_T::const_Multiarray_T
s	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^	struct Node_ANN* s; \/\/\/< The pointer to the search node.$/;"	m	struct:SSS_c	typeref:struct:SSS_c::Node_ANN	file:
s	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^	const struct Node_ANN* s; \/\/\/< The search nodes.$/;"	m	struct:SSS_ANN	typeref:struct:SSS_ANN::Node_ANN
s_coef	simulation/solvers/face_solver_T.h	/^	struct Multiarray_T* s_coef;  \/\/\/< The coefficients of the solution in the \\ref Simulation::basis_sol.$/;"	m	struct:Solver_Face_T	typeref:struct:Solver_Face_T::Multiarray_T
s_e	simulation/solvers/element_solver.h	/^	const struct Solution_Element   s_e; \/\/\/< \\ref Solution_Element.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Solution_Element
s_face	simulation/test_case/compute_error/compute_error.h	/^	const struct Solver_Face* s_face; \/\/\/< Pointer to the \\ref Solver_Face_T (if applicable).$/;"	m	struct:Error_CE_Helper	typeref:struct:Error_CE_Helper::Solver_Face
s_offset	simulation/geometry/geometry_parametric_T.cpp	/^	     s_offset; \/\/\/< The offset for the reference domain 's'-coordinate.$/;"	m	struct:Geo_Data	file:
s_type	element/element.cpp	/^	int s_type,  \/\/\/< Defined in \\ref Element.$/;"	m	struct:Elem_info	file:
s_type	element/element.h	/^	          s_type, \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
s_type	element/element.h	/^	    s_type, \/\/\/< The element super type. Options: Tensor-Product, SImplex, PYRamid, WEDGE.$/;"	m	struct:Element
s_type	element/element_operators.h	/^	const int s_type; \/\/\/< \\ref Element::s_type.$/;"	m	struct:Op_IO
s_type	element/element_operators_tp.cpp	/^	const int s_type; \/\/\/< The \\ref Element::s_type for which the operator is being constructed.$/;"	m	struct:Sub_Operator_Info	file:
s_type	simulation/geometry/geometry_blended_T.h	/^	int s_type; \/\/\/< \\ref Element::s_type.$/;"	m	struct:Boundary_Comp_Elem_Data_T
s_type	simulation/test_case/solution/restart/inverse_mapping.cpp	/^	int s_type; \/\/\/< \\ref Element::s_type.$/;"	m	struct:Inv_Map	file:
s_vol	simulation/test_case/compute_error/compute_error.h	/^	struct Solver_Volume* s_vol[2];   \/\/\/< Pointers to the computed and exact \\ref Solver_Volume_T\\*s.$/;"	m	struct:Error_CE_Helper	typeref:struct:Error_CE_Helper::Solver_Volume
sc	element/element_operators.h	/^	           sc;   \/\/\/< Indication of straight\/curved.$/;"	m	struct:Op_IO
scale	simulation/geometry/geometry_parametric.h	/^	double scale; \/\/\/< Scaling parameter$/;"	m	struct:Function_Data_GP
scale	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^	Real scale; \/\/\/< The scale used in the definition of the solution.$/;"	m	struct:Sol_Data__dd	file:
scale_Matrix_R	containers/def_templates_matrix_math.h	89;"	d
scale_Matrix_R	containers/undef_templates_matrix_math.h	47;"	d
scale_Matrix_R_by_Vector_R	containers/def_templates_matrix_math.h	93;"	d
scale_Matrix_R_by_Vector_R	containers/undef_templates_matrix_math.h	51;"	d
scale_Matrix_T	containers/def_templates_matrix_math.h	34;"	d
scale_Matrix_T	containers/def_templates_matrix_math.h	67;"	d
scale_Matrix_T	containers/matrix_math_T.cpp	/^void scale_Matrix_T (struct Matrix_T* a, const Type val)$/;"	f
scale_Matrix_T	containers/undef_templates_matrix_math.h	29;"	d
scale_Matrix_T_by_Vector_R	containers/def_templates_matrix_math.h	43;"	d
scale_Matrix_T_by_Vector_R	containers/def_templates_matrix_math.h	76;"	d
scale_Matrix_T_by_Vector_R	containers/matrix_math_T.cpp	/^void scale_Matrix_T_by_Vector_R$/;"	f
scale_Matrix_T_by_Vector_R	containers/undef_templates_matrix_math.h	38;"	d
scale_Matrix_by_Vector_T	containers/def_templates_matrix_math.h	44;"	d
scale_Matrix_by_Vector_T	containers/def_templates_matrix_math.h	77;"	d
scale_Matrix_by_Vector_T	containers/matrix_math_T.cpp	/^void scale_Matrix_by_Vector_T$/;"	f
scale_Matrix_by_Vector_T	containers/undef_templates_matrix_math.h	39;"	d
scale_Multiarray_T	containers/def_templates_multiarray_math.h	27;"	d
scale_Multiarray_T	containers/def_templates_multiarray_math.h	54;"	d
scale_Multiarray_T	containers/multiarray_math_T.cpp	/^void scale_Multiarray_T (struct Multiarray_T* a, const Type val)$/;"	f
scale_Multiarray_T	containers/undef_templates_multiarray_math.h	23;"	d
scale_Multiarray_T_by_Vector_R	containers/def_templates_multiarray_math.h	31;"	d
scale_Multiarray_T_by_Vector_R	containers/def_templates_multiarray_math.h	58;"	d
scale_Multiarray_T_by_Vector_R	containers/multiarray_math_T.cpp	/^void scale_Multiarray_T_by_Vector_R$/;"	f
scale_Multiarray_T_by_Vector_R	containers/undef_templates_multiarray_math.h	27;"	d
scale_Multiarray_by_Vector_T	containers/def_templates_multiarray_math.h	32;"	d
scale_Multiarray_by_Vector_T	containers/def_templates_multiarray_math.h	59;"	d
scale_Multiarray_by_Vector_T	containers/multiarray_math_T.cpp	/^void scale_Multiarray_by_Vector_T$/;"	f
scale_Multiarray_by_Vector_T	containers/undef_templates_multiarray_math.h	28;"	d
scale_by_Jacobian	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^	scale_by_Jacobian_fptr_T scale_by_Jacobian; \/\/\/< Pointer to the appropriate function.$/;"	m	struct:S_Params_T	file:
scale_by_Jacobian	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static void scale_by_Jacobian (const struct Numerical_Flux_T* num_flux, const struct Solver_Face_T* s_face)$/;"	f	file:
scale_by_Jacobian	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	42;"	d
scale_by_Jacobian	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	84;"	d
scale_by_Jacobian	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	37;"	d
scale_by_Jacobian	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	38;"	d
scale_by_Jacobian	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^	scale_by_Jacobian_fptr_T scale_by_Jacobian; \/\/\/< Pointer to the appropriate function.$/;"	m	struct:S_Params_f_T	file:
scale_by_Jacobian_dnnf_dg	simulation/solvers/compute_face_rlhs.cpp	/^static void scale_by_Jacobian_dnnf_dg (struct Numerical_Flux*const num_flux, const struct Solver_Face*const s_face)$/;"	f	file:
scale_by_Jacobian_dnnf_ds	simulation/solvers/compute_face_rlhs.cpp	/^static void scale_by_Jacobian_dnnf_ds (struct Numerical_Flux*const num_flux, const struct Solver_Face*const s_face)$/;"	f	file:
scale_by_Jacobian_e_T	simulation/solvers/compute_face_rlhs_T.cpp	/^void scale_by_Jacobian_e_T$/;"	f
scale_by_Jacobian_e_T	simulation/solvers/def_templates_compute_face_rlhs.h	43;"	d
scale_by_Jacobian_e_T	simulation/solvers/def_templates_compute_face_rlhs.h	74;"	d
scale_by_Jacobian_e_T	simulation/solvers/undef_templates_compute_face_rlhs.h	40;"	d
scale_by_Jacobian_fptr_T	simulation/solvers/compute_face_rlhs_T.h	/^typedef void (*scale_by_Jacobian_fptr_T)$/;"	t
scale_by_Jacobian_fptr_T	simulation/solvers/def_templates_compute_face_rlhs.h	22;"	d
scale_by_Jacobian_fptr_T	simulation/solvers/def_templates_compute_face_rlhs.h	53;"	d
scale_by_Jacobian_fptr_T	simulation/solvers/undef_templates_compute_face_rlhs.h	20;"	d
scale_by_Jacobian_i1	simulation/solvers/compute_face_rlhs.cpp	/^void scale_by_Jacobian_i1 (struct Numerical_Flux*const num_flux, const struct Solver_Face*const s_face)$/;"	f
scale_by_Jacobian_i12	simulation/solvers/compute_face_rlhs.cpp	/^void scale_by_Jacobian_i12 (struct Numerical_Flux*const num_flux, const struct Solver_Face*const s_face)$/;"	f
scale_by_Jacobian_i2	simulation/solvers/compute_face_rlhs.cpp	/^void scale_by_Jacobian_i2 (struct Numerical_Flux*const num_flux, const struct Solver_Face*const s_face)$/;"	f
scale_by_Jacobian_nnf	simulation/solvers/compute_face_rlhs.cpp	/^static void scale_by_Jacobian_nnf (struct Numerical_Flux*const num_flux, const struct Solver_Face*const s_face)$/;"	f	file:
scale_const_Matrix_by_Vector_d	testing/support/containers/test_support_matrix.cpp	/^void scale_const_Matrix_by_Vector_d$/;"	f
scale_rhs_by_m_inv	simulation/solvers/dg/solve_dg.cpp	/^static void scale_rhs_by_m_inv (const struct Simulation*const sim)$/;"	f	file:
scale_rhs_by_m_inv_col	simulation/solvers/dg/solve_dg.cpp	/^static void scale_rhs_by_m_inv_col (const struct Simulation*const sim)$/;"	f	file:
scale_rhs_by_m_inv_std	simulation/solvers/dg/solve_dg.cpp	/^static void scale_rhs_by_m_inv_std (const struct Simulation*const sim)$/;"	f	file:
set_Boundary_Comp_Elem_operators_T	simulation/geometry/def_templates_geometry_blended.h	30;"	d
set_Boundary_Comp_Elem_operators_T	simulation/geometry/def_templates_geometry_blended.h	53;"	d
set_Boundary_Comp_Elem_operators_T	simulation/geometry/geometry_blended_T.cpp	/^void set_Boundary_Comp_Elem_operators_T$/;"	f
set_Boundary_Comp_Elem_operators_T	simulation/geometry/undef_templates_geometry_blended.h	25;"	d
set_Exact_Boundary_Data	simulation/test_case/boundary/boundary_navier_stokes_T.cpp	/^static void set_Exact_Boundary_Data$/;"	f	file:
set_Exact_Boundary_Data	simulation/test_case/boundary/def_templates_boundary.h	144;"	d
set_Exact_Boundary_Data	simulation/test_case/boundary/def_templates_boundary.h	77;"	d
set_Exact_Boundary_Data	simulation/test_case/boundary/undef_templates_boundary.h	78;"	d
set_IL_Info	testing/support/intrusive/test_support_intrusive.cpp	/^struct IL_Info set_IL_Info (const char*const list_name)$/;"	f
set_MO_from_MO	simulation/operators/multiarray_operator.cpp	/^struct Multiarray_Operator set_MO_from_MO$/;"	f
set_Matrix_from_Multiarray_Matrix_T	containers/def_templates_matrix_constructors.h	155;"	d
set_Matrix_from_Multiarray_Matrix_T	containers/def_templates_matrix_constructors.h	221;"	d
set_Matrix_from_Multiarray_Matrix_T	containers/def_templates_matrix_constructors.h	83;"	d
set_Matrix_from_Multiarray_Matrix_T	containers/matrix_constructors_T.cpp	/^void set_Matrix_from_Multiarray_Matrix_T$/;"	f
set_Matrix_from_Multiarray_Matrix_T	containers/undef_templates_matrix_constructors.h	79;"	d
set_Matrix_from_Multiarray_T	containers/def_templates_matrix_constructors.h	153;"	d
set_Matrix_from_Multiarray_T	containers/def_templates_matrix_constructors.h	219;"	d
set_Matrix_from_Multiarray_T	containers/def_templates_matrix_constructors.h	81;"	d
set_Matrix_from_Multiarray_T	containers/matrix_constructors_T.cpp	/^void set_Matrix_from_Multiarray_T (struct Matrix_T* dest, struct Multiarray_T* src, const ptrdiff_t*const sub_indices)$/;"	f
set_Matrix_from_Multiarray_T	containers/undef_templates_matrix_constructors.h	77;"	d
set_Mesh_Input	simulation/simulation.cpp	/^struct Mesh_Input set_Mesh_Input (const struct Simulation*const sim)$/;"	f
set_Mesh_Input_no_sim	testing/integration/test_integration_mesh.cpp	/^static void set_Mesh_Input_no_sim$/;"	f	file:
set_Multiarray_Matrix_from_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	133;"	d
set_Multiarray_Matrix_from_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	66;"	d
set_Multiarray_Matrix_from_Multiarray_Matrix_T	containers/multiarray_constructors_T.cpp	/^void set_Multiarray_Matrix_from_Multiarray_Matrix_T$/;"	f
set_Multiarray_Matrix_from_Multiarray_Matrix_T	containers/undef_templates_multiarray_constructors.h	62;"	d
set_Multiarray_R	containers/def_templates_multiarray.h	137;"	d
set_Multiarray_R	containers/undef_templates_multiarray.h	79;"	d
set_Multiarray_T	containers/def_templates_multiarray.h	104;"	d
set_Multiarray_T	containers/def_templates_multiarray.h	179;"	d
set_Multiarray_T	containers/def_templates_multiarray.h	53;"	d
set_Multiarray_T	containers/multiarray_T.cpp	/^void set_Multiarray_T (struct Multiarray_T* a_o, const struct const_Multiarray_T* a_i)$/;"	f
set_Multiarray_T	containers/undef_templates_multiarray.h	49;"	d
set_Multiarray_T_Multiarray_R	containers/def_templates_multiarray.h	105;"	d
set_Multiarray_T_Multiarray_R	containers/def_templates_multiarray.h	180;"	d
set_Multiarray_T_Multiarray_R	containers/def_templates_multiarray.h	54;"	d
set_Multiarray_T_Multiarray_R	containers/multiarray_T.cpp	/^void set_Multiarray_T_Multiarray_R (struct Multiarray_T* a, const struct const_Multiarray_R* b)$/;"	f
set_Multiarray_T_Multiarray_R	containers/undef_templates_multiarray.h	50;"	d
set_Multiarray_Vector_T_T	containers/def_templates_multiarray.h	103;"	d
set_Multiarray_Vector_T_T	containers/def_templates_multiarray.h	178;"	d
set_Multiarray_Vector_T_T	containers/def_templates_multiarray.h	52;"	d
set_Multiarray_Vector_T_T	containers/multiarray_T.cpp	/^void set_Multiarray_Vector_T_T$/;"	f
set_Multiarray_Vector_T_T	containers/undef_templates_multiarray.h	48;"	d
set_Neigh_Info_Face_i_new	simulation/solvers/adaptation/adaptation.cpp	/^static void set_Neigh_Info_Face_i_new$/;"	f	file:
set_Numerical_Flux_Energy_member	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	143;"	d
set_Numerical_Flux_Energy_member	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	79;"	d
set_Numerical_Flux_Energy_member	simulation/solvers/numerical_flux/numerical_flux_central_T.cpp	/^static void set_Numerical_Flux_Energy_member$/;"	f	file:
set_Numerical_Flux_Energy_member	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	76;"	d
set_Numerical_Flux_member	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	138;"	d
set_Numerical_Flux_member	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	74;"	d
set_Numerical_Flux_member	simulation/solvers/numerical_flux/numerical_flux_central_T.cpp	/^static void set_Numerical_Flux_member$/;"	f	file:
set_Numerical_Flux_member	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	71;"	d
set_S_Params_Volume_Structor_T	simulation/solvers/compute_volume_rlhs_T.cpp	/^void set_S_Params_Volume_Structor_T (struct S_Params_Volume_Structor_T* spvs, const struct Simulation* sim)$/;"	f
set_S_Params_Volume_Structor_T	simulation/solvers/def_templates_compute_volume_rlhs.h	33;"	d
set_S_Params_Volume_Structor_T	simulation/solvers/def_templates_compute_volume_rlhs.h	69;"	d
set_S_Params_Volume_Structor_T	simulation/solvers/undef_templates_compute_volume_rlhs.h	32;"	d
set_Simulation_elements	simulation/simulation.cpp	/^void set_Simulation_elements (struct Simulation*const sim, struct const_Intrusive_List* elements)$/;"	f
set_Solver_Volume_exact	simulation/test_case/compute_error/compute_error.cpp	/^static void set_Solver_Volume_exact (struct Solver_Volume* s_vol_ex, struct Solver_Volume* s_vol)$/;"	f	file:
set_Vector_from_Matrix_T	containers/def_templates_vector_constructors.h	120;"	d
set_Vector_from_Matrix_T	containers/def_templates_vector_constructors.h	62;"	d
set_Vector_from_Matrix_T	containers/undef_templates_vector_constructors.h	59;"	d
set_Vector_from_Matrix_T	containers/vector_constructors_T.cpp	/^void set_Vector_from_Matrix_T (struct Vector_T* dest, struct Matrix_T* src, const ptrdiff_t*const sub_indices)$/;"	f
set_Vector_from_Multiarray_T	containers/def_templates_vector_constructors.h	122;"	d
set_Vector_from_Multiarray_T	containers/def_templates_vector_constructors.h	64;"	d
set_Vector_from_Multiarray_T	containers/undef_templates_vector_constructors.h	61;"	d
set_Vector_from_Multiarray_T	containers/vector_constructors_T.cpp	/^void set_Vector_from_Multiarray_T (struct Vector_T* dest, struct Multiarray_T* src, const ptrdiff_t*const sub_indices)$/;"	f
set_bf_info	simulation/mesh/mesh_connectivity.cpp	/^static void set_bf_info$/;"	f	file:
set_block_Matrix_R	containers/def_templates_matrix.h	125;"	d
set_block_Matrix_R	containers/undef_templates_matrix.h	72;"	d
set_block_Matrix_R_cmplx_step	containers/def_templates_matrix.h	103;"	d
set_block_Matrix_R_cmplx_step	containers/matrix_T.cpp	/^void set_block_Matrix_R_cmplx_step$/;"	f
set_block_Matrix_R_cmplx_step	containers/undef_templates_matrix.h	52;"	d
set_block_Matrix_T	containers/def_templates_matrix.h	100;"	d
set_block_Matrix_T	containers/def_templates_matrix.h	170;"	d
set_block_Matrix_T	containers/def_templates_matrix.h	59;"	d
set_block_Matrix_T	containers/matrix_T.cpp	/^void set_block_Matrix_T$/;"	f
set_block_Matrix_T	containers/undef_templates_matrix.h	50;"	d
set_block_Matrix_T_R	containers/def_templates_matrix.h	101;"	d
set_block_Matrix_T_R	containers/def_templates_matrix.h	171;"	d
set_block_Matrix_T_R	containers/def_templates_matrix.h	60;"	d
set_block_Matrix_T_R	containers/matrix_T.cpp	/^void set_block_Matrix_T_R$/;"	f
set_block_Matrix_T_R	containers/undef_templates_matrix.h	51;"	d
set_col_Matrix_T	containers/def_templates_matrix.h	166;"	d
set_col_Matrix_T	containers/def_templates_matrix.h	55;"	d
set_col_Matrix_T	containers/def_templates_matrix.h	96;"	d
set_col_Matrix_T	containers/matrix_T.cpp	/^void set_col_Matrix_T (const ptrdiff_t col, struct Matrix_T* dest, const Type*const data_src)$/;"	f
set_col_Matrix_T	containers/undef_templates_matrix.h	46;"	d
set_col_lhs_cmplx_step_dg	testing/support/simulation/solvers/dg/test_support_solve_dg.cpp	/^static void set_col_lhs_cmplx_step_dg$/;"	f	file:
set_col_lhs_cmplx_step_opg	testing/support/simulation/solvers/opg/test_support_solve_opg.cpp	/^static void set_col_lhs_cmplx_step_opg$/;"	f	file:
set_col_to_val_Matrix_T	containers/def_templates_matrix.h	168;"	d
set_col_to_val_Matrix_T	containers/def_templates_matrix.h	57;"	d
set_col_to_val_Matrix_T	containers/def_templates_matrix.h	98;"	d
set_col_to_val_Matrix_T	containers/matrix_T.cpp	/^void set_col_to_val_Matrix_T (const ptrdiff_t col, struct Matrix_T* dest, const Type data_src)$/;"	f
set_col_to_val_Matrix_T	containers/undef_templates_matrix.h	48;"	d
set_const_Matrix_from_Multiarray_Matrix_T	containers/def_templates_matrix_constructors.h	156;"	d
set_const_Matrix_from_Multiarray_Matrix_T	containers/def_templates_matrix_constructors.h	222;"	d
set_const_Matrix_from_Multiarray_Matrix_T	containers/def_templates_matrix_constructors.h	84;"	d
set_const_Matrix_from_Multiarray_Matrix_T	containers/matrix_constructors_T.cpp	/^void set_const_Matrix_from_Multiarray_Matrix_T$/;"	f
set_const_Matrix_from_Multiarray_Matrix_T	containers/undef_templates_matrix_constructors.h	80;"	d
set_const_Matrix_from_Multiarray_T	containers/def_templates_matrix_constructors.h	154;"	d
set_const_Matrix_from_Multiarray_T	containers/def_templates_matrix_constructors.h	220;"	d
set_const_Matrix_from_Multiarray_T	containers/def_templates_matrix_constructors.h	82;"	d
set_const_Matrix_from_Multiarray_T	containers/matrix_constructors_T.cpp	/^void set_const_Matrix_from_Multiarray_T$/;"	f
set_const_Matrix_from_Multiarray_T	containers/undef_templates_matrix_constructors.h	78;"	d
set_const_Multiarray_Matrix_from_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	134;"	d
set_const_Multiarray_Matrix_from_Multiarray_Matrix_T	containers/def_templates_multiarray_constructors.h	67;"	d
set_const_Multiarray_Matrix_from_Multiarray_Matrix_T	containers/multiarray_constructors_T.cpp	/^void set_const_Multiarray_Matrix_from_Multiarray_Matrix_T$/;"	f
set_const_Multiarray_Matrix_from_Multiarray_Matrix_T	containers/undef_templates_multiarray_constructors.h	63;"	d
set_const_Vector_from_Matrix_T	containers/def_templates_vector_constructors.h	121;"	d
set_const_Vector_from_Matrix_T	containers/def_templates_vector_constructors.h	63;"	d
set_const_Vector_from_Matrix_T	containers/undef_templates_vector_constructors.h	60;"	d
set_const_Vector_from_Matrix_T	containers/vector_constructors_T.cpp	/^void set_const_Vector_from_Matrix_T$/;"	f
set_const_Vector_from_Multiarray_T	containers/def_templates_vector_constructors.h	123;"	d
set_const_Vector_from_Multiarray_T	containers/def_templates_vector_constructors.h	65;"	d
set_const_Vector_from_Multiarray_T	containers/undef_templates_vector_constructors.h	62;"	d
set_const_Vector_from_Multiarray_T	containers/vector_constructors_T.cpp	/^void set_const_Vector_from_Multiarray_T$/;"	f
set_constructor_xyz_surface_fptr_T	simulation/geometry/def_templates_geometry_surface.h	26;"	d
set_constructor_xyz_surface_fptr_T	simulation/geometry/def_templates_geometry_surface.h	45;"	d
set_constructor_xyz_surface_fptr_T	simulation/geometry/geometry_surface_T.cpp	/^constructor_xyz_surface_fptr_T set_constructor_xyz_surface_fptr_T$/;"	f
set_constructor_xyz_surface_fptr_T	simulation/geometry/undef_templates_geometry_surface.h	21;"	d
set_convergence_order_discount	testing/integration/test_integration_convergence_support.cpp	/^static void set_convergence_order_discount (struct Integration_Test_Info*const int_test_info)$/;"	f	file:
set_convergence_order_inf_sup_accept	testing/integration/test_integration_inf_sup.cpp	/^static void set_convergence_order_inf_sup_accept (struct Integration_Test_Info*const int_test_info)$/;"	f	file:
set_correct_for_exact_normal_fptr_T	simulation/geometry/def_templates_geometry_normals.h	26;"	d
set_correct_for_exact_normal_fptr_T	simulation/geometry/def_templates_geometry_normals.h	42;"	d
set_correct_for_exact_normal_fptr_T	simulation/geometry/geometry_normals_T.cpp	/^correct_for_exact_normal_fptr_T set_correct_for_exact_normal_fptr_T (const struct Simulation*const sim)$/;"	f
set_correct_for_exact_normal_fptr_T	simulation/geometry/undef_templates_geometry_normals.h	21;"	d
set_ctrl_name_full	simulation/simulation.cpp	/^const char* set_ctrl_name_full (const char*const ctrl_name)$/;"	f
set_current_op_io	element/element_operators.cpp	/^static void set_current_op_io (const struct Operator_Info* op_info, const int* op_values)$/;"	f	file:
set_data_file_name_integration	testing/test_base.cpp	/^const char* set_data_file_name_integration (const char*const ctrl_name, const char*const int_test_type)$/;"	f
set_data_file_name_unit	testing/test_base.cpp	/^const char* set_data_file_name_unit (const char*const file_name_spec)$/;"	f
set_data_periodic_vortex	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	33;"	d
set_data_periodic_vortex	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	49;"	d
set_data_periodic_vortex	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^static void set_data_periodic_vortex (struct Sol_Data__pv*const sol_data)$/;"	f	file:
set_data_periodic_vortex	simulation/test_case/solution/euler/periodic_vortex/undef_templates_solution_periodic_vortex.h	29;"	d
set_data_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	35;"	d
set_data_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	53;"	d
set_data_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^static void set_data_taylor_couette (struct Sol_Data__tc*const sol_data)$/;"	f	file:
set_data_taylor_couette	simulation/test_case/solution/navier_stokes/taylor_couette/undef_templates_solution_taylor_couette.h	30;"	d
set_domain_type	simulation/simulation.cpp	/^static void set_domain_type (struct Simulation*const sim, const struct Mesh_Ctrl_Data*const mesh_ctrl_data)$/;"	f	file:
set_edge_elements	element/element.cpp	/^static void set_edge_elements (struct Intrusive_List* elements)$/;"	f	file:
set_element_pointers	element/element.cpp	/^void set_element_pointers (struct Intrusive_List*const elements)$/;"	f
set_element_present	element/element.cpp	/^void set_element_present (const int e_type, const struct const_Intrusive_List* elements)$/;"	f
set_elements_present	element/element.cpp	/^void set_elements_present (const struct const_Intrusive_List* elements, const struct const_Vector_i*const elem_types)$/;"	f
set_exact_f_nf_fc	simulation/test_case/solution/def_templates_solution.h	114;"	d
set_exact_f_nf_fc	simulation/test_case/solution/def_templates_solution.h	55;"	d
set_exact_f_nf_fc	simulation/test_case/solution/solution_T.cpp	/^static void set_exact_f_nf_fc (struct Simulation* sim)$/;"	f	file:
set_exact_f_nf_fc	simulation/test_case/solution/undef_templates_solution.h	57;"	d
set_exact_normal_flux	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static void set_exact_normal_flux$/;"	f	file:
set_exact_normal_flux	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	50;"	d
set_exact_normal_flux	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	92;"	d
set_exact_normal_flux	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	45;"	d
set_exact_normal_flux	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	45;"	d
set_f_node_nums	simulation/mesh/mesh_connectivity.cpp	/^void set_f_node_nums (struct Vector_i**const f_node_nums, const struct const_Vector_i*const node_nums)$/;"	f
set_face_adapt_type	simulation/solvers/adaptation/adaptation.cpp	/^static void set_face_adapt_type (struct Adaptive_Solver_Face* a_s_face)$/;"	f	file:
set_face_elements	element/element.cpp	/^static void set_face_elements (struct Intrusive_List* elements)$/;"	f	file:
set_file_name_base	testing/test_base.cpp	/^static char* set_file_name_base (const char*const test_type)$/;"	f	file:
set_file_name_curr	testing/integration/test_integration.cpp	/^const char* set_file_name_curr$/;"	f
set_fptr_geom_coef_T	simulation/geometry/def_templates_geometry.h	44;"	d
set_fptr_geom_coef_T	simulation/geometry/def_templates_geometry.h	87;"	d
set_fptr_geom_coef_T	simulation/geometry/geometry_T.cpp	/^static compute_geom_coef_fptr_T set_fptr_geom_coef_T (const int domain_type, const bool volume_curved)$/;"	f	file:
set_fptr_geom_coef_T	simulation/geometry/undef_templates_geometry.h	38;"	d
set_fptr_mesh_snap	simulation/mesh/mesh_vertices.cpp	/^static mesh_snap_to_boundary_fptr set_fptr_mesh_snap (const char*const geom_name)$/;"	f	file:
set_function_pointers	simulation/test_case/def_templates_test_case.h	35;"	d
set_function_pointers	simulation/test_case/def_templates_test_case.h	59;"	d
set_function_pointers	simulation/test_case/test_case_T.cpp	/^static void set_function_pointers (struct Test_Case_T* test_case, const struct Simulation*const sim)$/;"	f	file:
set_function_pointers	simulation/test_case/undef_templates_test_case.h	33;"	d
set_function_pointers_constructor_xyz_surface	simulation/solvers/def_templates_volume_solver.h	44;"	d
set_function_pointers_constructor_xyz_surface	simulation/solvers/def_templates_volume_solver.h	71;"	d
set_function_pointers_constructor_xyz_surface	simulation/solvers/undef_templates_solver.h	32;"	d
set_function_pointers_constructor_xyz_surface	simulation/solvers/undef_templates_volume_solver.h	41;"	d
set_function_pointers_constructor_xyz_surface	simulation/solvers/volume_solver_T.cpp	/^static void set_function_pointers_constructor_xyz_surface$/;"	f	file:
set_function_pointers_face_num_flux_T	simulation/solvers/def_templates_face_solver.h	29;"	d
set_function_pointers_face_num_flux_T	simulation/solvers/def_templates_face_solver.h	52;"	d
set_function_pointers_face_num_flux_T	simulation/solvers/face_solver_T.cpp	/^void set_function_pointers_face_num_flux_T (struct Solver_Face_T* s_face, const struct Simulation* sim)$/;"	f
set_function_pointers_face_num_flux_T	simulation/solvers/undef_templates_face_solver.h	26;"	d
set_function_pointers_num_flux	simulation/test_case/solution/diffusion/def_templates_solution_diffusion.h	29;"	d
set_function_pointers_num_flux	simulation/test_case/solution/diffusion/def_templates_solution_diffusion.h	39;"	d
set_function_pointers_num_flux	simulation/test_case/solution/diffusion/solution_diffusion_T.cpp	/^static void set_function_pointers_num_flux (struct Test_Case_T* test_case, const struct Simulation*const sim)$/;"	f	file:
set_function_pointers_num_flux	simulation/test_case/solution/diffusion/undef_templates_solution_diffusion.h	24;"	d
set_function_pointers_num_flux	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	38;"	d
set_function_pointers_num_flux	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	57;"	d
set_function_pointers_num_flux	simulation/test_case/solution/navier_stokes/solution_navier_stokes_T.cpp	/^static void set_function_pointers_num_flux (struct Test_Case_T* test_case, const struct Simulation*const sim)$/;"	f	file:
set_function_pointers_num_flux	simulation/test_case/solution/navier_stokes/undef_templates_solution_navier_stokes.h	31;"	d
set_function_pointers_num_flux_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	40;"	d
set_function_pointers_num_flux_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	57;"	d
set_function_pointers_num_flux_T	simulation/test_case/solution/advection/solution_advection_T.cpp	/^static void set_function_pointers_num_flux_T (struct Test_Case_T* test_case, const struct Simulation*const sim)$/;"	f	file:
set_function_pointers_num_flux_T	simulation/test_case/solution/advection/undef_templates_solution_advection.h	36;"	d
set_function_pointers_num_flux_bc	simulation/solvers/def_templates_face_solver.h	36;"	d
set_function_pointers_num_flux_bc	simulation/solvers/def_templates_face_solver.h	59;"	d
set_function_pointers_num_flux_bc	simulation/solvers/face_solver_T.cpp	/^static void set_function_pointers_num_flux_bc (struct Solver_Face_T* s_face, const struct Simulation* sim)$/;"	f	file:
set_function_pointers_num_flux_bc	simulation/solvers/undef_templates_face_solver.h	32;"	d
set_function_pointers_num_flux_bc_advection	simulation/solvers/def_templates_face_solver.h	37;"	d
set_function_pointers_num_flux_bc_advection	simulation/solvers/def_templates_face_solver.h	60;"	d
set_function_pointers_num_flux_bc_advection	simulation/solvers/face_solver_T.cpp	/^static void set_function_pointers_num_flux_bc_advection (struct Solver_Face_T* s_face)$/;"	f	file:
set_function_pointers_num_flux_bc_advection	simulation/solvers/undef_templates_face_solver.h	33;"	d
set_function_pointers_num_flux_bc_diffusion	simulation/solvers/def_templates_face_solver.h	38;"	d
set_function_pointers_num_flux_bc_diffusion	simulation/solvers/def_templates_face_solver.h	61;"	d
set_function_pointers_num_flux_bc_diffusion	simulation/solvers/face_solver_T.cpp	/^static void set_function_pointers_num_flux_bc_diffusion (struct Solver_Face_T* s_face)$/;"	f	file:
set_function_pointers_num_flux_bc_diffusion	simulation/solvers/undef_templates_face_solver.h	34;"	d
set_function_pointers_num_flux_bc_euler	simulation/solvers/def_templates_face_solver.h	39;"	d
set_function_pointers_num_flux_bc_euler	simulation/solvers/def_templates_face_solver.h	62;"	d
set_function_pointers_num_flux_bc_euler	simulation/solvers/face_solver_T.cpp	/^static void set_function_pointers_num_flux_bc_euler (struct Solver_Face_T* s_face)$/;"	f	file:
set_function_pointers_num_flux_bc_euler	simulation/solvers/undef_templates_face_solver.h	35;"	d
set_function_pointers_num_flux_bc_navier_stokes	simulation/solvers/def_templates_face_solver.h	40;"	d
set_function_pointers_num_flux_bc_navier_stokes	simulation/solvers/def_templates_face_solver.h	63;"	d
set_function_pointers_num_flux_bc_navier_stokes	simulation/solvers/face_solver_T.cpp	/^static void set_function_pointers_num_flux_bc_navier_stokes (struct Solver_Face_T* s_face)$/;"	f	file:
set_function_pointers_num_flux_bc_navier_stokes	simulation/solvers/undef_templates_face_solver.h	36;"	d
set_function_pointers_penalty_T	simulation/solvers/opg/def_templates_face_solver_opg.h	41;"	d
set_function_pointers_penalty_T	simulation/solvers/opg/def_templates_face_solver_opg.h	65;"	d
set_function_pointers_penalty_T	simulation/solvers/opg/face_solver_opg_T.cpp	/^static void set_function_pointers_penalty_T (struct OPG_Solver_Face_T*const opg_s_face)$/;"	f	file:
set_function_pointers_penalty_T	simulation/solvers/opg/undef_templates_face_solver_opg.h	36;"	d
set_function_pointers_penalty_boundary_T	simulation/solvers/opg/def_templates_face_solver_opg.h	42;"	d
set_function_pointers_penalty_boundary_T	simulation/solvers/opg/def_templates_face_solver_opg.h	66;"	d
set_function_pointers_penalty_boundary_T	simulation/solvers/opg/face_solver_opg_T.cpp	/^static void set_function_pointers_penalty_boundary_T (struct OPG_Solver_Face_T*const opg_s_face)$/;"	f	file:
set_function_pointers_penalty_boundary_T	simulation/solvers/opg/undef_templates_face_solver_opg.h	37;"	d
set_function_pointers_penalty_boundary_advection_T	simulation/solvers/opg/def_templates_face_solver_opg.h	43;"	d
set_function_pointers_penalty_boundary_advection_T	simulation/solvers/opg/def_templates_face_solver_opg.h	67;"	d
set_function_pointers_penalty_boundary_advection_T	simulation/solvers/opg/face_solver_opg_T.cpp	/^static void set_function_pointers_penalty_boundary_advection_T (struct OPG_Solver_Face_T*const opg_s_face)$/;"	f	file:
set_function_pointers_penalty_boundary_advection_T	simulation/solvers/opg/undef_templates_face_solver_opg.h	38;"	d
set_function_pointers_solution_advection_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	31;"	d
set_function_pointers_solution_advection_T	simulation/test_case/solution/advection/def_templates_solution_advection.h	48;"	d
set_function_pointers_solution_advection_T	simulation/test_case/solution/advection/solution_advection_T.cpp	/^void set_function_pointers_solution_advection_T (struct Test_Case_T* test_case, const struct Simulation*const sim)$/;"	f
set_function_pointers_solution_advection_T	simulation/test_case/solution/advection/undef_templates_solution_advection.h	29;"	d
set_function_pointers_solution_burgers_inviscid_T	simulation/test_case/solution/burgers_inviscid/def_templates_solution_burgers_inviscid.h	25;"	d
set_function_pointers_solution_burgers_inviscid_T	simulation/test_case/solution/burgers_inviscid/def_templates_solution_burgers_inviscid.h	34;"	d
set_function_pointers_solution_burgers_inviscid_T	simulation/test_case/solution/burgers_inviscid/solution_burgers_inviscid_T.cpp	/^void set_function_pointers_solution_burgers_inviscid_T (struct Test_Case_T* test_case, const struct Simulation*const sim)$/;"	f
set_function_pointers_solution_burgers_inviscid_T	simulation/test_case/solution/burgers_inviscid/undef_templates_solution_burgers_inviscid.h	23;"	d
set_function_pointers_solution_diffusion_T	simulation/test_case/solution/diffusion/def_templates_solution_diffusion.h	25;"	d
set_function_pointers_solution_diffusion_T	simulation/test_case/solution/diffusion/def_templates_solution_diffusion.h	35;"	d
set_function_pointers_solution_diffusion_T	simulation/test_case/solution/diffusion/solution_diffusion_T.cpp	/^void set_function_pointers_solution_diffusion_T (struct Test_Case_T* test_case, const struct Simulation*const sim)$/;"	f
set_function_pointers_solution_diffusion_T	simulation/test_case/solution/diffusion/undef_templates_solution_diffusion.h	22;"	d
set_function_pointers_solution_euler_T	simulation/test_case/solution/euler/def_templates_solution_euler.h	27;"	d
set_function_pointers_solution_euler_T	simulation/test_case/solution/euler/def_templates_solution_euler.h	34;"	d
set_function_pointers_solution_euler_T	simulation/test_case/solution/euler/solution_euler_T.cpp	/^void set_function_pointers_solution_euler_T (struct Test_Case_T* test_case, const struct Simulation*const sim)$/;"	f
set_function_pointers_solution_euler_T	simulation/test_case/solution/euler/undef_templates_solution_euler.h	24;"	d
set_function_pointers_solution_navier_stokes_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	29;"	d
set_function_pointers_solution_navier_stokes_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	48;"	d
set_function_pointers_solution_navier_stokes_T	simulation/test_case/solution/navier_stokes/solution_navier_stokes_T.cpp	/^void set_function_pointers_solution_navier_stokes_T (struct Test_Case_T* test_case, const struct Simulation*const sim)$/;"	f
set_function_pointers_solution_navier_stokes_T	simulation/test_case/solution/navier_stokes/undef_templates_solution_navier_stokes.h	24;"	d
set_function_pointers_start	simulation/test_case/def_templates_test_case.h	40;"	d
set_function_pointers_start	simulation/test_case/def_templates_test_case.h	64;"	d
set_function_pointers_start	simulation/test_case/test_case_T.cpp	/^static void set_function_pointers_start (struct Test_Case_T*const test_case)$/;"	f	file:
set_function_pointers_start	simulation/test_case/undef_templates_test_case.h	38;"	d
set_grad	simulation/test_case/test_case_T.h	/^	set_sol_fptr_T set_grad; \/\/\/< Function pointer to the function used to set data relating to the solution gradients.$/;"	m	struct:Test_Case_T
set_grad_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	24;"	d
set_grad_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	50;"	d
set_grad_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^void set_grad_diffusion_default_steady_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_grad_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	21;"	d
set_grad_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	24;"	d
set_grad_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	42;"	d
set_grad_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^void set_grad_taylor_couette_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_grad_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/undef_templates_solution_taylor_couette.h	21;"	d
set_grad_zero_T	simulation/test_case/solution/def_templates_solution.h	101;"	d
set_grad_zero_T	simulation/test_case/solution/def_templates_solution.h	46;"	d
set_grad_zero_T	simulation/test_case/solution/solution_T.cpp	/^void set_grad_zero_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_grad_zero_T	simulation/test_case/solution/undef_templates_solution.h	45;"	d
set_idxm	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static void set_idxm (int* ind_idxm, struct Vector_i* idxm, const int ind_dof, const struct Multiarray_T* coef)$/;"	f	file:
set_idxm	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	38;"	d
set_idxm	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	80;"	d
set_idxm	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	33;"	d
set_idxm	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	34;"	d
set_ind_ord	simulation/computational_elements/face.cpp	/^static void set_ind_ord$/;"	f	file:
set_initial_f_nf_coef	simulation/test_case/solution/def_templates_solution.h	113;"	d
set_initial_f_nf_coef	simulation/test_case/solution/def_templates_solution.h	54;"	d
set_initial_f_nf_coef	simulation/test_case/solution/solution_T.cpp	/^static void set_initial_f_nf_coef (struct Simulation* sim)$/;"	f	file:
set_initial_f_nf_coef	simulation/test_case/solution/undef_templates_solution.h	56;"	d
set_initial_solution_T	simulation/test_case/solution/def_templates_solution.h	34;"	d
set_initial_solution_T	simulation/test_case/solution/def_templates_solution.h	89;"	d
set_initial_solution_T	simulation/test_case/solution/solution_T.cpp	/^void set_initial_solution_T (struct Simulation* sim)$/;"	f
set_initial_solution_T	simulation/test_case/solution/undef_templates_solution.h	33;"	d
set_initial_solution_complex_fptr	testing/integration/test_integration_linearization.cpp	/^typedef void (*set_initial_solution_complex_fptr)$/;"	t	file:
set_initial_v_sg_coef	simulation/test_case/solution/def_templates_solution.h	112;"	d
set_initial_v_sg_coef	simulation/test_case/solution/def_templates_solution.h	53;"	d
set_initial_v_sg_coef	simulation/test_case/solution/solution_T.cpp	/^static void set_initial_v_sg_coef (struct Simulation* sim)$/;"	f	file:
set_initial_v_sg_coef	simulation/test_case/solution/undef_templates_solution.h	55;"	d
set_initial_v_sg_coef_l2_proj	simulation/test_case/solution/def_templates_solution.h	125;"	d
set_initial_v_sg_coef_l2_proj	simulation/test_case/solution/def_templates_solution.h	66;"	d
set_initial_v_sg_coef_l2_proj	simulation/test_case/solution/solution_T.cpp	/^static void set_initial_v_sg_coef_l2_proj (const struct Simulation*const sim)$/;"	f	file:
set_initial_v_sg_coef_l2_proj	simulation/test_case/solution/undef_templates_solution.h	68;"	d
set_initial_v_test_sg_coef_T	simulation/test_case/solution/def_templates_solution.h	104;"	d
set_initial_v_test_sg_coef_T	simulation/test_case/solution/def_templates_solution.h	49;"	d
set_initial_v_test_sg_coef_T	simulation/test_case/solution/solution_T.cpp	/^void set_initial_v_test_sg_coef_T (struct Simulation*const sim)$/;"	f
set_initial_v_test_sg_coef_T	simulation/test_case/solution/undef_templates_solution.h	48;"	d
set_jacobian_permutation	simulation/geometry/def_templates_geometry.h	46;"	d
set_jacobian_permutation	simulation/geometry/def_templates_geometry.h	89;"	d
set_jacobian_permutation	simulation/geometry/geometry_T.cpp	/^static const ptrdiff_t* set_jacobian_permutation (const int d)$/;"	f	file:
set_jacobian_permutation	simulation/geometry/undef_templates_geometry.h	40;"	d
set_mesh_extension	simulation/simulation.cpp	/^static void set_mesh_extension (const char*const mesh_format, char*const mesh_extension)$/;"	f	file:
set_mesh_parameters	simulation/simulation.cpp	/^static void set_mesh_parameters (struct Simulation*const sim)$/;"	f	file:
set_method_related	simulation/test_case/def_templates_test_case.h	34;"	d
set_method_related	simulation/test_case/def_templates_test_case.h	58;"	d
set_method_related	simulation/test_case/test_case_T.cpp	/^static void set_method_related (struct Test_Case_T*const test_case, const struct Simulation*const sim)$/;"	f	file:
set_method_related	simulation/test_case/undef_templates_test_case.h	32;"	d
set_missing_dimension_indices	element/element_operators_tp.cpp	/^static const int* set_missing_dimension_indices (const int dim, const int d)$/;"	f	file:
set_ml_p_curr	simulation/simulation.cpp	/^void set_ml_p_curr (const int ml, const int p, struct Simulation* sim)$/;"	f
set_mutable_MO_from_MO	simulation/operators/multiarray_operator.cpp	/^static struct mutable_Multiarray_Operator set_mutable_MO_from_MO$/;"	f	file:
set_needed_members	simulation/solvers/dg/def_templates_volume_solver_dg.h	33;"	d
set_needed_members	simulation/solvers/dg/def_templates_volume_solver_dg.h	49;"	d
set_needed_members	simulation/solvers/dg/undef_templates_volume_solver_dg.h	30;"	d
set_needed_members	simulation/solvers/dg/volume_solver_dg_T.cpp	/^static struct Needed_Members set_needed_members (const struct Simulation* sim)$/;"	f	file:
set_node_correspondence	element/element_operators.cpp	/^static void set_node_correspondence$/;"	f	file:
set_operator	element/element_operators.h	/^	set_operator_fptr set_operator; \/\/\/< \\ref set_operator_fptr.$/;"	m	struct:Operator_Info
set_operator_fptr	element/element_operators.h	/^typedef void (*set_operator_fptr)$/;"	t
set_operator_solver	element/element_operators.cpp	/^static void set_operator_solver$/;"	f	file:
set_operator_std	element/element_operators.cpp	/^static void set_operator_std$/;"	f	file:
set_operator_std_L2	element/element_operators.cpp	/^static void set_operator_std_L2$/;"	f	file:
set_operator_std_interp	element/element_operators.cpp	/^static void set_operator_std_interp$/;"	f	file:
set_operators_tp	element/element_operators_tp.cpp	/^void set_operators_tp$/;"	f
set_ops_MO	element/element_operators_tp.cpp	/^static void set_ops_MO$/;"	f	file:
set_ops_Md	element/element_operators_tp.cpp	/^static void set_ops_Md$/;"	f	file:
set_ops_tp_n_rows_cols_T	simulation/operators/def_templates_operators.h	27;"	d
set_ops_tp_n_rows_cols_T	simulation/operators/def_templates_operators.h	42;"	d
set_ops_tp_n_rows_cols_T	simulation/operators/operator_T.cpp	/^void set_ops_tp_n_rows_cols_T$/;"	f
set_ops_tp_n_rows_cols_T	simulation/operators/undef_templates_operators.h	24;"	d
set_orders	simulation/simulation.cpp	/^static void set_orders (struct Simulation*const sim)$/;"	f	file:
set_output_name	simulation/visualization/visualization.cpp	/^static const char* set_output_name (const int vis_software, const char*const name_spec)$/;"	f	file:
set_p_ref	element/element_operators.cpp	/^static void set_p_ref (struct Operator_Info*const op_info, const struct Simulation*const sim)$/;"	f	file:
set_pde_related	simulation/test_case/def_templates_test_case.h	33;"	d
set_pde_related	simulation/test_case/def_templates_test_case.h	57;"	d
set_pde_related	simulation/test_case/test_case_T.cpp	/^static void set_pde_related (struct Test_Case_T* test_case, const struct Simulation* sim)$/;"	f	file:
set_pde_related	simulation/test_case/undef_templates_test_case.h	31;"	d
set_petsc_Mat_row_col_dg	simulation/solvers/dg/solve_dg.cpp	/^void set_petsc_Mat_row_col_dg$/;"	f
set_petsc_Mat_row_col_opg	simulation/solvers/opg/solve_opg.cpp	/^void set_petsc_Mat_row_col_opg$/;"	f
set_petsc_options_name	core.cpp	/^const char* set_petsc_options_name (const char* petsc_options_name)$/;"	f
set_pf_centr	simulation/mesh/mesh_periodic.cpp	/^static void set_pf_centr$/;"	f	file:
set_pf_dir	simulation/mesh/mesh_periodic.cpp	/^static void set_pf_dir (struct Periodic_Face*const pf, const int bc)$/;"	f	file:
set_pf_info	simulation/mesh/mesh_periodic.cpp	/^static void set_pf_info$/;"	f	file:
set_pf_reflected_scaling	simulation/mesh/mesh_periodic.cpp	/^static void set_pf_reflected_scaling (struct Periodic_Face*const pf, const int bc)$/;"	f	file:
set_print_name_container_member	testing/support/test_support.cpp	/^char* set_print_name_container_member (const char*const name_container, int ind_container, const char*const name_member)$/;"	f
set_provided_Numerical_Flux_jacobian_members	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	140;"	d
set_provided_Numerical_Flux_jacobian_members	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	76;"	d
set_provided_Numerical_Flux_jacobian_members	simulation/solvers/numerical_flux/numerical_flux_central_T.cpp	/^static void set_provided_Numerical_Flux_jacobian_members$/;"	f	file:
set_provided_Numerical_Flux_jacobian_members	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	73;"	d
set_provided_Numerical_Flux_members	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	139;"	d
set_provided_Numerical_Flux_members	simulation/solvers/numerical_flux/def_templates_numerical_flux.h	75;"	d
set_provided_Numerical_Flux_members	simulation/solvers/numerical_flux/numerical_flux_central_T.cpp	/^static void set_provided_Numerical_Flux_members$/;"	f	file:
set_provided_Numerical_Flux_members	simulation/solvers/numerical_flux/undef_templates_numerical_flux.h	72;"	d
set_row_Matrix_T	containers/def_templates_matrix.h	165;"	d
set_row_Matrix_T	containers/def_templates_matrix.h	54;"	d
set_row_Matrix_T	containers/def_templates_matrix.h	95;"	d
set_row_Matrix_T	containers/matrix_T.cpp	/^void set_row_Matrix_T (const ptrdiff_t row, struct Matrix_T* dest, const Type*const data_src)$/;"	f
set_row_Matrix_T	containers/undef_templates_matrix.h	45;"	d
set_row_permutation_indices	element/element_operators_tp.cpp	/^static void set_row_permutation_indices$/;"	f	file:
set_s_params_T	simulation/solvers/dg/compute_face_rlhs_dg_T.cpp	/^static struct S_Params_T set_s_params_T (const struct Simulation* sim)$/;"	f	file:
set_s_params_T	simulation/solvers/dg/compute_volume_rlhs_dg_T.cpp	/^static struct S_Params_T set_s_params_T (const struct Simulation* sim)$/;"	f	file:
set_s_params_T	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	33;"	d
set_s_params_T	simulation/solvers/dg/def_templates_compute_face_rlhs_dg.h	52;"	d
set_s_params_T	simulation/solvers/dg/def_templates_compute_volume_rlhs_dg.h	28;"	d
set_s_params_T	simulation/solvers/dg/def_templates_compute_volume_rlhs_dg.h	39;"	d
set_s_params_T	simulation/solvers/dg/undef_templates_compute_face_rlhs_dg.h	27;"	d
set_s_params_T	simulation/solvers/dg/undef_templates_compute_volume_rlhs_dg.h	24;"	d
set_s_params_T	simulation/solvers/opg/compute_volume_rlhs_opg_T.cpp	/^static struct S_Params_T set_s_params_T (const struct Simulation*const sim)$/;"	f	file:
set_s_params_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	31;"	d
set_s_params_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	50;"	d
set_s_params_T	simulation/solvers/opg/undef_templates_compute_volume_rlhs_opg.h	27;"	d
set_s_params_dpg	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^static struct S_Params_DPG set_s_params_dpg (const struct Simulation* sim)$/;"	f	file:
set_s_params_dpg	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	37;"	d
set_s_params_dpg	simulation/solvers/dpg/def_templates_compute_all_rlhs_dpg.h	79;"	d
set_s_params_dpg	simulation/solvers/dpg/undef_templates_compute_all_rlhs_dpg.h	32;"	d
set_s_params_dpg	simulation/solvers/dpg/undef_templates_face_solver_dpg.h	33;"	d
set_s_params_f_T	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^static struct S_Params_f_T set_s_params_f_T (const struct Simulation*const sim)$/;"	f	file:
set_s_params_f_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	41;"	d
set_s_params_f_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	70;"	d
set_s_params_f_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	32;"	d
set_scaled_block_Matrix_T	containers/def_templates_matrix.h	102;"	d
set_scaled_block_Matrix_T	containers/def_templates_matrix.h	61;"	d
set_scaled_block_Matrix_T	containers/matrix_T.cpp	/^void set_scaled_block_Matrix_T$/;"	f
set_scaled_block_Matrix_T	containers/undef_templates_matrix.h	53;"	d
set_scaled_value_add_T	containers/def_templates_matrix.h	150;"	d
set_scaled_value_add_T	containers/def_templates_matrix.h	43;"	d
set_scaled_value_add_T	containers/def_templates_matrix.h	84;"	d
set_scaled_value_add_T	containers/matrix_T.cpp	/^static void set_scaled_value_add_T (const Type alpha, Type*const dest, const Type src)$/;"	f	file:
set_scaled_value_add_T	containers/undef_templates_matrix.h	34;"	d
set_scaled_value_fptr_T	containers/def_templates_matrix.h	145;"	d
set_scaled_value_fptr_T	containers/def_templates_matrix.h	36;"	d
set_scaled_value_fptr_T	containers/def_templates_matrix.h	77;"	d
set_scaled_value_fptr_T	containers/matrix_T.cpp	/^typedef void (*set_scaled_value_fptr_T)$/;"	t	file:
set_scaled_value_fptr_T	containers/undef_templates_matrix.h	30;"	d
set_scaled_value_insert_T	containers/def_templates_matrix.h	149;"	d
set_scaled_value_insert_T	containers/def_templates_matrix.h	42;"	d
set_scaled_value_insert_T	containers/def_templates_matrix.h	83;"	d
set_scaled_value_insert_T	containers/matrix_T.cpp	/^static void set_scaled_value_insert_T (const Type alpha, Type*const dest, const Type src)$/;"	f	file:
set_scaled_value_insert_T	containers/undef_templates_matrix.h	33;"	d
set_scaling_basis_pyr	testing/support/element/test_support_bases.cpp	/^static void set_scaling_basis_pyr$/;"	f	file:
set_scaling_basis_tet	testing/support/element/test_support_bases.cpp	/^static void set_scaling_basis_tet$/;"	f	file:
set_scaling_basis_tri	testing/support/element/test_support_bases.cpp	/^static void set_scaling_basis_tri$/;"	f	file:
set_sg_do_nothing_T	simulation/test_case/solution/def_templates_solution.h	35;"	d
set_sg_do_nothing_T	simulation/test_case/solution/def_templates_solution.h	90;"	d
set_sg_do_nothing_T	simulation/test_case/solution/solution_T.cpp	/^void set_sg_do_nothing_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_sg_do_nothing_T	simulation/test_case/solution/undef_templates_solution.h	34;"	d
set_sg_zero_T	simulation/test_case/solution/def_templates_solution.h	36;"	d
set_sg_zero_T	simulation/test_case/solution/def_templates_solution.h	91;"	d
set_sg_zero_T	simulation/test_case/solution/solution_T.cpp	/^void set_sg_zero_T (const struct Simulation*const sim, struct Solution_Container_T sol_cont)$/;"	f
set_sg_zero_T	simulation/test_case/solution/undef_templates_solution.h	35;"	d
set_shift	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^static void set_shift ( )$/;"	f	file:
set_simulation_additional	simulation/simulation.cpp	/^static void set_simulation_additional (struct Simulation*const sim)$/;"	f	file:
set_simulation_core	simulation/simulation.cpp	/^static void set_simulation_core (struct Simulation*const sim, const char*const ctrl_name)$/;"	f	file:
set_simulation_default	simulation/simulation.cpp	/^static void set_simulation_default (struct Simulation*const sim)$/;"	f	file:
set_simulation_invalid	simulation/simulation.cpp	/^static void set_simulation_invalid (struct Simulation*const sim)$/;"	f	file:
set_simulation_mpi	simulation/simulation.cpp	/^static void set_simulation_mpi (struct Simulation*const sim)$/;"	f	file:
set_sol	simulation/test_case/test_case_T.h	/^	set_sol_fptr_T set_sol;  \/\/\/< Function pointer to the function used to set data relating to the solution.$/;"	m	struct:Test_Case_T
set_sol_advection_default_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	23;"	d
set_sol_advection_default_T	simulation/test_case/solution/advection/def_templates_solution_advection_default.h	41;"	d
set_sol_advection_default_T	simulation/test_case/solution/advection/solution_advection_default_T.cpp	/^void set_sol_advection_default_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_sol_advection_default_T	simulation/test_case/solution/advection/undef_templates_solution_advection_default.h	21;"	d
set_sol_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	23;"	d
set_sol_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/def_templates_solution_diffusion_default_steady.h	49;"	d
set_sol_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/solution_diffusion_default_steady_T.cpp	/^void set_sol_diffusion_default_steady_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_sol_diffusion_default_steady_T	simulation/test_case/solution/diffusion/default_steady/undef_templates_solution_diffusion_default_steady.h	20;"	d
set_sol_fptr_T	simulation/test_case/solution/def_templates_solution.h	28;"	d
set_sol_fptr_T	simulation/test_case/solution/def_templates_solution.h	83;"	d
set_sol_fptr_T	simulation/test_case/solution/solution_T.h	/^typedef void (*set_sol_fptr_T)$/;"	t
set_sol_fptr_T	simulation/test_case/solution/undef_templates_solution.h	27;"	d
set_sol_free_stream_T	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	23;"	d
set_sol_free_stream_T	simulation/test_case/solution/euler/free_stream/def_templates_solution_free_stream.h	40;"	d
set_sol_free_stream_T	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^void set_sol_free_stream_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_sol_free_stream_T	simulation/test_case/solution/euler/free_stream/undef_templates_solution_free_stream.h	20;"	d
set_sol_free_stream_advection_T	simulation/test_case/solution/advection/free_stream_advection/def_templates_solution_free_stream_advection.h	23;"	d
set_sol_free_stream_advection_T	simulation/test_case/solution/advection/free_stream_advection/def_templates_solution_free_stream_advection.h	34;"	d
set_sol_free_stream_advection_T	simulation/test_case/solution/advection/free_stream_advection/solution_free_stream_advection_T.cpp	/^void set_sol_free_stream_advection_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_sol_free_stream_advection_T	simulation/test_case/solution/advection/free_stream_advection/undef_templates_solution_free_stream_advection.h	20;"	d
set_sol_hyperbolic_tan_T	simulation/test_case/solution/advection/hyperbolic_tan/def_templates_solution_hyperbolic_tan.h	23;"	d
set_sol_hyperbolic_tan_T	simulation/test_case/solution/advection/hyperbolic_tan/def_templates_solution_hyperbolic_tan.h	34;"	d
set_sol_hyperbolic_tan_T	simulation/test_case/solution/advection/hyperbolic_tan/solution_hyperbolic_tan_T.cpp	/^void set_sol_hyperbolic_tan_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_sol_hyperbolic_tan_T	simulation/test_case/solution/advection/hyperbolic_tan/undef_templates_solution_hyperbolic_tan.h	20;"	d
set_sol_periodic_vortex_T	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	24;"	d
set_sol_periodic_vortex_T	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	40;"	d
set_sol_periodic_vortex_T	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^void set_sol_periodic_vortex_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_sol_periodic_vortex_T	simulation/test_case/solution/euler/periodic_vortex/undef_templates_solution_periodic_vortex.h	22;"	d
set_sol_peterson_T	simulation/test_case/solution/advection/peterson/def_templates_solution_advection_peterson.h	23;"	d
set_sol_peterson_T	simulation/test_case/solution/advection/peterson/def_templates_solution_advection_peterson.h	34;"	d
set_sol_peterson_T	simulation/test_case/solution/advection/peterson/solution_peterson_T.cpp	/^void set_sol_peterson_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_sol_peterson_T	simulation/test_case/solution/advection/peterson/undef_templates_solution_advection_peterson.h	21;"	d
set_sol_restart_T	simulation/test_case/solution/restart/def_templates_restart.h	26;"	d
set_sol_restart_T	simulation/test_case/solution/restart/def_templates_restart.h	53;"	d
set_sol_restart_T	simulation/test_case/solution/restart/restart_T.cpp	/^void set_sol_restart_T (const struct Simulation*const sim, struct Solution_Container_T sol_cont)$/;"	f
set_sol_restart_T	simulation/test_case/solution/restart/undef_templates_restart.h	24;"	d
set_sol_start	simulation/test_case/test_case_T.h	/^	set_sol_fptr_T         set_sol_start;         \/\/\/< Pointer to function used to set the starting solution data.$/;"	m	struct:Test_Case_T
set_sol_supersonic_vortex_T	simulation/test_case/solution/euler/supersonic_vortex/def_templates_solution_supersonic_vortex.h	23;"	d
set_sol_supersonic_vortex_T	simulation/test_case/solution/euler/supersonic_vortex/def_templates_solution_supersonic_vortex.h	37;"	d
set_sol_supersonic_vortex_T	simulation/test_case/solution/euler/supersonic_vortex/solution_supersonic_vortex_T.cpp	/^void set_sol_supersonic_vortex_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_sol_supersonic_vortex_T	simulation/test_case/solution/euler/supersonic_vortex/undef_templates_solution_supersonic_vortex.h	20;"	d
set_sol_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	23;"	d
set_sol_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/def_templates_solution_taylor_couette.h	41;"	d
set_sol_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^void set_sol_taylor_couette_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_sol_taylor_couette_T	simulation/test_case/solution/navier_stokes/taylor_couette/undef_templates_solution_taylor_couette.h	20;"	d
set_sol_trigonometric_T	simulation/test_case/solution/burgers_inviscid/trigonometric/def_templates_solution_trigonometric.h	23;"	d
set_sol_trigonometric_T	simulation/test_case/solution/burgers_inviscid/trigonometric/def_templates_solution_trigonometric.h	34;"	d
set_sol_trigonometric_T	simulation/test_case/solution/burgers_inviscid/trigonometric/solution_trigonometric_T.cpp	/^void set_sol_trigonometric_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_sol_trigonometric_T	simulation/test_case/solution/burgers_inviscid/trigonometric/undef_templates_solution_trigonometric.h	20;"	d
set_sol_vortex_advection_T	simulation/test_case/solution/advection/vortex_advection/def_templates_solution_vortex_advection.h	23;"	d
set_sol_vortex_advection_T	simulation/test_case/solution/advection/vortex_advection/def_templates_solution_vortex_advection.h	34;"	d
set_sol_vortex_advection_T	simulation/test_case/solution/advection/vortex_advection/solution_vortex_advection_T.cpp	/^void set_sol_vortex_advection_T (const struct Simulation* sim, struct Solution_Container_T sol_cont)$/;"	f
set_sol_vortex_advection_T	simulation/test_case/solution/advection/vortex_advection/undef_templates_solution_vortex_advection.h	20;"	d
set_spec_indices_ce	element/element_operators_tp.cpp	/^static void set_spec_indices_ce (bool* spec_indices, const int op_val_ce_o, const struct Operator_Info* op_info)$/;"	f	file:
set_spec_indices_diff	element/element_operators_tp.cpp	/^static void set_spec_indices_diff (bool* spec_indices, const int op_val_d, const int s_type)$/;"	f	file:
set_string_associations	simulation/test_case/def_templates_test_case.h	32;"	d
set_string_associations	simulation/test_case/def_templates_test_case.h	56;"	d
set_string_associations	simulation/test_case/test_case_T.cpp	/^static void set_string_associations (struct Test_Case_T* test_case, const struct Simulation*const sim)$/;"	f	file:
set_string_associations	simulation/test_case/undef_templates_test_case.h	30;"	d
set_sub_op_values	element/element_operators_tp.cpp	/^static void set_sub_op_values$/;"	f	file:
set_sub_op_values_hex	element/element_operators_tp.cpp	/^static void set_sub_op_values_hex$/;"	f	file:
set_sub_op_values_quad	element/element_operators_tp.cpp	/^static void set_sub_op_values_quad$/;"	f	file:
set_sub_op_values_wedge	element/element_operators_tp.cpp	/^static void set_sub_op_values_wedge$/;"	f	file:
set_sub_operator_info	element/element_operators_tp.cpp	/^static void set_sub_operator_info$/;"	f	file:
set_time_step	simulation/solvers/solve_explicit.cpp	/^static time_step_fptr set_time_step (const struct Simulation* sim)$/;"	f	file:
set_to_Vector_Vector_T	containers/def_templates_vector.h	40;"	d
set_to_Vector_Vector_T	containers/def_templates_vector.h	71;"	d
set_to_Vector_Vector_T	containers/undef_templates_vector.h	34;"	d
set_to_Vector_Vector_T	containers/vector_T.cpp	/^void set_to_Vector_Vector_T (struct Vector_T*const dest, const Type alpha, const struct const_Vector_T*const src)$/;"	f
set_to_data_Vector_T	containers/def_templates_vector.h	112;"	d
set_to_data_Vector_T	containers/def_templates_vector.h	38;"	d
set_to_data_Vector_T	containers/def_templates_vector.h	69;"	d
set_to_data_Vector_T	containers/undef_templates_vector.h	32;"	d
set_to_data_Vector_T	containers/vector_T.cpp	/^void set_to_data_Vector_T (struct Vector_T*const a, const Type*const data_src)$/;"	f
set_to_row_avg_const_Matrix_T	containers/def_templates_matrix_math.h	47;"	d
set_to_row_avg_const_Matrix_T	containers/def_templates_matrix_math.h	80;"	d
set_to_row_avg_const_Matrix_T	containers/matrix_math_T.cpp	/^void set_to_row_avg_const_Matrix_T (Type*const data_avg, const struct const_Matrix_T*const src)$/;"	f
set_to_row_avg_const_Matrix_T	containers/undef_templates_matrix_math.h	42;"	d
set_to_sum_Vector_T	containers/def_templates_vector_math.h	31;"	d
set_to_sum_Vector_T	containers/def_templates_vector_math.h	45;"	d
set_to_sum_Vector_T	containers/undef_templates_vector_math.h	27;"	d
set_to_sum_Vector_T	containers/vector_math_T.cpp	/^void set_to_sum_Vector_T$/;"	f
set_to_value_Matrix_T	containers/def_templates_matrix.h	167;"	d
set_to_value_Matrix_T	containers/def_templates_matrix.h	56;"	d
set_to_value_Matrix_T	containers/def_templates_matrix.h	97;"	d
set_to_value_Matrix_T	containers/matrix_T.cpp	/^void set_to_value_Matrix_T (struct Matrix_T*const a, const Type val)$/;"	f
set_to_value_Matrix_T	containers/undef_templates_matrix.h	47;"	d
set_to_value_Multiarray_R	containers/def_templates_multiarray.h	136;"	d
set_to_value_Multiarray_R	containers/undef_templates_multiarray.h	78;"	d
set_to_value_Multiarray_T	containers/def_templates_multiarray.h	102;"	d
set_to_value_Multiarray_T	containers/def_templates_multiarray.h	177;"	d
set_to_value_Multiarray_T	containers/def_templates_multiarray.h	51;"	d
set_to_value_Multiarray_T	containers/multiarray_T.cpp	/^void set_to_value_Multiarray_T (struct Multiarray_T*const a, const Type val)$/;"	f
set_to_value_Multiarray_T	containers/undef_templates_multiarray.h	47;"	d
set_to_value_Vector_T	containers/def_templates_vector.h	113;"	d
set_to_value_Vector_T	containers/def_templates_vector.h	39;"	d
set_to_value_Vector_T	containers/def_templates_vector.h	70;"	d
set_to_value_Vector_T	containers/undef_templates_vector.h	33;"	d
set_to_value_Vector_T	containers/vector_T.cpp	/^void set_to_value_Vector_T (struct Vector_T*const a, const Type val)$/;"	f
set_to_zero_Boundary_Value	testing/integration/test_integration_boundary_conditions.cpp	/^static void set_to_zero_Boundary_Value$/;"	f	file:
set_to_zero_Flux	testing/integration/test_integration_fluxes.cpp	/^static void set_to_zero_Flux (struct mutable_Flux*const m_flux, const struct Flux_Input*const flux_i)$/;"	f	file:
set_to_zero_Numerical_Flux	testing/integration/test_integration_numerical_fluxes.cpp	/^static void set_to_zero_Numerical_Flux$/;"	f	file:
set_to_zero_Vector_T	containers/def_templates_vector.h	111;"	d
set_to_zero_Vector_T	containers/def_templates_vector.h	37;"	d
set_to_zero_Vector_T	containers/def_templates_vector.h	68;"	d
set_to_zero_Vector_T	containers/undef_templates_vector.h	31;"	d
set_to_zero_Vector_T	containers/vector_T.cpp	/^void set_to_zero_Vector_T (struct Vector_T*const a)$/;"	f
set_to_zero_residual_T	simulation/test_case/solution/def_templates_solution.h	103;"	d
set_to_zero_residual_T	simulation/test_case/solution/def_templates_solution.h	48;"	d
set_to_zero_residual_T	simulation/test_case/solution/solution_T.cpp	/^void set_to_zero_residual_T (const struct Simulation*const sim)$/;"	f
set_to_zero_residual_T	simulation/test_case/solution/undef_templates_solution.h	47;"	d
set_tp_sub_elements	element/element.cpp	/^static void set_tp_sub_elements (struct Intrusive_List* elements)$/;"	f	file:
set_type_specific_data	processing/post/convert_data.py	/^	def set_type_specific_data (self):$/;"	m	class:Input_Info
set_type_specific_data	processing/post/convert_data.py	/^	def set_type_specific_data (self):$/;"	m	class:Output_Info
set_up_Face__Neigh_Info__ind_ord	simulation/computational_elements/face.cpp	/^static void set_up_Face__Neigh_Info__ind_ord (struct Face* face, const int ind_lf_wp)$/;"	f	file:
set_up_extents	element/element_operators.cpp	/^static void set_up_extents (struct Operator_Info* op_info)$/;"	f	file:
set_up_fopen_input	general/file_processing.cpp	/^void set_up_fopen_input (const char*const ctrl_name_full, const char*const input_path)$/;"	f
set_up_input_name	general/file_processing.cpp	/^static void set_up_input_name$/;"	f	file:
set_up_mesh_vertices	simulation/mesh/mesh_vertices.cpp	/^static struct Mesh_Vertices_l set_up_mesh_vertices$/;"	f	file:
set_up_solver_geometry_T	simulation/geometry/def_templates_geometry.h	31;"	d
set_up_solver_geometry_T	simulation/geometry/def_templates_geometry.h	74;"	d
set_up_solver_geometry_T	simulation/geometry/geometry_T.cpp	/^void set_up_solver_geometry_T (struct Simulation* sim)$/;"	f
set_up_solver_geometry_T	simulation/geometry/undef_templates_geometry.h	27;"	d
set_up_solver_geometry_p1_T	simulation/geometry/def_templates_geometry.h	32;"	d
set_up_solver_geometry_p1_T	simulation/geometry/def_templates_geometry.h	75;"	d
set_up_solver_geometry_p1_T	simulation/geometry/geometry_T.cpp	/^void set_up_solver_geometry_p1_T (struct Simulation*const sim)$/;"	f
set_up_solver_geometry_p1_T	simulation/geometry/undef_templates_geometry.h	28;"	d
set_up_values_op	element/element_operators.cpp	/^static void set_up_values_op (struct Operator_Info* op_info)$/;"	f	file:
set_uvw	simulation/test_case/boundary/boundary_euler_T.cpp	/^static void set_uvw (const Type*const uvw_i, Type*const*const uvw)$/;"	f	file:
set_uvw	simulation/test_case/boundary/def_templates_boundary.h	136;"	d
set_uvw	simulation/test_case/boundary/def_templates_boundary.h	69;"	d
set_uvw	simulation/test_case/boundary/undef_templates_boundary.h	70;"	d
set_value_add_T	containers/def_templates_matrix.h	148;"	d
set_value_add_T	containers/def_templates_matrix.h	41;"	d
set_value_add_T	containers/def_templates_matrix.h	82;"	d
set_value_add_T	containers/matrix_T.cpp	/^void set_value_add_T (Type*const dest, const Type src)$/;"	f
set_value_add_T	containers/undef_templates_matrix.h	32;"	d
set_value_fptr_T	containers/def_templates_matrix.h	144;"	d
set_value_fptr_T	containers/def_templates_matrix.h	35;"	d
set_value_fptr_T	containers/def_templates_matrix.h	76;"	d
set_value_fptr_T	containers/matrix_T.h	/^typedef void (*set_value_fptr_T)$/;"	t
set_value_fptr_T	containers/undef_templates_matrix.h	29;"	d
set_value_insert_T	containers/def_templates_matrix.h	147;"	d
set_value_insert_T	containers/def_templates_matrix.h	40;"	d
set_value_insert_T	containers/def_templates_matrix.h	81;"	d
set_value_insert_T	containers/matrix_T.cpp	/^void set_value_insert_T (Type*const dest, const Type src)$/;"	f
set_value_insert_T	containers/undef_templates_matrix.h	31;"	d
set_var_names	processing/post/convert_data.py	/^	def set_var_names (self):$/;"	m	class:Output_Info
set_viscosity_type_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	32;"	d
set_viscosity_type_T	simulation/test_case/solution/navier_stokes/def_templates_solution_navier_stokes.h	51;"	d
set_viscosity_type_T	simulation/test_case/solution/navier_stokes/solution_navier_stokes_T.cpp	/^void set_viscosity_type_T (int*const viscosity_type_ptr, bool*const need_input)$/;"	f
set_viscosity_type_T	simulation/test_case/solution/navier_stokes/undef_templates_solution_navier_stokes.h	27;"	d
set_volume_face_ptr	simulation/solvers/adaptation/adaptation.cpp	/^static void set_volume_face_ptr (const struct Face*const face, const int side_index)$/;"	f	file:
set_weights	element/element_operators.cpp	/^static void set_weights$/;"	f	file:
set_xy_c	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	31;"	d
set_xy_c	simulation/test_case/solution/euler/periodic_vortex/def_templates_solution_periodic_vortex.h	47;"	d
set_xy_c	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^static void set_xy_c (double* x_c, double* y_c, const struct Sol_Data__pv* sol_data, const double time)$/;"	f	file:
set_xy_c	simulation/test_case/solution/euler/periodic_vortex/undef_templates_solution_periodic_vortex.h	27;"	d
shift	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^static Index shift = -INDEX_MAX;$/;"	v	file:
sim	simulation/solvers/numerical_flux/numerical_flux_T.h	/^	const struct Simulation* sim; \/\/\/< \\ref Simulation.$/;"	m	struct:Numerical_Flux_Input_T	typeref:struct:Numerical_Flux_Input_T::Simulation
sim	simulation/test_case/solution/restart/restart_T.cpp	/^	struct Simulation* sim; \/\/\/< A minimalist \\ref Simulation set up from the restart file.$/;"	m	struct:Restart_Info	typeref:struct:Restart_Info::Simulation	file:
sizeof_base	simulation/computational_elements/computational_elements.cpp	/^	size_t sizeof_base,    \/\/\/< The size of the base element.$/;"	m	struct:Derived_Elements_Info	file:
sizeof_base	simulation/computational_elements/computational_elements_T.cpp	/^	size_t sizeof_base[2];    \/\/\/< Sizes of the base volume and face computational elements.$/;"	m	struct:Derived_Comp_Elements_Info	file:
sizeof_derived	simulation/computational_elements/computational_elements.cpp	/^	       sizeof_derived; \/\/\/< The size of the derived element.$/;"	m	struct:Derived_Elements_Info	file:
sizeof_derived	simulation/computational_elements/computational_elements_T.cpp	/^	size_t sizeof_derived[2]; \/\/\/< Sizes of the derived volume and face computational elements.$/;"	m	struct:Derived_Comp_Elements_Info	file:
skip_lines	general/file_processing.cpp	/^void skip_lines (FILE* file, const int n_skip)$/;"	f
skip_lines	processing/post/file_processing.py	/^def skip_lines(N,f):$/;"	f
skip_lines_ptr	general/file_processing.cpp	/^void skip_lines_ptr (FILE* file, char**const line, const int line_size, const int n_skip)$/;"	f
skip_periodic_entity	simulation/mesh/mesh_readers.cpp	/^static void skip_periodic_entity (FILE* file, char**const line, const int line_size)$/;"	f	file:
sn	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^	const struct const_Matrix_T* sn;    \/\/\/< The semi-norm operator.$/;"	m	struct:Semi_Norm_DPG	typeref:struct:Semi_Norm_DPG::const_Matrix_T	file:
sn_lt	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^	const struct const_Matrix_T* sn_lt; \/\/\/< The 't'ransposed 'l'eft partial component of the semi-norm.$/;"	m	struct:Semi_Norm_DPG	typeref:struct:Semi_Norm_DPG::const_Matrix_T	file:
sol	simulation/test_case/compute_error/compute_error.h	/^	struct Multiarray_d* sol[2]; \/\/\/< Pointers to the computed and exact solution data.$/;"	m	struct:Error_CE_Data	typeref:struct:Error_CE_Data::Multiarray_d
sol	simulation/test_case/solution/solution_T.h	/^	struct Multiarray_T* sol; \/\/\/< The container for the computed solution.$/;"	m	struct:Solution_Container_T	typeref:struct:Solution_Container_T::Multiarray_T
sol_coef	simulation/solvers/volume_solver_T.h	/^	struct Multiarray_T* sol_coef;$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::Multiarray_T
sol_coef_p	simulation/solvers/dg/volume_solver_dg_T.cpp	/^	bool sol_coef_p, \/\/\/< Flag for \\ref DG_Solver_Volume_T::sol_coef_p.$/;"	m	struct:Needed_Members	file:
sol_coef_p	simulation/solvers/dg/volume_solver_dg_T.h	/^	struct Multiarray_T* sol_coef_p; \/\/\/< The coefficients of the solution at a previous Runge-Kutta stage.$/;"	m	struct:DG_Solver_Volume_T	typeref:struct:DG_Solver_Volume_T::Multiarray_T
sol_cont	simulation/test_case/compute_error/compute_error.h	/^	struct Solution_Container* sol_cont; \/\/\/< \\ref Solution_Container_T.$/;"	m	struct:Error_CE_Helper	typeref:struct:Error_CE_Helper::Solution_Container
sol_err	simulation/test_case/compute_error/compute_error.h	/^	const struct const_Vector_d* sol_err;        \/\/\/< The solution error of the desired error type.$/;"	m	struct:Error_CE	typeref:struct:Error_CE::const_Vector_d
sol_err	simulation/test_case/compute_error/compute_error.h	/^	struct Vector_d* sol_err;        \/\/\/< \\ref Error_CE::sol_err.$/;"	m	struct:Error_CE_Helper	typeref:struct:Error_CE_Helper::Vector_d
sol_err_p	simulation/visualization/visualization.cpp	/^	const struct const_Multiarray_d* sol_err_p; \/\/\/< "sol"ution error (absolute value) at the 'p'lotting nodes.$/;"	m	struct:Volume_Data_Vis	typeref:struct:Volume_Data_Vis::const_Multiarray_d	file:
sol_p	simulation/visualization/visualization.cpp	/^	const struct const_Multiarray_d* sol_p;  \/\/\/< "sol"ution at the 'p'lotting nodes.$/;"	m	struct:Volume_Data_Vis	typeref:struct:Volume_Data_Vis::const_Multiarray_d	file:
solution_extension	simulation/simulation.h	/^	const char solution_extension[STRLEN_MAX];$/;"	m	struct:Simulation
solve_and_update	simulation/solvers/solve_implicit.cpp	/^static PetscErrorCode solve_and_update$/;"	f	file:
solve_explicit	simulation/solvers/solve_explicit.cpp	/^void solve_explicit (struct Simulation* sim)$/;"	f
solve_for_solution	simulation/solvers/solve.cpp	/^void solve_for_solution (struct Simulation* sim)$/;"	f
solve_implicit	simulation/solvers/solve_implicit.cpp	/^void solve_implicit (struct Simulation* sim)$/;"	f
solver_method_cmplx	testing/integration/test_integration_linearization.cpp	/^	const char solver_method_cmplx;$/;"	m	struct:F_Ptrs_and_Data	file:
solver_method_curr	simulation/test_case/test_case_T.h	/^	char solver_method_curr; \/\/\/< The current solver method. Options: 'e'xplicit, 'i'mplicit.$/;"	m	struct:Test_Case_T
solver_proc	simulation/test_case/test_case_T.h	/^	const int solver_proc;$/;"	m	struct:Test_Case_T
solver_type_e	simulation/test_case/test_case_T.h	/^	const int solver_type_e; \/\/\/< The explicit solver type. Options: See definitions_test_case.h.$/;"	m	struct:Test_Case_T
solver_type_i	simulation/test_case/test_case_T.h	/^	const int solver_type_i; \/\/\/< The implicit solver type. Options: See definitions_test_case.h.$/;"	m	struct:Test_Case_T
solver_volume	simulation/test_case/solution/restart/restart_T.cpp	/^	struct Solver_Volume_T** solver_volume; \/\/\/< The array of solver volumes.$/;"	m	struct:Restart_Info	typeref:struct:Restart_Info::Solver_Volume_T	file:
sort_Multiarray_Vector_T	containers/def_templates_multiarray.h	107;"	d
sort_Multiarray_Vector_T	containers/def_templates_multiarray.h	182;"	d
sort_Multiarray_Vector_T	containers/def_templates_multiarray.h	56;"	d
sort_Multiarray_Vector_T	containers/multiarray_T.cpp	/^struct Vector_i* sort_Multiarray_Vector_T (struct Multiarray_Vector_T* a, const bool return_indices)$/;"	f
sort_Multiarray_Vector_T	containers/undef_templates_multiarray.h	52;"	d
sort_Multiarray_Vector_tol_T	containers/def_templates_multiarray.h	108;"	d
sort_Multiarray_Vector_tol_T	containers/def_templates_multiarray.h	183;"	d
sort_Multiarray_Vector_tol_T	containers/def_templates_multiarray.h	57;"	d
sort_Multiarray_Vector_tol_T	containers/multiarray_T.cpp	/^struct Vector_i* sort_Multiarray_Vector_tol_T (struct Multiarray_Vector_T* a, const bool return_indices, const double tol)$/;"	f
sort_Multiarray_Vector_tol_T	containers/undef_templates_multiarray.h	53;"	d
sort_Vector_T	containers/def_templates_vector.h	114;"	d
sort_Vector_T	containers/def_templates_vector.h	41;"	d
sort_Vector_T	containers/def_templates_vector.h	72;"	d
sort_Vector_T	containers/undef_templates_vector.h	35;"	d
sort_Vector_T	containers/vector_T.cpp	/^void sort_Vector_T (struct Vector_T* a)$/;"	f
sort_nodes_ANN	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^void sort_nodes_ANN (const ptrdiff_t n_n, struct Node_ANN*const nodes)$/;"	f
sort_pf_info	simulation/mesh/mesh_periodic.cpp	/^static void sort_pf_info (struct Periodic_Face_Info* pf_info[N_MS])$/;"	f	file:
space_will_be_1_irregular	simulation/solvers/adaptation/adaptation.cpp	/^static bool space_will_be_1_irregular (const struct Simulation*const sim)$/;"	f	file:
spvs	simulation/solvers/dg/compute_volume_rlhs_dg_T.cpp	/^	struct S_Params_Volume_Structor_T spvs; \/\/\/< \\ref S_Params_Volume_Structor_T.$/;"	m	struct:S_Params_T	typeref:struct:S_Params_T::S_Params_Volume_Structor_T	file:
spvs	simulation/solvers/dpg/compute_all_rlhs_dpg_T.cpp	/^	struct S_Params_Volume_Structor_T spvs; \/\/\/< \\ref S_Params_Volume_Structor_T.$/;"	m	struct:S_Params_DPG	typeref:struct:S_Params_DPG::S_Params_Volume_Structor_T	file:
spvs	simulation/solvers/opg/compute_volume_rlhs_opg_T.cpp	/^	struct S_Params_Volume_Structor_T spvs; \/\/\/< \\ref S_Params_Volume_Structor_T.$/;"	m	struct:S_Params_T	typeref:struct:S_Params_T::S_Params_Volume_Structor_T	file:
sqrt_R	general/def_templates_math_functions.h	88;"	d
sqrt_R	general/undef_templates_math_functions.h	46;"	d
sqrt_T	general/def_templates_math_functions.h	25;"	d
sqrt_T	general/def_templates_math_functions.h	57;"	d
sqrt_T	general/undef_templates_math_functions.h	21;"	d
sss	simulation/test_case/solution/restart/restart_T.cpp	/^	struct SSS_ANN* sss; \/\/\/< \\ref SSS_ANN.$/;"	m	struct:Restart_Info	typeref:struct:Restart_Info::SSS_ANN	file:
strcat_path_c	general/file_processing.cpp	/^void strcat_path_c (char* dest, const char*const src, const char*const trail)$/;"	f
strcat_path_i	general/file_processing.cpp	/^void strcat_path_i (char* dest, const int src)$/;"	f
strto_subrange	general/file_processing.cpp	/^static long strto_subrange (const char* str, char** endptr, int base, long min, long max)$/;"	f	file:
strtoi	general/file_processing.cpp	/^static int strtoi (const char* str, char** endptr, int base)$/;"	f	file:
structor_derived_Elements	testing/integration/test_integration_linearization.cpp	/^static void structor_derived_Elements$/;"	f	file:
structor_simulation	testing/integration/test_integration.cpp	/^void structor_simulation$/;"	f
sub_element	element/element.h	/^	const struct const_Element*const sub_element[2];  \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
sub_element	element/element.h	/^	struct Element* sub_element[2];  \/\/\/< Sub-element(s) used to form the tensor-product element (if applicable).$/;"	m	struct:Element	typeref:struct:Element::Element
sub_op_Md	element/element_operators_tp.cpp	/^	const struct const_Matrix_d* sub_op_Md[DIM]; \/\/\/< The array of matrix sub-operators.$/;"	m	struct:Sub_Operator_Info	typeref:struct:Sub_Operator_Info::const_Matrix_d	file:
submat	simulation/solvers/solve_implicit.cpp	/^	Mat* submat;   \/\/\/< The array of sub-matrices.$/;"	m	struct:Schur_Data	file:
substitute_m_for_s	simulation/mesh/mesh_periodic.cpp	/^static void substitute_m_for_s (struct Multiarray_Vector_i*const f_ve, struct Periodic_Face_Info* pf_info[N_MS])$/;"	f	file:
subtract_in_place_Multiarray_T	containers/def_templates_multiarray_math.h	36;"	d
subtract_in_place_Multiarray_T	containers/def_templates_multiarray_math.h	63;"	d
subtract_in_place_Multiarray_T	containers/multiarray_math_T.cpp	/^void subtract_in_place_Multiarray_T (struct Multiarray_T* a, const struct const_Multiarray_T* b)$/;"	f
subtract_in_place_Multiarray_T	containers/undef_templates_multiarray_math.h	32;"	d
subvec	simulation/solvers/solve_implicit.cpp	/^	Vec subvec[2]; \/\/\/< The array of sub-vectors.$/;"	m	struct:Schur_Data	file:
sum_Vector_T	containers/def_templates_vector.h	115;"	d
sum_Vector_T	containers/def_templates_vector.h	42;"	d
sum_Vector_T	containers/def_templates_vector.h	73;"	d
sum_Vector_T	containers/undef_templates_vector.h	36;"	d
sum_Vector_T	containers/vector_T.cpp	/^Type sum_Vector_T (const struct Vector_T* a)$/;"	f
swap_blocks	element/nodes_correspondence.cpp	/^static void swap_blocks (const int n, int* data_0, int* data_1)$/;"	f	file:
swap_dominant_volume_if_necessary	simulation/solvers/adaptation/adaptation.cpp	/^static void swap_dominant_volume_if_necessary (struct Adaptive_Solver_Face* a_s_face)$/;"	f	file:
swap_face_neigh	simulation/solvers/adaptation/adaptation.cpp	/^static void swap_face_neigh (struct Adaptive_Solver_Face* a_s_face)$/;"	f	file:
swap_layout	containers/matrix.cpp	/^void swap_layout (char*const layout)$/;"	f
swap_layout_and_extents	containers/matrix.cpp	/^void swap_layout_and_extents (char*const layout, ptrdiff_t*const ext_0, ptrdiff_t*const ext_1)$/;"	f
swap_neigh_info	simulation/computational_elements/face.cpp	/^void swap_neigh_info (struct Face*const face)$/;"	f
swap_rows_Matrix_T	containers/def_templates_matrix.h	104;"	d
swap_rows_Matrix_T	containers/def_templates_matrix.h	62;"	d
swap_rows_Matrix_T	containers/matrix_T.cpp	/^void swap_rows_Matrix_T (struct Matrix_T*const src, const int r0, const int r1)$/;"	f
swap_rows_Matrix_T	containers/undef_templates_matrix.h	54;"	d
swap_vals_Vector_T	containers/def_templates_vector.h	124;"	d
swap_vals_Vector_T	containers/def_templates_vector.h	52;"	d
swap_vals_Vector_T	containers/def_templates_vector.h	83;"	d
swap_vals_Vector_T	containers/undef_templates_vector.h	46;"	d
swap_vals_Vector_T	containers/vector_T.cpp	/^void swap_vals_Vector_T (struct Vector_T*const src, const int r0, const int r1)$/;"	f
t_i	simulation/test_case/solution/navier_stokes/taylor_couette/solution_taylor_couette_T.cpp	/^	     t_i,    \/\/\/< The temperature of the 'i'nner cylinder.$/;"	m	struct:Sol_Data__tc	file:
t_inf	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^	       t_inf, \/\/\/< The reference temperature.$/;"	m	struct:Sol_Data__pv	file:
t_total	simulation/test_case/boundary/boundary_euler_T.cpp	/^	     t_total, \/\/\/< Total temperature.$/;"	m	struct:BC_Data	file:
tags	simulation/mesh/mesh_readers.cpp	/^	struct Vector_i* tags;      \/\/\/< The list of elementary entity tags.$/;"	m	struct:Elementary_Entity	typeref:struct:Elementary_Entity::Vector_i	file:
tau_p	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	const struct Partials_Tensor* tau_p; \/\/\/< Partial derivatives for the viscous stress tensor.$/;"	m	struct:Flux_Data_Navier_Stokes	typeref:struct:Flux_Data_Navier_Stokes::Partials_Tensor	file:
tc	simulation/test_case/test_case.h	/^	void* tc; \/\/\/< Pointer to the \\ref Test_Case_T.$/;"	m	struct:Test_Case_rc
test_case_explicitly_enforces_conservation	simulation/test_case/test_case.cpp	/^bool test_case_explicitly_enforces_conservation (const struct Simulation*const sim)$/;"	f
test_case_extension	simulation/simulation.h	/^	const char test_case_extension[STRLEN_MAX];$/;"	m	struct:Simulation
test_case_rc	simulation/simulation.h	/^	struct Test_Case_rc* test_case_rc; \/\/\/< Pointer to the \\ref Test_Case_rc.$/;"	m	struct:Simulation	typeref:struct:Simulation::Test_Case_rc
test_case_requires_positivity	simulation/test_case/test_case.cpp	/^bool test_case_requires_positivity (const struct Test_Case*const test_case)$/;"	f
test_print_warning	testing/test_base.cpp	/^void test_print_warning (struct Test_Info*const test_info, const char*const warn_name)$/;"	f
test_s_coef	simulation/solvers/volume_solver_T.h	/^	struct Multiarray_T* test_s_coef;$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::Multiarray_T
test_s_p	simulation/visualization/visualization.cpp	/^	const struct const_Multiarray_d* test_s_p; \/\/\/< "test" functions for the 's'olution at the 'p'lotting nodes.$/;"	m	struct:Volume_Data_Vis	typeref:struct:Volume_Data_Vis::const_Multiarray_d	file:
test_unit_apply_tp	testing/unit/test_unit_operators_tp.cpp	/^static void test_unit_apply_tp(struct Test_Info*const test_info, const char*const e_type)$/;"	f	file:
test_unit_basis_pyramid_bezier	testing/unit/test_unit_bases.cpp	/^static void test_unit_basis_pyramid_bezier (struct Test_Info*const test_info)$/;"	f	file:
test_unit_basis_pyramid_orthonormal	testing/unit/test_unit_bases.cpp	/^static void test_unit_basis_pyramid_orthonormal (struct Test_Info*const test_info)$/;"	f	file:
test_unit_basis_simplex_bezier	testing/unit/test_unit_bases.cpp	/^static void test_unit_basis_simplex_bezier (struct Test_Info*const test_info)$/;"	f	file:
test_unit_basis_simplex_orthonormal	testing/unit/test_unit_bases.cpp	/^static void test_unit_basis_simplex_orthonormal (struct Test_Info*const test_info)$/;"	f	file:
test_unit_basis_tensor_product_bezier	testing/unit/test_unit_bases.cpp	/^static void test_unit_basis_tensor_product_bezier (struct Test_Info*const test_info)$/;"	f	file:
test_unit_basis_tensor_product_orthonormal	testing/unit/test_unit_bases.cpp	/^static void test_unit_basis_tensor_product_orthonormal (struct Test_Info*const test_info)$/;"	f	file:
test_unit_construct_std_from_tp	testing/unit/test_unit_operators_tp.cpp	/^static void test_unit_construct_std_from_tp (struct Test_Info*const test_info, const char*const e_type)$/;"	f	file:
test_unit_matrix_mm	testing/unit/test_unit_containers.cpp	/^static void test_unit_matrix_mm (struct Test_Info*const test_info)$/;"	f	file:
test_unit_matrix_mm_diag	testing/unit/test_unit_containers.cpp	/^static void test_unit_matrix_mm_diag (struct Test_Info*const test_info)$/;"	f	file:
test_unit_matrix_mv	testing/unit/test_unit_containers.cpp	/^static void test_unit_matrix_mv (struct Test_Info*const test_info)$/;"	f	file:
test_unit_nodes_face_correspondence	testing/unit/test_unit_nodes.cpp	/^static void test_unit_nodes_face_correspondence (struct Test_Info*const test_info)$/;"	f	file:
test_unit_nodes_plotting	testing/unit/test_unit_nodes.cpp	/^static void test_unit_nodes_plotting (struct Test_Info*const test_info)$/;"	f	file:
test_unit_nodes_pyramid	testing/unit/test_unit_nodes.cpp	/^static void test_unit_nodes_pyramid (struct Test_Info*const test_info)$/;"	f	file:
test_unit_nodes_simplex	testing/unit/test_unit_nodes.cpp	/^static void test_unit_nodes_simplex (struct Test_Info*const test_info)$/;"	f	file:
test_unit_nodes_tensor_product	testing/unit/test_unit_nodes.cpp	/^static void test_unit_nodes_tensor_product (struct Test_Info*const test_info)$/;"	f	file:
theta	simulation/test_case/solution/euler/free_stream/solution_free_stream_T.cpp	/^	     theta; \/\/\/< The free stream flow angle in the xy-plane (in radians).$/;"	m	struct:Sol_Data__fs	file:
theta	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^	       theta, \/\/\/< The angle at which the vortex propagates in the xy-plane.$/;"	m	struct:Sol_Data__pv	file:
theta	simulation/test_case/solution/euler/solution_euler.cpp	/^	       theta,    \/\/\/< The free stream flow angle in the xy-plane (in radians).$/;"	m	struct:Sol_Data__c_dl	file:
time	simulation/test_case/test_case_T.h	/^	double time;             \/\/\/< The current time.$/;"	m	struct:Test_Case_T
time_final	simulation/test_case/test_case_T.h	/^	const double time_final; \/\/\/< The final time.$/;"	m	struct:Test_Case_T
time_step_euler	simulation/solvers/solve_explicit.cpp	/^static double time_step_euler (const double dt, const struct Simulation* sim)$/;"	f	file:
time_step_fptr	simulation/solvers/solve_explicit.cpp	/^typedef double (*time_step_fptr)$/;"	t	file:
time_step_ls_rk_54	simulation/solvers/solve_explicit.cpp	/^static double time_step_ls_rk_54 (const double dt, const struct Simulation* sim)$/;"	f	file:
time_step_ssp_rk_33	simulation/solvers/solve_explicit.cpp	/^static double time_step_ssp_rk_33 (const double dt, const struct Simulation* sim)$/;"	f	file:
to_lf	simulation/computational_elements/volume.cpp	/^	const struct const_Vector_i* to_lf;   \/\/\/< The relevant row of \\ref Mesh_Connectivity::v_to_lf.$/;"	m	struct:Volume_mesh_info	typeref:struct:Volume_mesh_info::const_Vector_i	file:
transpose	element/element_operators.h	/^	const bool transpose; \/\/\/< Flag for whether the computed operators should be transposed.$/;"	m	struct:Operator_Info
transpose_Matrix_R	containers/def_templates_matrix_math.h	88;"	d
transpose_Matrix_R	containers/undef_templates_matrix_math.h	46;"	d
transpose_Matrix_T	containers/def_templates_matrix_math.h	32;"	d
transpose_Matrix_T	containers/def_templates_matrix_math.h	65;"	d
transpose_Matrix_T	containers/matrix_math_T.cpp	/^void transpose_Matrix_T (struct Matrix_T* a, const bool mem_only)$/;"	f
transpose_Matrix_T	containers/undef_templates_matrix_math.h	27;"	d
transpose_Multiarray_R	containers/def_templates_multiarray_math.h	77;"	d
transpose_Multiarray_R	containers/undef_templates_multiarray_math.h	43;"	d
transpose_Multiarray_T	containers/def_templates_multiarray_math.h	26;"	d
transpose_Multiarray_T	containers/def_templates_multiarray_math.h	53;"	d
transpose_Multiarray_T	containers/multiarray_math_T.cpp	/^void transpose_Multiarray_T (struct Multiarray_T* a, const bool mem_only)$/;"	f
transpose_Multiarray_T	containers/undef_templates_multiarray_math.h	22;"	d
transpose_const_Matrix_d	testing/support/containers/test_support_matrix.cpp	/^void transpose_const_Matrix_d (const struct const_Matrix_d* a, const bool mem_only)$/;"	f
transpose_operators	element/element_operators.cpp	/^static void transpose_operators (struct Multiarray_Operator* op)$/;"	f	file:
tri_10	testing/unit/test_unit_nodes.cpp	/^	                                      * tri_10;  \/\/\/< Vectors of correspondence indices for a 10-node tri   face.$/;"	m	struct:Nodes_FC_Data	typeref:struct:Nodes_FC_Data::	file:
tri_6	testing/unit/test_unit_nodes.cpp	/^	                                      * tri_6,   \/\/\/< Vectors of correspondence indices for a 6- node tri   face.$/;"	m	struct:Nodes_FC_Data	typeref:struct:Nodes_FC_Data::	file:
tw0_vt_fc	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* tw0_vt_fc[2];   \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
tw0_vt_vc	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* tw0_vt_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
tw1_vt_vc	simulation/solvers/element_solver.h	/^	const struct Multiarray_Operator* tw1_vt_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::Multiarray_Operator
type	element/element.h	/^	const int type,   \/\/\/< Defined in \\ref Element.$/;"	m	struct:const_Element
type	element/element.h	/^	int type,   \/\/\/< The element type.$/;"	m	struct:Element
type	simulation/test_case/solution/restart/inverse_mapping.cpp	/^	int type;   \/\/\/< \\ref Element::type.$/;"	m	struct:Inv_Map	file:
u	simulation/test_case/flux/flux_advection_T.cpp	/^	const Type u; \/\/\/< State variable.$/;"	m	struct:Flux_Data_Advection	file:
u	simulation/test_case/flux/flux_burgers_inviscid_T.cpp	/^	const Type u; \/\/\/< State variable.$/;"	m	struct:Flux_Data_Burgers_Inviscid	file:
u	simulation/test_case/solution/restart/approximate_nearest_neighbor.cpp	/^	struct Node_ANN u; \/\/\/< Upper bounding node.$/;"	m	struct:SSS_c	typeref:struct:SSS_c::Node_ANN	file:
u_inf	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^	       u_inf,    \/\/\/< The speed of the vortex in the x-direction.$/;"	m	struct:Sol_Data__pv	file:
u_scale	simulation/test_case/solution/advection/solution_advection_T.h	/^	Real u_scale; \/\/\/< Scaling constant for the solution.$/;"	m	struct:Sol_Data__Advection_T
update_Solution_Container_grad_T	simulation/test_case/solution/def_templates_solution.h	43;"	d
update_Solution_Container_grad_T	simulation/test_case/solution/def_templates_solution.h	98;"	d
update_Solution_Container_grad_T	simulation/test_case/solution/solution_T.cpp	/^void update_Solution_Container_grad_T$/;"	f
update_Solution_Container_grad_T	simulation/test_case/solution/undef_templates_solution.h	42;"	d
update_Solution_Container_sol_T	simulation/test_case/solution/def_templates_solution.h	42;"	d
update_Solution_Container_sol_T	simulation/test_case/solution/def_templates_solution.h	97;"	d
update_Solution_Container_sol_T	simulation/test_case/solution/solution_T.cpp	/^void update_Solution_Container_sol_T$/;"	f
update_Solution_Container_sol_T	simulation/test_case/solution/undef_templates_solution.h	41;"	d
update_coef	simulation/solvers/solve_implicit.cpp	/^static void update_coef$/;"	f	file:
update_coef_l_mult_v	simulation/solvers/solve_implicit.cpp	/^static void update_coef_l_mult_v (Vec x, const struct Simulation*const sim)$/;"	f	file:
update_coef_nf_f	simulation/solvers/solve_implicit.cpp	/^static void update_coef_nf_f (Vec x, const struct Simulation* sim)$/;"	f	file:
update_coef_nf_f_opg_T	simulation/solvers/opg/compute_face_rlhs_opg_T.cpp	/^void update_coef_nf_f_opg_T (const struct Simulation*const sim, struct Intrusive_List*const faces)$/;"	f
update_coef_nf_f_opg_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	33;"	d
update_coef_nf_f_opg_T	simulation/solvers/opg/def_templates_compute_face_rlhs_opg.h	62;"	d
update_coef_nf_f_opg_T	simulation/solvers/opg/undef_templates_compute_face_rlhs_opg.h	25;"	d
update_coef_s_v	simulation/solvers/solve_implicit.cpp	/^static void update_coef_s_v (Vec x, const struct Simulation* sim)$/;"	f	file:
update_coef_s_v_opg_T	simulation/solvers/opg/compute_volume_rlhs_opg_T.cpp	/^void update_coef_s_v_opg_T (const struct Simulation*const sim, struct Intrusive_List*const volumes)$/;"	f
update_coef_s_v_opg_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	25;"	d
update_coef_s_v_opg_T	simulation/solvers/opg/def_templates_compute_volume_rlhs_opg.h	44;"	d
update_coef_s_v_opg_T	simulation/solvers/opg/undef_templates_compute_volume_rlhs_opg.h	22;"	d
update_coef_test_s_v	simulation/solvers/solve_implicit.cpp	/^static void update_coef_test_s_v (Vec x, const struct Simulation*const sim)$/;"	f	file:
update_coefs	simulation/solvers/solve_implicit.cpp	/^static void update_coefs (Vec x, const struct Simulation* sim)$/;"	f	file:
update_computational_element_elements	simulation/computational_elements/computational_elements.cpp	/^static void update_computational_element_elements (struct Simulation* sim)$/;"	f	file:
update_computational_element_list_pointers	simulation/computational_elements/computational_elements_T.cpp	/^static void update_computational_element_list_pointers (const struct Simulation* sim)$/;"	f	file:
update_computational_element_list_pointers	simulation/computational_elements/def_templates_computational_elements.h	30;"	d
update_computational_element_list_pointers	simulation/computational_elements/def_templates_computational_elements.h	50;"	d
update_computational_element_list_pointers	simulation/computational_elements/undef_templates_computational_elements.h	27;"	d
update_domain_order	simulation/test_case/compute_error/compute_error.cpp	/^void update_domain_order (struct Error_CE_Helper* e_ce_h)$/;"	f
update_face_h	simulation/solvers/adaptation/adaptation.cpp	/^static void update_face_h (struct Adaptive_Solver_Face*const a_s_face, const struct Simulation*const sim)$/;"	f	file:
update_face_list_pointers	simulation/computational_elements/computational_elements_T.cpp	/^static void update_face_list_pointers (const struct Simulation* sim)$/;"	f	file:
update_face_list_pointers	simulation/computational_elements/def_templates_computational_elements.h	32;"	d
update_face_list_pointers	simulation/computational_elements/def_templates_computational_elements.h	52;"	d
update_face_list_pointers	simulation/computational_elements/undef_templates_computational_elements.h	29;"	d
update_face_p_ref	simulation/solvers/adaptation/adaptation.cpp	/^static void update_face_p_ref (struct Adaptive_Solver_Face* a_s_face, const struct Simulation* sim)$/;"	f	file:
update_face_pointers	simulation/computational_elements/computational_elements_T.cpp	/^static void update_face_pointers (struct Intrusive_Link* link)$/;"	f	file:
update_face_pointers	simulation/computational_elements/def_templates_computational_elements.h	36;"	d
update_face_pointers	simulation/computational_elements/def_templates_computational_elements.h	56;"	d
update_face_pointers	simulation/computational_elements/undef_templates_computational_elements.h	33;"	d
update_geometry_faces	simulation/solvers/adaptation/adaptation.cpp	/^static void update_geometry_faces (struct Simulation* sim)$/;"	f	file:
update_geometry_volumes	simulation/solvers/adaptation/adaptation.cpp	/^static void update_geometry_volumes (struct Simulation* sim)$/;"	f	file:
update_hp_members_faces	simulation/solvers/adaptation/adaptation.cpp	/^static void update_hp_members_faces (const struct Simulation* sim)$/;"	f	file:
update_hp_members_volumes	simulation/solvers/adaptation/adaptation.cpp	/^static void update_hp_members_volumes (const struct Simulation* sim)$/;"	f	file:
update_ind_dof_T	simulation/solvers/def_templates_solve.h	27;"	d
update_ind_dof_T	simulation/solvers/def_templates_solve.h	48;"	d
update_ind_dof_T	simulation/solvers/solve_T.cpp	/^void update_ind_dof_T (const struct Simulation*const sim)$/;"	f
update_ind_dof_T	simulation/solvers/undef_templates_solve.h	24;"	d
update_ind_dof_test_T	simulation/solvers/def_templates_solve.h	31;"	d
update_ind_dof_test_T	simulation/solvers/def_templates_solve.h	52;"	d
update_ind_dof_test_T	simulation/solvers/solve_T.cpp	/^static void update_ind_dof_test_T (const struct Simulation*const sim)$/;"	f	file:
update_ind_dof_test_T	simulation/solvers/undef_templates_solve.h	26;"	d
update_ind_vol_b	simulation/test_case/solution/restart/def_templates_restart.h	39;"	d
update_ind_vol_b	simulation/test_case/solution/restart/def_templates_restart.h	66;"	d
update_ind_vol_b	simulation/test_case/solution/restart/restart_T.cpp	/^static void update_ind_vol_b$/;"	f	file:
update_ind_vol_b	simulation/test_case/solution/restart/undef_templates_restart.h	36;"	d
update_index_faces	simulation/solvers/adaptation/adaptation.cpp	/^static void update_index_faces (struct Simulation*const sim)$/;"	f	file:
update_index_volumes	simulation/solvers/adaptation/adaptation.cpp	/^static void update_index_volumes (struct Simulation*const sim)$/;"	f	file:
update_layout_Multiarray_Matrix_T	containers/def_templates_matrix_math.h	49;"	d
update_layout_Multiarray_Matrix_T	containers/def_templates_matrix_math.h	82;"	d
update_layout_Multiarray_Matrix_T	containers/multiarray_math_T.cpp	/^void update_layout_Multiarray_Matrix_T (struct Multiarray_Matrix_T* a, const char layout_o)$/;"	f
update_layout_Multiarray_Matrix_T	containers/undef_templates_matrix_math.h	44;"	d
update_list_existing_faces	simulation/solvers/adaptation/adaptation.cpp	/^static void update_list_existing_faces (struct Simulation*const sim)$/;"	f	file:
update_list_new_faces	simulation/solvers/adaptation/adaptation.cpp	/^static void update_list_new_faces (struct Simulation*const sim)$/;"	f	file:
update_list_volumes	simulation/solvers/adaptation/adaptation.cpp	/^static void update_list_volumes (struct Simulation*const sim)$/;"	f	file:
update_neighbours_for_1_irregular	simulation/solvers/adaptation/adaptation.cpp	/^static bool update_neighbours_for_1_irregular (struct Adaptive_Solver_Volume*const a_s_vol, const char hp_type)$/;"	f	file:
update_op_type_Xc	element/element_operators.cpp	/^static void update_op_type_Xc (const int*const op_type)$/;"	f	file:
update_pass	testing/support/test_support.cpp	/^void update_pass (bool*const pass, const bool pass_new)$/;"	f
update_rows_Multiarray_R	containers/def_templates_multiarray.h	143;"	d
update_rows_Multiarray_R	containers/undef_templates_multiarray.h	85;"	d
update_rows_Multiarray_T	containers/def_templates_multiarray.h	123;"	d
update_rows_Multiarray_T	containers/def_templates_multiarray.h	72;"	d
update_rows_Multiarray_T	containers/multiarray_T.cpp	/^void update_rows_Multiarray_T$/;"	f
update_rows_Multiarray_T	containers/undef_templates_multiarray.h	66;"	d
update_test_s_coef	testing/support/simulation/solvers/opg/test_support_solve_opg.cpp	/^static void update_test_s_coef$/;"	f	file:
update_v_to_lf_bc	simulation/mesh/mesh_connectivity.cpp	/^static void update_v_to_lf_bc (struct Multiarray_Vector_i*const v_to_lf, const int*const v_to_lf_i)$/;"	f	file:
update_volume_face_pointers	simulation/solvers/adaptation/adaptation.cpp	/^static void update_volume_face_pointers (struct Simulation* sim)$/;"	f	file:
update_volume_h	simulation/solvers/adaptation/adaptation.cpp	/^static void update_volume_h (struct Adaptive_Solver_Volume*const a_s_vol, const struct Simulation*const sim)$/;"	f	file:
update_volume_list_pointers	simulation/computational_elements/computational_elements_T.cpp	/^static void update_volume_list_pointers (const struct Simulation* sim)$/;"	f	file:
update_volume_list_pointers	simulation/computational_elements/def_templates_computational_elements.h	31;"	d
update_volume_list_pointers	simulation/computational_elements/def_templates_computational_elements.h	51;"	d
update_volume_list_pointers	simulation/computational_elements/undef_templates_computational_elements.h	28;"	d
update_volume_p_ref	simulation/solvers/adaptation/adaptation.cpp	/^static void update_volume_p_ref (struct Adaptive_Solver_Volume* a_s_vol, const struct Simulation* sim)$/;"	f	file:
update_volume_pointers	simulation/computational_elements/computational_elements_T.cpp	/^static void update_volume_pointers (struct Intrusive_Link* link)$/;"	f	file:
update_volume_pointers	simulation/computational_elements/def_templates_computational_elements.h	35;"	d
update_volume_pointers	simulation/computational_elements/def_templates_computational_elements.h	55;"	d
update_volume_pointers	simulation/computational_elements/undef_templates_computational_elements.h	32;"	d
update_volumes_element	simulation/computational_elements/volume.cpp	/^void update_volumes_element$/;"	f
updated	simulation/solvers/adaptation/face_solver_adaptive.h	/^	bool updated; \/\/\/< Flag for whether the face was updated.$/;"	m	struct:Adaptive_Solver_Face
updated	simulation/solvers/adaptation/volume_solver_adaptive.h	/^	bool updated;         \/\/\/< Flag for whether the volume was updated.$/;"	m	struct:Adaptive_Solver_Volume
updated_geom_nc	simulation/solvers/adaptation/volume_solver_adaptive.h	/^	bool updated_geom_nc; \/\/\/< Flag for whether the volume geometry was updated due to non-conformity.$/;"	m	struct:Adaptive_Solver_Volume
updated_geom_nc_face	simulation/solvers/adaptation/volume_solver_adaptive.h	/^	bool updated_geom_nc_face;$/;"	m	struct:Adaptive_Solver_Volume
use_constant_solution	simulation/test_case/solution/advection/solution_advection_T.h	/^	bool use_constant_solution; \/\/\/< Flag for whether a constant solution should be used.$/;"	m	struct:Sol_Data__Advection_T
use_infinity_error	simulation/test_case/compute_error/compute_error.cpp	/^static bool use_infinity_error ( )$/;"	f	file:
use_schur_complement	simulation/test_case/test_case_T.h	/^	const bool use_schur_complement;$/;"	m	struct:Test_Case_T
using_exact_normals	simulation/geometry/geometry_normals.cpp	/^bool using_exact_normals ( )$/;"	f
using_exact_normals_for_boundary	simulation/test_case/boundary/boundary.cpp	/^bool using_exact_normals_for_boundary ( )$/;"	f
using_restart	simulation/test_case/solution/solution_T.h	/^	bool using_restart; \/\/\/< Flag for whether the solution is being computed from a restart file.$/;"	m	struct:Solution_Container_T
using_restart	simulation/test_case/test_case.cpp	/^bool using_restart ( )$/;"	f
using_restart_as_exact	simulation/test_case/compute_error/compute_error.cpp	/^static bool using_restart_as_exact ( )$/;"	f	file:
uvw	simulation/test_case/flux/flux_euler_T.cpp	/^	          * uvw;    \/\/\/< Array of velocity variables.$/;"	m	struct:Flux_Data_Euler	file:
uvw_p	simulation/test_case/flux/flux_navier_stokes_T.cpp	/^	const struct Partials_Vector* uvw_p, \/\/\/< Partial derivatives for the velocity components.$/;"	m	struct:Flux_Data_Navier_Stokes	typeref:struct:Flux_Data_Navier_Stokes::Partials_Vector	file:
v_inf	simulation/test_case/solution/euler/periodic_vortex/solution_periodic_vortex_T.cpp	/^	       v_inf,    \/\/\/< The speed of the vortex in the y-direction.$/;"	m	struct:Sol_Data__pv	file:
v_n_lf	simulation/mesh/mesh_connectivity.h	/^	struct Vector_i* v_n_lf;             \/\/\/< The number of local faces for each volume.$/;"	m	struct:Conn_info	typeref:struct:Conn_info::Vector_i
v_to_lf	simulation/mesh/mesh_connectivity.cpp	/^	struct Multiarray_Vector_i* v_to_lf;    \/\/\/< Local version of \\ref Mesh_Connectivity::v_to_lf.$/;"	m	struct:Mesh_Connectivity_l	typeref:struct:Mesh_Connectivity_l::Multiarray_Vector_i	file:
v_to_lf	simulation/mesh/mesh_connectivity.h	/^	const struct const_Multiarray_Vector_i*const v_to_lf;$/;"	m	struct:Mesh_Connectivity
v_to_lf	testing/integration/test_integration_mesh.cpp	/^	struct Multiarray_Vector_i* v_to_lf;    \/\/\/< Defined in \\ref Mesh_Connectivity.$/;"	m	struct:Mesh_Test_Data	typeref:struct:Mesh_Test_Data::Multiarray_Vector_i	file:
v_to_lf_wp	simulation/mesh/mesh_connectivity.cpp	/^	struct Multiarray_Vector_i* v_to_lf_wp; \/\/\/< Local version of \\ref Mesh_Connectivity::v_to_lf_wp.$/;"	m	struct:Mesh_Connectivity_l	typeref:struct:Mesh_Connectivity_l::Multiarray_Vector_i	file:
v_to_lf_wp	simulation/mesh/mesh_connectivity.h	/^	const struct const_Multiarray_Vector_i*const v_to_lf_wp;$/;"	m	struct:Mesh_Connectivity
v_to_lf_wp	testing/integration/test_integration_mesh.cpp	/^	bool v_to_lf_wp; \/\/\/< Flag for whether \\ref Mesh_Test_Data::v_to_lf_wp should be read.$/;"	m	struct:Mesh_Read_Data	file:
v_to_lf_wp	testing/integration/test_integration_mesh.cpp	/^	struct Multiarray_Vector_i* v_to_lf_wp; \/\/\/< Defined in \\ref Mesh_Connectivity.$/;"	m	struct:Mesh_Test_Data	typeref:struct:Mesh_Test_Data::Multiarray_Vector_i	file:
v_to_v	simulation/mesh/mesh_connectivity.cpp	/^	struct Multiarray_Vector_i* v_to_v;     \/\/\/< Local version of \\ref Mesh_Connectivity::v_to_v.$/;"	m	struct:Mesh_Connectivity_l	typeref:struct:Mesh_Connectivity_l::Multiarray_Vector_i	file:
v_to_v	simulation/mesh/mesh_connectivity.h	/^	const struct const_Multiarray_Vector_i*const v_to_v; \/\/\/< Volume to volume connectivity.$/;"	m	struct:Mesh_Connectivity
v_to_v	testing/integration/test_integration_mesh.cpp	/^	struct Multiarray_Vector_i* v_to_v;     \/\/\/< Defined in \\ref Mesh_Connectivity.$/;"	m	struct:Mesh_Test_Data	typeref:struct:Mesh_Test_Data::Multiarray_Vector_i	file:
v_types	simulation/test_case/solution/restart/restart_writers.cpp	/^	const struct const_Vector_i* v_types; \/\/\/< The volume element type indices.$/;"	m	struct:Elements_Info	typeref:struct:Elements_Info::const_Vector_i	file:
values_op	element/element_operators.h	/^	const struct const_Matrix_i* values_op; \/\/\/< The values of d, f, h, p_in, and p_out for each operator.$/;"	m	struct:Operator_Info	typeref:struct:Operator_Info::const_Matrix_i
var_names	testing/integration/test_integration_convergence_support.cpp	/^	const char*const* var_names; \/\/\/< Names of the variables for which the error and convergence orders are provided.$/;"	m	struct:Conv_Order_Data	file:
vc0_ff_ff	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* vc0_ff_ff; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
vc0_fgc_fgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vc0_fgc_fgc;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vc0_fis_fgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vc0_fis_fgc;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vc0_vgc_vgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vc0_vgc_vgc;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vc0_vr_vr	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* vc0_vr_vr;    \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
vc0_vs_vs	simulation/solvers/opg/element_solver_opg.h	/^	const struct Multiarray_Operator* vc0_vs_vs;    \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:OPG_Solver_Element	typeref:struct:OPG_Solver_Element::Multiarray_Operator
vc0_vs_vs	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* vc0_vs_vs;    \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
vc0_vv_vgs	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vc0_vv_vgs;   \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
ve_bc	simulation/mesh/mesh_vertices.cpp	/^	struct Multiarray_Vector_i* ve_bc; \/\/\/< Defined in \\ref Mesh_Vertices.$/;"	m	struct:Mesh_Vertices_l	typeref:struct:Mesh_Vertices_l::Multiarray_Vector_i	file:
ve_bc	simulation/mesh/mesh_vertices.h	/^	const struct const_Multiarray_Vector_i*const ve_bc; \/**< Holds the sorted values of all unique boundary conditions$/;"	m	struct:Mesh_Vertices
ve_bc	testing/integration/test_integration_mesh.cpp	/^	struct Multiarray_Vector_i* ve_bc;       \/\/\/< Defined in \\ref Mesh_Vertices.$/;"	m	struct:Mesh_Test_Data	typeref:struct:Mesh_Test_Data::Multiarray_Vector_i	file:
ve_boundary	simulation/mesh/mesh_vertices.cpp	/^	struct Vector_i* ve_boundary;      \/\/\/< Defined in \\ref Mesh_Vertices.$/;"	m	struct:Mesh_Vertices_l	typeref:struct:Mesh_Vertices_l::Vector_i	file:
ve_boundary	simulation/mesh/mesh_vertices.h	/^	const struct const_Vector_i*const ve_boundary;      \/\/\/< Flags for which vertices are located on boundaries.$/;"	m	struct:Mesh_Vertices
ve_boundary	testing/integration/test_integration_mesh.cpp	/^	struct Vector_i*            ve_boundary; \/\/\/< Defined in \\ref Mesh_Vertices.$/;"	m	struct:Mesh_Test_Data	typeref:struct:Mesh_Test_Data::Vector_i	file:
ve_curved	simulation/mesh/mesh_vertices.cpp	/^	struct Vector_i* ve_curved;        \/\/\/< Defined in \\ref Mesh_Vertices.$/;"	m	struct:Mesh_Vertices_l	typeref:struct:Mesh_Vertices_l::Vector_i	file:
ve_curved	simulation/mesh/mesh_vertices.h	/^	const struct const_Vector_i*const ve_curved;        \/\/\/< Flags for which vertices are located on curved boundaries.$/;"	m	struct:Mesh_Vertices
ve_curved	testing/integration/test_integration_mesh.cpp	/^	struct Vector_i*            ve_curved;   \/\/\/< Defined in \\ref Mesh_Vertices.$/;"	m	struct:Mesh_Test_Data	typeref:struct:Mesh_Test_Data::Vector_i	file:
ve_inds	simulation/computational_elements/face.cpp	/^	const struct const_Vector_i* ve_inds; \/\/\/< The indices of the vertices of the face.$/;"	m	struct:Face_mesh_info	typeref:struct:Face_mesh_info::const_Vector_i	file:
ve_inds	simulation/computational_elements/volume.cpp	/^	const struct const_Vector_i* ve_inds; \/\/\/< The indices of the vertices of the volume.$/;"	m	struct:Volume_mesh_info	typeref:struct:Volume_mesh_info::const_Vector_i	file:
ve_inds_f	simulation/test_case/solution/restart/restart_writers.cpp	/^	const struct const_Multiarray_Vector_i* ve_inds_f; \/\/\/< Vertex indices of the faces.$/;"	m	struct:Elements_Info	typeref:struct:Elements_Info::const_Multiarray_Vector_i	file:
ve_rand	testing/unit/test_unit_inverse_mapping.cpp	/^	const struct const_Matrix_d* ve_rand; \/\/\/< Random vertices.$/;"	m	struct:Inv_Map_Data	typeref:struct:Inv_Map_Data::const_Matrix_d	file:
ve_std	testing/unit/test_unit_inverse_mapping.cpp	/^	const struct const_Matrix_d* ve_std;  \/\/\/< Vertices of the standard reference element.$/;"	m	struct:Inv_Map_Data	typeref:struct:Inv_Map_Data::const_Matrix_d	file:
ve_symm	testing/unit/test_unit_inverse_mapping.cpp	/^	const struct const_Matrix_d* ve_symm; \/\/\/< Vertices of the symmetric reference element.$/;"	m	struct:Inv_Map_Data	typeref:struct:Inv_Map_Data::const_Matrix_d	file:
vector	containers/multiarray_T.cpp	/^	struct Vector_T* vector; \/\/\/< The \\ref Vector_T\\*.$/;"	m	struct:Vector_T_indexed	typeref:struct:Vector_T_indexed::Vector_T	file:
vol_jacobian_det_fc	simulation/solvers/face_solver_T.h	/^	const struct const_Multiarray_T* vol_jacobian_det_fc;$/;"	m	struct:Solver_Face_T	typeref:struct:Solver_Face_T::const_Multiarray_T
volume	simulation/computational_elements/face.cpp	/^		struct Volume* volume; \/\/\/< \\ref Face::Neigh_Info::volume.$/;"	m	struct:Face_mesh_info::Neigh_info_mi	typeref:struct:Face_mesh_info::Neigh_info_mi::Volume	file:
volume	simulation/computational_elements/face.h	/^		struct Volume* volume;$/;"	m	struct:Face::Neigh_Info	typeref:struct:Face::Neigh_Info::Volume
volume	simulation/solvers/adaptation/volume_solver_adaptive.h	/^	struct Solver_Volume volume; \/\/\/< The base \\ref Solver_Volume_T.$/;"	m	struct:Adaptive_Solver_Volume	typeref:struct:Adaptive_Solver_Volume::Solver_Volume
volume	simulation/solvers/dg/volume_solver_dg_T.h	/^	struct Solver_Volume_T volume; \/\/\/< The base \\ref Solver_Volume_T.$/;"	m	struct:DG_Solver_Volume_T	typeref:struct:DG_Solver_Volume_T::Solver_Volume_T
volume	simulation/solvers/dpg/volume_solver_dpg_T.h	/^	struct Solver_Volume_T volume; \/\/\/< The base \\ref Solver_Volume_T.$/;"	m	struct:DPG_Solver_Volume_T	typeref:struct:DPG_Solver_Volume_T::Solver_Volume_T
volume	simulation/solvers/opg/volume_solver_opg_T.h	/^	struct Solver_Volume_T volume; \/\/\/< The base \\ref Solver_Volume_T.$/;"	m	struct:OPG_Solver_Volume_T	typeref:struct:OPG_Solver_Volume_T::Solver_Volume_T
volume	simulation/solvers/volume_solver_T.h	/^	struct Volume volume; \/\/\/< The base \\ref Volume.$/;"	m	struct:Solver_Volume_T	typeref:struct:Solver_Volume_T::Volume
volume	simulation/test_case/solution/solution_T.h	/^	struct Solver_Volume_T* volume; \/\/\/< \\ref Solver_Volume_T.$/;"	m	struct:Solution_Container_T	typeref:struct:Solution_Container_T::Solver_Volume_T
volume_has_specified_xyz_ve	simulation/solvers/adaptation/adaptation.cpp	/^static bool volume_has_specified_xyz_ve$/;"	f	file:
volume_types	simulation/mesh/mesh_connectivity.h	/^	struct const_Vector_i* volume_types; \/\/\/< Pointer to the first volume entry in \\ref Mesh_Data::elem_types.$/;"	m	struct:Conn_info	typeref:struct:Conn_info::const_Vector_i
volume_will_be_1_irregular	simulation/solvers/adaptation/adaptation.cpp	/^static bool volume_will_be_1_irregular (const struct Adaptive_Solver_Volume*const a_s_vol, const char hp_type)$/;"	f	file:
volumes	simulation/simulation.h	/^	struct Intrusive_List* volumes;              \/\/\/< Pointer to the head of the Volume  list.$/;"	m	struct:Simulation	typeref:struct:Simulation::Intrusive_List
volumes	testing/support/test_support_fe_init.cpp	/^	struct Intrusive_List* volumes; \/\/\/< Defined in \\ref Simulation.$/;"	m	struct:FE_Test_Data	typeref:struct:FE_Test_Data::Intrusive_List	file:
vtk_types	element/nodes_plotting.h	/^	const struct const_Vector_i*const vtk_types;   \/\/\/< Defined in \\ref Plotting_Nodes.$/;"	m	struct:const_Plotting_Nodes
vtk_types	element/nodes_plotting.h	/^	struct Vector_i* vtk_types;$/;"	m	struct:Plotting_Nodes	typeref:struct:Plotting_Nodes::Vector_i
vtk_types_e	element/nodes_plotting.h	/^	const struct const_Vector_i*const vtk_types_e; \/\/\/< Defined in \\ref Plotting_Nodes.$/;"	m	struct:const_Plotting_Nodes
vtk_types_e	element/nodes_plotting.h	/^	struct Vector_i* vtk_types_e;$/;"	m	struct:Plotting_Nodes	typeref:struct:Plotting_Nodes::Vector_i
vv0_bX_vX	simulation/geometry/geometry_blended_T.h	/^	const struct Operator* vv0_bX_vX;   \/\/\/< See \\ref Boundary_Comp_Elem_Data_T::vv0_vv_vX.$/;"	m	struct:Boundary_Comp_Elem_Data_T	typeref:struct:Boundary_Comp_Elem_Data_T::Operator
vv0_bv_bX	simulation/geometry/geometry_blended_T.h	/^	const struct Operator* vv0_bv_bX;   \/\/\/< See \\ref Boundary_Comp_Elem_Data_T::vv0_vv_vX.$/;"	m	struct:Boundary_Comp_Elem_Data_T	typeref:struct:Boundary_Comp_Elem_Data_T::Operator
vv0_bv_bX	simulation/geometry/geometry_blended_T.h	/^	const struct Operator* vv0_bv_bX;  \/\/\/< See \\ref Boundary_Comp_Elem_Data_T.$/;"	m	struct:Blended_Parametric_Data_T	typeref:struct:Blended_Parametric_Data_T::Operator
vv0_bv_vX	simulation/geometry/geometry_blended_T.h	/^	const struct Multiarray_Operator* vv0_bv_vX; \/\/\/< See \\ref Boundary_Comp_Elem_Data_T::vv0_vv_vX.$/;"	m	struct:Boundary_Comp_Elem_Data_T	typeref:struct:Boundary_Comp_Elem_Data_T::Multiarray_Operator
vv0_fgc_fgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_fgc_fgc;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_fgc_vgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_fgc_vgc; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_fv_fgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_fv_fgc;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_fv_vgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_fv_vgc;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vX_bX	simulation/geometry/geometry_blended_T.h	/^	const struct Operator* vv0_vX_bX;   \/\/\/< See \\ref Boundary_Comp_Elem_Data_T::vv0_vv_vX.$/;"	m	struct:Boundary_Comp_Elem_Data_T	typeref:struct:Boundary_Comp_Elem_Data_T::Operator
vv0_vgc_fgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vgc_fgc; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vgc_vgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vgc_vgc; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vm_ff	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* vv0_vm_ff[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
vv0_vm_vc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vm_vc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vm_vf	simulation/test_case/solution/element_solution.h	/^	const struct Multiarray_Operator* vv0_vm_vf[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::Multiarray_Operator
vv0_vm_vs	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vm_vs[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vmc_fc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vmc_fc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vmc_vcs	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vmc_vcs; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vms_fc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vms_fc[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vms_fgs	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vms_fgs;   \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vms_vcc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vms_vcc; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vms_vgs	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vms_vgs; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vs_vp	simulation/visualization/element_plotting.h	/^	const struct Multiarray_Operator* vv0_vs_vp;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Plotting_Element	typeref:struct:Plotting_Element::Multiarray_Operator
vv0_vv_bX	simulation/geometry/geometry_blended_T.h	/^	const struct Operator* vv0_vv_bX;   \/\/\/< See \\ref Boundary_Comp_Elem_Data_T::vv0_vv_vX.$/;"	m	struct:Boundary_Comp_Elem_Data_T	typeref:struct:Boundary_Comp_Elem_Data_T::Operator
vv0_vv_bX	simulation/geometry/geometry_blended_T.h	/^	const struct Operator* vv0_vv_bX;  \/\/\/< See \\ref Boundary_Comp_Elem_Data_T.$/;"	m	struct:Blended_Parametric_Data_T	typeref:struct:Blended_Parametric_Data_T::Operator
vv0_vv_bv	simulation/geometry/geometry_blended_T.h	/^	const struct Operator* vv0_vv_bv;   \/\/\/< See \\ref Boundary_Comp_Elem_Data_T::vv0_vv_vX.$/;"	m	struct:Boundary_Comp_Elem_Data_T	typeref:struct:Boundary_Comp_Elem_Data_T::Operator
vv0_vv_bv	simulation/geometry/geometry_blended_T.h	/^	const struct Operator* vv0_vv_bv;  \/\/\/< See \\ref Boundary_Comp_Elem_Data_T.$/;"	m	struct:Blended_Parametric_Data_T	typeref:struct:Blended_Parametric_Data_T::Operator
vv0_vv_fcc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vv_fcc;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vv_fcc	simulation/geometry/geometry_blended_T.h	/^	const struct Operator* vv0_vv_fcc;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Boundary_Comp_Elem_Data_T	typeref:struct:Boundary_Comp_Elem_Data_T::Operator
vv0_vv_fcc	simulation/geometry/geometry_blended_T.h	/^	const struct Operator* vv0_vv_fcc; \/\/\/< See \\ref Boundary_Comp_Elem_Data_T.$/;"	m	struct:Blended_Parametric_Data_T	typeref:struct:Blended_Parametric_Data_T::Operator
vv0_vv_fgc	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vv_fgc;  \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vv_fv	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vv_fv;   \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vv_vX	simulation/geometry/geometry_blended_T.h	/^	const struct Operator* vv0_vv_vX;$/;"	m	struct:Boundary_Comp_Elem_Data_T	typeref:struct:Boundary_Comp_Elem_Data_T::Operator
vv0_vv_vg	simulation/geometry/element_geometry.h	/^	const struct Multiarray_Operator* vv0_vv_vg[2]; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Geometry_Element	typeref:struct:Geometry_Element::Multiarray_Operator
vv0_vv_vv	simulation/solvers/adaptation/element_adaptation.h	/^	const struct Multiarray_Operator* vv0_vv_vv; \/\/\/< See notation in \\ref element_operators.h.$/;"	m	struct:Adaptation_Element	typeref:struct:Adaptation_Element::Multiarray_Operator
w	element/nodes.h	/^	const struct const_Vector_d*const w; \/\/\/< See brief.$/;"	m	struct:const_Nodes
w	element/nodes.h	/^	struct Vector_d* w; \/\/\/< The cubature weights.$/;"	m	struct:Nodes	typeref:struct:Nodes::Vector_d
wJ_fc	simulation/solvers/opg/compute_face_rlhs_opg_T.h	/^	const struct const_Vector_T* wJ_fc; \/\/\/< Face cubature weights "dot-multiplied" by the Jacobian determinant.$/;"	m	struct:Lhs_Operators_OPG_T	typeref:struct:Lhs_Operators_OPG_T::const_Vector_T
w_fc	simulation/solvers/element_solver.h	/^	const struct const_Multiarray_Vector_d* w_fc[2]; \/\/\/< Weights for 'f'ace 'c'ubature.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::const_Multiarray_Vector_d
w_vc	simulation/solvers/element_solver.h	/^	const struct const_Multiarray_Vector_d* w_vc[2]; \/\/\/< Weights for 'v'olume 'c'ubature.$/;"	m	struct:Solver_Element	typeref:struct:Solver_Element::const_Multiarray_Vector_d
w_vc	simulation/test_case/solution/element_solution.h	/^	const struct const_Multiarray_Vector_d* w_vc[2]; \/\/\/< Weights for 'v'olume 'c'ubature 's'traight\/'c'urved.$/;"	m	struct:Solution_Element	typeref:struct:Solution_Element::const_Multiarray_Vector_d
wedges_present	element/element.cpp	/^bool wedges_present (const struct const_Intrusive_List*const elements)$/;"	f
write_std_tables	processing/post/convert_data.py	/^def write_std_tables(f,data_i,output,type_out):$/;"	f
x_max	simulation/geometry/geometry_parametric_T.cpp	/^	     x_max; \/\/\/< Maximum range for the x-coordinates.$/;"	m	struct:Geo_Data	file:
x_scale	simulation/geometry/geometry_parametric_T.cpp	/^	Real x_scale,  \/\/\/< Multiplicative scaling for the x-coordinates.$/;"	m	struct:Geo_Data	file:
xyz	containers/matrix.cpp	/^	double xyz[DIM]; \/\/\/< The coordinates.$/;"	m	struct:Node	file:
xyz	simulation/test_case/boundary/boundary_T.h	/^	const struct const_Multiarray_T* xyz;     \/\/\/< The xyz coordinates.$/;"	m	struct:Boundary_Value_Input_T	typeref:struct:Boundary_Value_Input_T::const_Multiarray_T
xyz	simulation/test_case/flux/flux_T.h	/^	const struct const_Multiarray_T* xyz; \/\/\/< The xyz-coordinates.$/;"	m	struct:Flux_Input_T	typeref:struct:Flux_Input_T::const_Multiarray_T
xyz	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^	Index xyz[DIM]; \/\/\/< The coordinates with type `Index`.$/;"	m	struct:Node_ANN
xyz_ex	simulation/test_case/boundary/boundary_T.h	/^	const struct const_Multiarray_T* xyz_ex;  \/\/\/< \\ref Solver_Face_T::xyz_fc_ex_b.$/;"	m	struct:Boundary_Value_Input_T	typeref:struct:Boundary_Value_Input_T::const_Multiarray_T
xyz_fc	simulation/solvers/face_solver_T.h	/^	const struct const_Multiarray_T* xyz_fc;$/;"	m	struct:Solver_Face_T	typeref:struct:Solver_Face_T::const_Multiarray_T
xyz_fc_ex_b	simulation/solvers/face_solver_T.h	/^	const struct const_Multiarray_T* xyz_fc_ex_b;$/;"	m	struct:Solver_Face_T	typeref:struct:Solver_Face_T::const_Multiarray_T
xyz_l	simulation/geometry/geometry_parametric_T.cpp	/^	Real xyz_l, \/\/\/< Left  xyz-coordinate.$/;"	m	struct:Geo_Data	file:
xyz_min_max	simulation/test_case/solution/restart/approximate_nearest_neighbor.h	/^	const struct const_Matrix_d* xyz_min_max;$/;"	m	struct:SSS_ANN	typeref:struct:SSS_ANN::const_Matrix_d
xyz_p	simulation/visualization/visualization.cpp	/^	const struct const_Multiarray_d* xyz_p;  \/\/\/< "xyz" coordinates at the 'p'lotting nodes.$/;"	m	struct:Volume_Data_Vis	typeref:struct:Volume_Data_Vis::const_Multiarray_d	file:
xyz_r	simulation/geometry/geometry_parametric_T.cpp	/^	     xyz_r; \/\/\/< Right xyz-coordinate.$/;"	m	struct:Geo_Data	file:
xyz_rand	testing/unit/test_unit_inverse_mapping.cpp	/^	const struct const_Matrix_d* xyz_rand; \/\/\/< xyz coordinates corresponding to \\ref Inv_Map_Data::ve_rand.$/;"	m	struct:Inv_Map_Data	typeref:struct:Inv_Map_Data::const_Matrix_d	file:
xyz_std	testing/unit/test_unit_inverse_mapping.cpp	/^	const struct const_Matrix_d* xyz_std;  \/\/\/< xyz coordinates corresponding to \\ref Inv_Map_Data::ve_std.$/;"	m	struct:Inv_Map_Data	typeref:struct:Inv_Map_Data::const_Matrix_d	file:
xyz_symm	testing/unit/test_unit_inverse_mapping.cpp	/^	const struct const_Matrix_d* xyz_symm; \/\/\/< xyz coordinates corresponding to \\ref Inv_Map_Data::ve_symm.$/;"	m	struct:Inv_Map_Data	typeref:struct:Inv_Map_Data::const_Matrix_d	file:
xyz_ve	simulation/computational_elements/volume.h	/^	const struct const_Multiarray_d*const xyz_ve; \/\/\/< The xyz coordinates of the volume vertices.$/;"	m	struct:Volume
xyz_ve	simulation/geometry/geometry_blended_T.h	/^	const struct const_Multiarray_R* xyz_ve; \/\/\/< \\ref Volume::xyz_ve.$/;"	m	struct:Blended_Parametric_Data_T	typeref:struct:Blended_Parametric_Data_T::const_Multiarray_R
xyz_ve	simulation/geometry/geometry_blended_T.h	/^	const struct const_Multiarray_R* xyz_ve; \/\/\/< \\ref Volume::xyz_ve.$/;"	m	struct:Boundary_Comp_Elem_Data_T	typeref:struct:Boundary_Comp_Elem_Data_T::const_Multiarray_R
xyz_ve_ml	simulation/solvers/adaptation/adaptation.h	/^	const struct const_Vector_i* xyz_ve_ml; \/\/\/< Mesh levels to which xyz_ve_refine should be refined.$/;"	m	struct:Adaptation_Data	typeref:struct:Adaptation_Data::const_Vector_i
xyz_ve_p	simulation/solvers/adaptation/adaptation.h	/^	const struct const_Vector_i* xyz_ve_p;  \/\/\/< Polynomial order to which xyz_ve_refine should be refined\/coarsened.$/;"	m	struct:Adaptation_Data	typeref:struct:Adaptation_Data::const_Vector_i
xyz_ve_refine	simulation/solvers/adaptation/adaptation.h	/^	const struct const_Multiarray_d* xyz_ve_refine;$/;"	m	struct:Adaptation_Data	typeref:struct:Adaptation_Data::const_Multiarray_d
z_yxpz_RTT	general/def_templates_math_functions.h	40;"	d
z_yxpz_RTT	general/def_templates_math_functions.h	72;"	d
z_yxpz_RTT	general/math_functions_T.cpp	/^void z_yxpz_RTT (const int n, const Real* x, const Type* y, Type* z)$/;"	f
z_yxpz_RTT	general/undef_templates_math_functions.h	34;"	d
z_yxpz_T	general/def_templates_math_functions.h	39;"	d
z_yxpz_T	general/def_templates_math_functions.h	71;"	d
z_yxpz_T	general/math_functions_T.cpp	/^void z_yxpz_T (const int n, const Type* x, const Type* y, Type* z)$/;"	f
z_yxpz_T	general/undef_templates_math_functions.h	33;"	d
zero_memory_volumes	simulation/solvers/solve.cpp	/^static void zero_memory_volumes (struct Intrusive_List* volumes)$/;"	f	file:
zero_memory_volumes_flux_imbalances	simulation/solvers/solve.cpp	/^static void zero_memory_volumes_flux_imbalances (struct Intrusive_List* volumes)$/;"	f	file:
