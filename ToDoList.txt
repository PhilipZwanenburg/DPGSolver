
Wednesday:
	(Done) - Use the chain rule to compute the metric terms in the volume of the element 
		using the parametric mapping.

		(Done) - Find the xi, eta values on the parametric domain of the cubature points
			to compute the derivatives at. 

		(Done) - Use the additional mapping from the parametric domain onto the 
			parent domain to compute the derivatives of the mapping to form 
			the metric terms.

		(Done) - Use a P1 NURBS Patch to compare the metric terms with as a first step

	- Use the chain rule to compute metric terms on the face of the element.

		- Find the xi, eta values on the parametric domain of the face cubature 
			points to compute the derivatives at. 

		- Use the additional mapping from the parametric domain onto 
			the parent domain to compute the derivatives of the mapping to 
			form the face metric terms.

		- Create a python case that will compute the metrics as well (use lambda
			functions). Verify the metric computation on one given element
			by using the same mapping case from before and this one element.

	- Run the NURBS bump test case and verify that the solution converges. 
		Visualize the results.

Monday:
	- Create a NACA 0012 airfoil patch

		- Perform a NURBS spline approximation and fit the spline around the
			the airfoil. Knot repeatedness not needed yet (will need to be done
			for the leading edge eventually). Have the spline wrap around
			from the trailing edge, under the airfoil, and back to the
			trailing edge.

		- Create the farfield as well as an o-grid. 

		- Create the gmsh file to accompany the patch.

			- Create slip wall boundary conditions at the bottom, farfield
				at the top and then periodic at the line at which the patch
				touches each other at rear of the airfoil.

	- Create the lift coefficient objective function.

		- Compute the lift by integrating the pressure on any face that had 
			a slip wall BC. Then just sum up all the contributions. 

		- Create a real version of the function first. Then, create 
			a templated version so that the function may be called
			with complex doubles (for the adjoint computation)

	- Compute the adjoint for the lift coefficient case.

		- Use the linearization of the LHS in the code

		- Compute the linearization of the RHS by using the complex step
			- Verify using finite differences. Create a unit test 
				to verify linearization with finite differences. 
				Eventually, perhaps, compute the linearization analytically

		- Solve the adjoint using PETSc

	- Perform an orders convergence test to verify that the orders of accuracy hold
		for the NURBS parametric mapping case. Do the Gaussian Bump case first.



ToDo:
	- Implement efficient NURBS mapping derivative using NURBS book 
		algorithm which gets around the use of the derivative of the
		basis functions.


