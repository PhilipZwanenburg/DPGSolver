
	- Create a test for the optimization run similar to test_integration_run

	(Done) - Create the lift coefficient objective function.

		(Done) - Compute the lift by integrating the pressure on any face that had 
			a slip wall BC. Then just sum up all the contributions. 

	- Compute the adjoint for the lift coefficient case.

		- Make the lift coefficient function templated (so it can handle complex
		variables and normal vector terms)

		- Use the linearization of the LHS in the code

		- Compute the linearization of the RHS by using the complex step
			
			- Verify using finite differences. Create a unit test 
				to verify linearization with finite differences. 
				Eventually, perhaps, compute the linearization analytically

		- Solve the adjoint using PETSc

			- Output PETSc convergence for the adjoint solve

		- Plot the density adjoint variation

	- Try to get a transonic case running for the airfoil case with a shock
		(to be used potentially for a drag optimization)




	- Check implementation of metric terms (NURBS) to ensure that the NURBS 
		mapping is used for the metrics properly.

		- Compute xyz_fc now using the NURBS mapping (get around geom_coeff).

		- Set geom_coef to NULL or all zeros and ensure that the code still runs

			- In the plotting section, compute xyz_p values using the mapping

		- Check if the adaptation case is implemented correctly.


ToDo:
	- Implement efficient NURBS mapping derivative using NURBS book 
		algorithm which gets around the use of the derivative of the
		basis functions.
	- Alternate approach of using the NURBS metric terms
		- Compute the metric terms using the NURBS mapping at the metric nodes. This will
				now form a basis that can be used to find the values at any other nodes. 
		- Issue is, how to get the geom_coef values using the metric terms.
			- Traditionally what is done: 
				- For the volume cubature nodes, we use an operator to go 
					from vm (volume metric) to vc (volume cubature). 
				- For the face, we once again interpolate from the vm (volume metric)
					to the fc (face cubature) nodes. 


Optimization Cases:

	- Accompanying the .geo file will need to be an optimization.data file which will
		hold which NURBS control points should be treated as design variables and
		what their degrees of freedom are (use the control point indeces in the 
		.geo file)

	- Will set function pointers to the objective function to be used in the 
		optimization. This way, can easily switch between optimizing one 
		objective to another. If each objective is templated properly, then
		computing the partials of the objective will be simple.

			- Simply, take as input to the function the pointer to the objective
				function and then perform all the complex steps to find all the
				terms of the RHS and sensitivity equation terms.

			- Return a multiarray with the data (RHS and sensitivity equation terms)






